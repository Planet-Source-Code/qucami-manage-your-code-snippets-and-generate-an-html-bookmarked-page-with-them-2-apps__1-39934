<html>
<head>
<meta http-equiv="Content-Language" content="en-gb">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>VB Tips</title>
</head>
<body>
<p><font face="Arial" size="3"><a name="Top"><b>Visual Basic Tips</b></a></font></p>
<p><font face="Arial" size="2"><b>
<a href="#Tip0000">validate cc number</a><br>
<a href="#Tip0001">create file path</a><br>
<a href="#Tip0002">quicksort numeric</a><br>
<a href="#Tip0003">quicksort string</a><br>
<a href="#Tip0004">play a wav file - working</a><br>
<a href="#Tip0005">colour code to RGB</a><br>
<a href="#Tip0006">email using CDO 1.21 and attachments</a><br>
<a href="#Tip0007">Get file name from path</a><br>
<a href="#Tip0008">get file path</a><br>
<a href="#Tip0009">kill a task - working!!</a><br>
<a href="#Tip0010">list running processes class</a><br>
<a href="#Tip0011">kill process</a><br>
<a href="#Tip0012">kill task</a><br>
<a href="#Tip0013">Print a textbox</a><br>
<a href="#Tip0014">Add/remove network connections</a><br>
<a href="#Tip0015">Generate a Temporary Filename</a><br>
<a href="#Tip0016">control panel shell parameters</a><br>
<a href="#Tip0017">add a button to the control box</a><br>
<a href="#Tip0018">disable close button</a><br>
<a href="#Tip0019">return sub directories</a><br>
<a href="#Tip0020">typed URL location</a><br>
<a href="#Tip0021">transparent form when out of focus</a><br>
<a href="#Tip0022">ExitProcess - exit with return code</a><br>
<a href="#Tip0023">press virtual key</a><br>
<a href="#Tip0024">INI processing - the coolest</a><br>
<a href="#Tip0025">task invisibility</a><br>
<a href="#Tip0026">BASE Conversion dec to any</a><br>
<a href="#Tip0027">BASE conversion any to dec</a><br>
<a href="#Tip0028">compare 2 user defined types</a><br>
<a href="#Tip0029">VB to Excel example</a><br>
<a href="#Tip0030">laser draw effect</a><br>
<a href="#Tip0031">list files and folders under a folder</a><br>
<a href="#Tip0032">capture screen to file (screen print)</a><br>
<a href="#Tip0033">sleep API</a><br>
<a href="#Tip0034">get remote server time</a><br>
<a href="#Tip0035">transaprent form 5</a><br>
<a href="#Tip0036">fast decimal to binary</a><br>
<a href="#Tip0037">Excel stuff 3 (working)</a><br>
<a href="#Tip0038">Excel stuff 2</a><br>
<a href="#Tip0039">Excel stuff 1</a><br>
<a href="#Tip0040">array building without subscripts</a><br>
<a href="#Tip0041">kill application</a><br>
<a href="#Tip0042">make a .reg file</a><br>
<a href="#Tip0043">detect application focus</a><br>
<a href="#Tip0044">log time</a><br>
<a href="#Tip0045">screen resolution</a><br>
<a href="#Tip0046">ini delete</a><br>
<a href="#Tip0047">ini write</a><br>
<a href="#Tip0048">ini read</a><br>
<a href="#Tip0049">trim textbox width to width of text</a><br>
<a href="#Tip0050">decimal to binary</a><br>
<a href="#Tip0051">open an app with it's default application</a><br>
<a href="#Tip0052">detect internet connection</a><br>
<a href="#Tip0053">registry bits n bobs</a><br>
<a href="#Tip0054">complete INI file handling</a><br>
<a href="#Tip0055">send focal form to the clipboard!</a><br>
<a href="#Tip0056">windows directory path</a><br>
<a href="#Tip0057">Get File description from API</a><br>
<a href="#Tip0058">Get File dates</a><br>
<a href="#Tip0059">shelling control panel applets</a><br>
<a href="#Tip0060">email using CDO 1.2 reference</a><br>
<a href="#Tip0061">get short file name</a><br>
<a href="#Tip0062">get windows temporary directory</a><br>
<a href="#Tip0063">get file date info</a><br>
<a href="#Tip0064">get file version</a><br>
<a href="#Tip0065">display a line of 16 bytes of data, hex followed by displayable chars</a><br>
<a href="#Tip0066">email using mapi with attachments</a><br>
<a href="#Tip0067">another email mapi</a><br>
<a href="#Tip0068">days in the months</a><br>
<a href="#Tip0069">convert greg dates to julian</a><br>
<a href="#Tip0070">convert julian dates to gregorian</a><br>
<a href="#Tip0071">get userid</a><br>
<a href="#Tip0072">decimal to any base</a><br>
<a href="#Tip0073">any base to decimal</a><br>
<a href="#Tip0074">How do I create controls dynamically (at run-time)?</a><br>
<a href="#Tip0075">prevent multiple instances</a><br>
<a href="#Tip0076">shift key pressed?</a><br>
<a href="#Tip0077">check is a printer is installed</a><br>
<a href="#Tip0078">drag a captionless form</a><br>
<a href="#Tip0079">Return True if a file exists</a><br>
<a href="#Tip0080">convert hex to decimal</a><br>
<a href="#Tip0081">pop up menu from a textbox</a><br>
<a href="#Tip0082">Read text files in one operation</a><br>
<a href="#Tip0083">File System Object</a><br>
<a href="#Tip0084">HOWTO: Use CDO (1.x) To Read MAPI Address Book Properties</a><br>
<a href="#Tip0085">HOWTO: Get Windows NT DOMAIN\UserName of Exchange Mailbox Using CDO/VB</a><br>
<a href="#Tip0086">get windows Directory</a><br>
<a href="#Tip0087">Hide task from task list</a><br>
<a href="#Tip0088">quicker than rs.fields(x)</a><br>
<a href="#Tip0089">flash a window</a><br>
<a href="#Tip0090">wingdings arrows</a><br>
<a href="#Tip0091">lines in a multiline textbox</a><br>
<a href="#Tip0092">How to implement hotkeys for text boxes? </a><br>
<a href="#Tip0093">How to create a textbox that lets you insert tabs? </a><br>
<a href="#Tip0094">How to make text box that displays "*" when you tpye in (For password purpose)? </a><br>
<a href="#Tip0095">How to create message boxes with those cool red X's? </a><br>
<a href="#Tip0096">How to format dates so that they look correct in all date and langauge formats? </a><br>
<a href="#Tip0097">How to compare two strings using wildcards? </a><br>
<a href="#Tip0098">How to create a label that is vertically oriented? </a><br>
<a href="#Tip0099">How to create multi-column combo box? </a><br>
<a href="#Tip0100">How to set the source of one combo to be the contents of another combo? </a><br>
<a href="#Tip0101">How to get ride of the quotation marks when saving strings in a text file? </a><br>
<a href="#Tip0102">How to include a .wav file in a .exe file? </a><br>
<a href="#Tip0103">How to enable the form close button? </a><br>
<a href="#Tip0104">How to add text items with a different color in a Listbox? </a><br>
<a href="#Tip0105">How to load text file into a Listbox? </a><br>
<a href="#Tip0106">How to change the content of a Statusbar at run time? </a><br>
<a href="#Tip0107">How to detect the change in the Textbox? </a><br>
<a href="#Tip0108">How to make a menu popup from a Commandbutton? </a><br>
<a href="#Tip0109">How to copy the content of text1 into text2? </a><br>
<a href="#Tip0110">How to encrypt text? </a><br>
<a href="#Tip0111">How to create menus at run time? </a><br>
<a href="#Tip0112">How to put 13 X 13 bitmaps into a menu? </a><br>
<a href="#Tip0113">How to round a number to nearest 10, 100, 1000, etc.? </a><br>
<a href="#Tip0114">How to shell to web address? </a><br>
<a href="#Tip0115">How to perform generic error handling routine? </a><br>
<a href="#Tip0116">How to check for 4-digit year date? </a><br>
<a href="#Tip0117">How to calculate the age based on date of birth? </a><br>
<a href="#Tip0118">How to tell the difference between CDbl and Val function? </a><br>
<a href="#Tip0119">How to code Toolbar click events? </a><br>
<a href="#Tip0120">Msgbox tips</a><br>
<a href="#Tip0121">How to copy text to the clipboard? </a><br>
<a href="#Tip0122">How to copy text from the clipboard? </a><br>
<a href="#Tip0123">How to use Undo function for Textbox or Combobox? </a><br>
<a href="#Tip0124">How to toggle between Insert & Overwrite in a text box? </a><br>
<a href="#Tip0125">How to use the advanced feature of MsgBox? </a><br>
<a href="#Tip0126">How to capture keys pressed to use as keyboard shortcuts? </a><br>
<a href="#Tip0127">How to call a Command button without clicking it? </a><br>
<a href="#Tip0128">How to make Crystal Reports run faster? </a><br>
<a href="#Tip0129">How to fix the problem of playing the .wav file only once? </a><br>
<a href="#Tip0130">How to show a modeless form? </a><br>
<a href="#Tip0131">How to show a modal form? </a><br>
<a href="#Tip0132">How to change the button's foreground color? </a><br>
<a href="#Tip0133">How to change the mouse pointer? </a><br>
<a href="#Tip0134">How to use SetAttr function? </a><br>
<a href="#Tip0135">How to add something to an existing file by overwriting it? </a><br>
<a href="#Tip0136">How to add something to an existing file (with data)? </a><br>
<a href="#Tip0137">How to read a file character by character? </a><br>
<a href="#Tip0138">How to search Listboxes as you type? </a><br>
<a href="#Tip0139">How to get the Number of Lines In a TextBox? </a><br>
<a href="#Tip0140">How to get rid of leading zeros in strings? </a><br>
<a href="#Tip0141">How to use Mid function? </a><br>
<a href="#Tip0142">How to use Left function? </a><br>
<a href="#Tip0143">How to use Right function? </a><br>
<a href="#Tip0144">How to use LTrim, RTrim, and Trim Functions? </a><br>
<a href="#Tip0145">How to use Len function? </a><br>
<a href="#Tip0146">How to add records in the database? </a><br>
</p></b></font>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0000"><b>VALIDATE CC NUMBER</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Command1_Click()<br>
Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
Dim&nbsp;y&nbsp;As&nbsp;Integer<br>
Dim&nbsp;iMultiplier&nbsp;As&nbsp;Integer<br>
Dim&nbsp;dTotal&nbsp;As&nbsp;Double<br>
Dim&nbsp;sRC&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Text1&nbsp;=&nbsp;Trim(Text1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;iMultiplier&nbsp;=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;dTotal&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;Len(Text1)&nbsp;To&nbsp;1&nbsp;Step&nbsp;-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sRC&nbsp;=&nbsp;CStr((CInt(Mid(Text1,&nbsp;x,&nbsp;1))&nbsp;*&nbsp;iMultiplier))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;y&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(sRC)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dTotal&nbsp;=&nbsp;dTotal&nbsp;+&nbsp;CInt(Mid(sRC,&nbsp;y,&nbsp;1))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iMultiplier&nbsp;=&nbsp;IIf(iMultiplier&nbsp;=&nbsp;1,&nbsp;2,&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;dTotal&nbsp;Mod&nbsp;10&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Label1&nbsp;=&nbsp;"Valid"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Label1&nbsp;=&nbsp;"Invalid"<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0001"><b>CREATE FILE PATH</b></a></b></font><br>
<font face="Courier New" size="2">
x&nbsp;=&nbsp;CreatePath("c:\program&nbsp;files\new&nbsp;app\database\references")<br>
<br>
Declare&nbsp;Function&nbsp;MakeSureDirectoryPathExists&nbsp;Lib&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"IMAGEHLP.DLL"&nbsp;(ByVal&nbsp;DirPath&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Function&nbsp;CreatePath(NewPath)&nbsp;As&nbsp;Boolean<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Add&nbsp;a&nbsp;trailing&nbsp;slash&nbsp;if&nbsp;none<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Right(NewPath,&nbsp;1)&nbsp;<>&nbsp;"\"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewPath&nbsp;=&nbsp;NewPath&nbsp;&&nbsp;"\"<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Call&nbsp;API<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;MakeSureDirectoryPathExists(NewPath)&nbsp;<>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'No&nbsp;errors,&nbsp;return&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreatePath&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0002"><b>QUICKSORT NUMERIC</b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Sub&nbsp;QuickSortNumericAscending(narray()&nbsp;As&nbsp;Long,&nbsp;inLow&nbsp;As&nbsp;Long,&nbsp;inHi&nbsp;As&nbsp;Long)<br>
<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;pivot&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpSwap&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpLow&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpHi&nbsp;&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;inLow<br>
&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;inHi<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;pivot&nbsp;=&nbsp;narray((inLow&nbsp;+&nbsp;inHi)&nbsp;/&nbsp;2)<br>
<br>
&nbsp;&nbsp;&nbsp;While&nbsp;(tmpLow&nbsp;<=&nbsp;tmpHi)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;(narray(tmpLow)&nbsp;<&nbsp;pivot&nbsp;And&nbsp;tmpLow&nbsp;<&nbsp;inHi)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;tmpLow&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;(pivot&nbsp;<&nbsp;narray(tmpHi)&nbsp;And&nbsp;tmpHi&nbsp;>&nbsp;inLow)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;tmpHi&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(tmpLow&nbsp;<=&nbsp;tmpHi)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpSwap&nbsp;=&nbsp;narray(tmpLow)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;narray(tmpLow)&nbsp;=&nbsp;narray(tmpHi)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;narray(tmpHi)&nbsp;=&nbsp;tmpSwap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;tmpLow&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;tmpHi&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;If&nbsp;(inLow&nbsp;<&nbsp;tmpHi)&nbsp;Then&nbsp;QuickSortNumericAscending&nbsp;narray(),&nbsp;inLow,&nbsp;tmpHi<br>
&nbsp;&nbsp;&nbsp;If&nbsp;(tmpLow&nbsp;<&nbsp;inHi)&nbsp;Then&nbsp;QuickSortNumericAscending&nbsp;narray(),&nbsp;tmpLow,&nbsp;inHi<br>
<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0003"><b>QUICKSORT STRING</b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Sub&nbsp;QuickSortStringsAscending(sarray()&nbsp;As&nbsp;String,&nbsp;inLow&nbsp;As&nbsp;Long,&nbsp;inHi&nbsp;As&nbsp;Long)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;pivot&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpSwap&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpLow&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpHi&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;inLow<br>
&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;inHi<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;pivot&nbsp;=&nbsp;sarray((inLow&nbsp;+&nbsp;inHi)&nbsp;/&nbsp;2)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;While&nbsp;(tmpLow&nbsp;<=&nbsp;tmpHi)<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;(sarray(tmpLow)&nbsp;<&nbsp;pivot&nbsp;And&nbsp;tmpLow&nbsp;<&nbsp;inHi)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;tmpLow&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;(pivot&nbsp;<&nbsp;sarray(tmpHi)&nbsp;And&nbsp;tmpHi&nbsp;>&nbsp;inLow)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;tmpHi&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(tmpLow&nbsp;<=&nbsp;tmpHi)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpSwap&nbsp;=&nbsp;sarray(tmpLow)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sarray(tmpLow)&nbsp;=&nbsp;sarray(tmpHi)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sarray(tmpHi)&nbsp;=&nbsp;tmpSwap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpLow&nbsp;=&nbsp;tmpLow&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpHi&nbsp;=&nbsp;tmpHi&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;If&nbsp;(inLow&nbsp;<&nbsp;tmpHi)&nbsp;Then&nbsp;QuickSortStringsAscending&nbsp;sarray(),&nbsp;inLow,&nbsp;tmpHi<br>
&nbsp;&nbsp;&nbsp;If&nbsp;(tmpLow&nbsp;<&nbsp;inHi)&nbsp;Then&nbsp;QuickSortStringsAscending&nbsp;sarray(),&nbsp;tmpLow,&nbsp;inHi<br>
&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0004"><b>PLAY A WAV FILE - WORKING</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;sndPlaySound&nbsp;Lib&nbsp;"winmm"&nbsp;Alias&nbsp;"sndPlaySoundA"&nbsp;(ByVal&nbsp;lpszSoundName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;uFlags&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Const&nbsp;RedAlert&nbsp;As&nbsp;String&nbsp;=&nbsp;"H:\media\mkt&nbsp;Redalert.wav"<br>
<br>
sndPlaySound&nbsp;RedAlert,&nbsp;2<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0005"><b>COLOUR CODE TO RGB</b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Function&nbsp;ColorCodeToRGB(lColorCode&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Integer()<br>
Dim&nbsp;iOut(3)&nbsp;As&nbsp;Integer<br>
Dim&nbsp;lColor&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;lColor&nbsp;=&nbsp;lColorCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'work&nbsp;long<br>
&nbsp;&nbsp;&nbsp;&nbsp;iOut(0)&nbsp;=&nbsp;lColor&nbsp;Mod&nbsp;&H100&nbsp;&nbsp;'get&nbsp;red&nbsp;component<br>
&nbsp;&nbsp;&nbsp;&nbsp;lColor&nbsp;=&nbsp;lColor&nbsp;\&nbsp;&H100&nbsp;&nbsp;'divide<br>
&nbsp;&nbsp;&nbsp;&nbsp;iOut(1)&nbsp;=&nbsp;lColor&nbsp;Mod&nbsp;&H100&nbsp;'get&nbsp;green&nbsp;component<br>
&nbsp;&nbsp;&nbsp;&nbsp;lColor&nbsp;=&nbsp;lColor&nbsp;\&nbsp;&H100&nbsp;&nbsp;'divide<br>
&nbsp;&nbsp;&nbsp;&nbsp;iOut(2)&nbsp;=&nbsp;lColor&nbsp;Mod&nbsp;&H100&nbsp;'get&nbsp;blue&nbsp;component<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;ColorCodeToRGB&nbsp;=&nbsp;iOut<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0006"><b>EMAIL USING CDO 1.21 AND ATTACHMENTS</b></a></b></font><br>
<font face="Courier New" size="2">
Sub&nbsp;EmailUser(From&nbsp;As&nbsp;String,&nbsp;SendTo&nbsp;As&nbsp;String,&nbsp;Subject&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;EmailText&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;AttachmentPath&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;Attachment&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;CC&nbsp;As&nbsp;String)<br>
Const&nbsp;constRoutine&nbsp;As&nbsp;String&nbsp;=&nbsp;"SendEmail"<br>
<br>
Dim&nbsp;cdoSession&nbsp;As&nbsp;Object<br>
Dim&nbsp;oFolder&nbsp;As&nbsp;Object<br>
Dim&nbsp;oMsg&nbsp;As&nbsp;Object<br>
Dim&nbsp;oRcpt&nbsp;As&nbsp;Object<br>
Dim&nbsp;oMessages&nbsp;As&nbsp;Object<br>
Dim&nbsp;objAttachent&nbsp;As&nbsp;Object<br>
<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;cdoSession&nbsp;=&nbsp;CreateObject("MAPI.Session")<br>
&nbsp;&nbsp;&nbsp;&nbsp;cdoSession.Logon&nbsp;"MS&nbsp;Exchange&nbsp;Settings"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oFolder&nbsp;=&nbsp;cdoSession.Outbox<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMessages&nbsp;=&nbsp;oFolder.Messages<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMsg&nbsp;=&nbsp;oMessages.Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oRcpt&nbsp;=&nbsp;oMsg.Recipients<br>
&nbsp;&nbsp;&nbsp;&nbsp;oRcpt.Add&nbsp;,&nbsp;"SMTP:"&nbsp;&&nbsp;SendTo,&nbsp;CdoTo<br>
&nbsp;&nbsp;&nbsp;&nbsp;oRcpt.Resolve<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Subject&nbsp;=&nbsp;Subject<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Text&nbsp;=&nbsp;EmailText<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;IsMissing(AttachmentPath)&nbsp;And&nbsp;Not&nbsp;IsMissing(Attachment)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objAttachent&nbsp;=&nbsp;oMsg.Attachments.Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAttachent.Type&nbsp;=&nbsp;CdoFileData<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAttachent.Position&nbsp;=&nbsp;-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAttachent.Source&nbsp;=&nbsp;AttachmentPath&nbsp;&&nbsp;"\"&nbsp;&&nbsp;Attachment<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAttachent.Name&nbsp;=&nbsp;Attachment<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Update<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Send<br>
&nbsp;&nbsp;&nbsp;&nbsp;cdoSession.Logoff<br>
<br>
ExitMe:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objAttachent&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;cdoSession&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oFolder&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMsg&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oRcpt&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMessages&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
<br>
ErrorHandler:<br>
&nbsp;&nbsp;&nbsp;&nbsp;P11D_MsgBox&nbsp;"There&nbsp;was&nbsp;an&nbsp;error&nbsp;attempting&nbsp;to&nbsp;email&nbsp;this&nbsp;Car&nbsp;Calc.&nbsp;&nbsp;Error&nbsp;detail&nbsp;follows"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;Err.Description&nbsp;&&nbsp;"&nbsp;("&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;")"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"Please&nbsp;contact&nbsp;MIS&nbsp;Finance&nbsp;&&&nbsp;Administration&nbsp;on&nbsp;extension&nbsp;3456&nbsp;to&nbsp;resolve&nbsp;this&nbsp;issue",&nbsp;99,&nbsp;App.Title<br>
&nbsp;&nbsp;&nbsp;&nbsp;Resume&nbsp;ExitMe<br>
<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0007"><b>GET FILE NAME FROM PATH</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
Function&nbsp;GetFileName(sIn&nbsp;As&nbsp;String)<br>
GetFileName&nbsp;=&nbsp;""<br>
If&nbsp;InStr(sIn,&nbsp;"\")&nbsp;=&nbsp;0&nbsp;Then&nbsp;Exit&nbsp;Function<br>
Dim&nbsp;xPos&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;xPos&nbsp;=&nbsp;InStrRev(sIn,&nbsp;"\")<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetFileName&nbsp;=&nbsp;Mid(sIn,&nbsp;xPos&nbsp;+&nbsp;1)<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0008"><b>GET FILE PATH</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;GetFilePath(sIn&nbsp;As&nbsp;String)<br>
GetFilePath&nbsp;=&nbsp;""<br>
If&nbsp;InStr(sIn,&nbsp;"\")&nbsp;=&nbsp;0&nbsp;Then&nbsp;Exit&nbsp;Function<br>
Dim&nbsp;xPos&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;xPos&nbsp;=&nbsp;InStrRev(sIn,&nbsp;"\")<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetFilePath&nbsp;=&nbsp;Left(sIn,&nbsp;xPos&nbsp;-&nbsp;1)<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0009"><b>KILL A TASK - WORKING!!</b></a></b></font><br>
<font face="Courier New" size="2">
Option&nbsp;Explicit<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetVersion&nbsp;Lib&nbsp;"kernel32"&nbsp;()&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetCurrentProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;()&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;OpenProcessToken&nbsp;Lib&nbsp;"advapi32"&nbsp;(ByVal&nbsp;ProcessHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;DesiredAccess&nbsp;As&nbsp;Long,&nbsp;TokenHandle&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;LookupPrivilegeValue&nbsp;Lib&nbsp;"advapi32"&nbsp;Alias&nbsp;"LookupPrivilegeValueA"&nbsp;(ByVal&nbsp;lpSystemName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpName&nbsp;As&nbsp;String,&nbsp;lpLuid&nbsp;As&nbsp;LUID)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;AdjustTokenPrivileges&nbsp;Lib&nbsp;"advapi32"&nbsp;(ByVal&nbsp;TokenHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;DisableAllPrivileges&nbsp;As&nbsp;Long,&nbsp;NewState&nbsp;As&nbsp;TOKEN_PRIVILEGES,&nbsp;ByVal&nbsp;BufferLength&nbsp;As&nbsp;Long,&nbsp;PreviousState&nbsp;As&nbsp;Any,&nbsp;ReturnLength&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;TerminateProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hProcess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uExitCode&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;OpenProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;bInheritHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwProcessId&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;CreateToolhelp32Snapshot&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwFlags&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;th32ProcessID&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;Process32First&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hSnapshot&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;lppe&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;Process32Next&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hSnapshot&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;lppe&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;EnumProcesses&nbsp;Lib&nbsp;"psapi.dll"&nbsp;(ByRef&nbsp;lpidProcess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;cb&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;cbNeeded&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetModuleFileNameExA&nbsp;Lib&nbsp;"psapi.dll"&nbsp;(ByVal&nbsp;hProcess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hModule&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;ModuleName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;nSize&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;EnumProcessModules&nbsp;Lib&nbsp;"psapi.dll"&nbsp;(ByVal&nbsp;hProcess&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;lphModule&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;cb&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;cbNeeded&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Public&nbsp;Const&nbsp;MAX_PATH&nbsp;=&nbsp;260<br>
Public&nbsp;Const&nbsp;PROCESS_QUERY_INFORMATION&nbsp;=&nbsp;1024<br>
Public&nbsp;Const&nbsp;PROCESS_VM_READ&nbsp;=&nbsp;16<br>
Public&nbsp;Const&nbsp;TOKEN_ADJUST_PRIVILEGES&nbsp;=&nbsp;&H20<br>
Public&nbsp;Const&nbsp;TOKEN_QUERY&nbsp;=&nbsp;&H8<br>
Public&nbsp;Const&nbsp;SE_PRIVILEGE_ENABLED&nbsp;=&nbsp;&H2<br>
Public&nbsp;Const&nbsp;PROCESS_ALL_ACCESS&nbsp;=&nbsp;&H1F0FFF<br>
<br>
Public&nbsp;Type&nbsp;LUID<br>
&nbsp;&nbsp;&nbsp;lowpart&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;highpart&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Public&nbsp;Type&nbsp;TOKEN_PRIVILEGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;PrivilegeCount&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;LuidUDT&nbsp;As&nbsp;LUID<br>
&nbsp;&nbsp;&nbsp;&nbsp;Attributes&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Public&nbsp;Type&nbsp;PROCESSENTRY32<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwSize&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntUsage&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32DefaultHeapID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ModuleID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntThreads&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ParentProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;pcPriClassBase&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwFlags&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;szExeFile&nbsp;As&nbsp;String&nbsp;*&nbsp;MAX_PATH<br>
End&nbsp;Type<br>
Sub&nbsp;killoutstandingexcels(ByRef&nbsp;lBeforePIDs()&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;lAfterPIDs()&nbsp;As&nbsp;Long)<br>
Dim&nbsp;px&nbsp;As&nbsp;Long,&nbsp;py&nbsp;As&nbsp;Long<br>
Dim&nbsp;bWasThere&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;px&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(lAfterPIDs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bWasThere&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;py&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(lBeforePIDs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lBeforePIDs(py)&nbsp;=&nbsp;lAfterPIDs(px)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bWasThere&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;py<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;bWasThere&nbsp;Then&nbsp;KillProcess&nbsp;lAfterPIDs(px)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoEvents<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;px<br>
End&nbsp;Sub<br>
Function&nbsp;KillProcess(ByVal&nbsp;hProcessID&nbsp;As&nbsp;Long,&nbsp;Optional&nbsp;ByVal&nbsp;ExitCode&nbsp;As&nbsp;Long)&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hToken&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hProcess&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tp&nbsp;As&nbsp;TOKEN_PRIVILEGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetVersion()&nbsp;>=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;OpenProcessToken(GetCurrentProcess(),&nbsp;TOKEN_ADJUST_PRIVILEGES&nbsp;Or&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TOKEN_QUERY,&nbsp;hToken)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;LookupPrivilegeValue("",&nbsp;"SeDebugPrivilege",&nbsp;tp.LuidUDT)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.PrivilegeCount&nbsp;=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.Attributes&nbsp;=&nbsp;SE_PRIVILEGE_ENABLED<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;AdjustTokenPrivileges(hToken,&nbsp;False,&nbsp;tp,&nbsp;0,&nbsp;ByVal&nbsp;0&,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;0&)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;hProcess&nbsp;=&nbsp;OpenProcess(PROCESS_ALL_ACCESS,&nbsp;0,&nbsp;hProcessID)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hProcess&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KillProcess&nbsp;=&nbsp;(TerminateProcess(hProcess,&nbsp;ExitCode)&nbsp;<>&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle&nbsp;hProcess<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetVersion()&nbsp;>=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.Attributes&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AdjustTokenPrivileges&nbsp;hToken,&nbsp;False,&nbsp;tp,&nbsp;0,&nbsp;ByVal&nbsp;0&,&nbsp;ByVal&nbsp;0&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
CleanUp:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hToken&nbsp;Then&nbsp;CloseHandle&nbsp;hToken<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Function<br>
<br>
Function&nbsp;FindAllExcelProcessIDs()&nbsp;As&nbsp;Long()<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;MaxPIDs&nbsp;=&nbsp;256<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;dwPIDs(1&nbsp;To&nbsp;MaxPIDs)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;szPIDs&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;cb2&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hPr&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;cproc&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;Modules(1&nbsp;To&nbsp;MaxPIDs)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lr&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;mName&nbsp;As&nbsp;String&nbsp;*&nbsp;MAX_PATH<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lPIDs()&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;lPIDs(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;szPIDs&nbsp;=&nbsp;MaxPIDs&nbsp;*&nbsp;4<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;EnumProcesses(dwPIDs(1),&nbsp;szPIDs,&nbsp;cb2)&nbsp;<>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cproc&nbsp;=&nbsp;cb2&nbsp;/&nbsp;4<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;1&nbsp;To&nbsp;cproc<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hPr&nbsp;=&nbsp;OpenProcess(PROCESS_QUERY_INFORMATION&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Or&nbsp;PROCESS_VM_READ,&nbsp;0,&nbsp;dwPIDs(i))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hPr&nbsp;<>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;EnumProcessModules(hPr,&nbsp;Modules(1),&nbsp;MaxPIDs,&nbsp;cb2)&nbsp;<>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mName&nbsp;=&nbsp;Space(MAX_PATH)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lr&nbsp;=&nbsp;GetModuleFileNameExA(hPr,&nbsp;Modules(1),&nbsp;mName,&nbsp;MAX_PATH)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(mName&nbsp;<>&nbsp;"")&nbsp;And&nbsp;InStr(UCase(mName),&nbsp;"EXCEL.EXE")&nbsp;>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;Preserve&nbsp;lPIDs(UBound(lPIDs)&nbsp;+&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lPIDs(UBound(lPIDs)&nbsp;-&nbsp;1)&nbsp;=&nbsp;dwPIDs(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle&nbsp;(hPr)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;i<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;UBound(lPIDs)&nbsp;>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;Preserve&nbsp;lPIDs(UBound(lPIDs)&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;FindAllExcelProcessIDs&nbsp;=&nbsp;lPIDs()<br>
End&nbsp;Function<br>
Function&nbsp;C23(A&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;i&nbsp;As&nbsp;Long<br>
i&nbsp;=&nbsp;InStr(1,&nbsp;A,&nbsp;Chr(0),&nbsp;vbBinaryCompare)<br>
If&nbsp;(i&nbsp;<>&nbsp;0)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;C23&nbsp;=&nbsp;Mid(A,&nbsp;1,&nbsp;i&nbsp;-&nbsp;1)<br>
Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;C23&nbsp;=&nbsp;""<br>
End&nbsp;If<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0010"><b>LIST RUNNING PROCESSES CLASS</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Const&nbsp;TH32CS_SNAPPROCESS&nbsp;As&nbsp;Long&nbsp;=&nbsp;2&<br>
Private&nbsp;Const&nbsp;MAX_PATH&nbsp;As&nbsp;Integer&nbsp;=&nbsp;260<br>
<br>
<br>
Private&nbsp;Type&nbsp;PROCESSENTRY32<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwSize&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntUsage&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32DefaultHeapID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ModuleID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntThreads&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ParentProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;pcPriClassBase&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwFlags&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;szExeFile&nbsp;As&nbsp;String&nbsp;*&nbsp;MAX_PATH<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CreateToolhelpSnapshot&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"CreateToolhelp32Snapshot"&nbsp;(ByVal&nbsp;lFlags&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lProcessID&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;ProcessFirst&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"Process32First"&nbsp;(ByVal&nbsp;hSnapShot&nbsp;As&nbsp;Long,&nbsp;uProcess&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;ProcessNext&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"Process32Next"&nbsp;(ByVal&nbsp;hSnapShot&nbsp;As&nbsp;Long,&nbsp;uProcess&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Sub&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hPass&nbsp;As&nbsp;Long)<br>
Dim&nbsp;ListOfActiveProcess()&nbsp;As&nbsp;PROCESSENTRY32<br>
<br>
<br>
<br>
<br>
<br>
<br>
Public&nbsp;Function&nbsp;szExeFile(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;szExeFile&nbsp;=&nbsp;ListOfActiveProcess(Index).szExeFile<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;dwFlags(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwFlags&nbsp;=&nbsp;ListOfActiveProcess(Index).dwFlags<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;pcPriClassBase(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;pcPriClassBase&nbsp;=&nbsp;ListOfActiveProcess(Index).pcPriClassBase<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;th32ParentProcessID(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ParentProcessID&nbsp;=&nbsp;ListOfActiveProcess(Index).th32ParentProcessID<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;cntThreads(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntThreads&nbsp;=&nbsp;ListOfActiveProcess(Index).cntThreads<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;thModuleID(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;thModuleID&nbsp;=&nbsp;ListOfActiveProcess(Index).th32ModuleID<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;th32DefaultHeapID(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32DefaultHeapID&nbsp;=&nbsp;ListOfActiveProcess(Index).th32DefaultHeapID<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;th32ProcessID(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ProcessID&nbsp;=&nbsp;ListOfActiveProcess(Index).th32ProcessID<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;cntUsage(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntUsage&nbsp;=&nbsp;ListOfActiveProcess(Index).cntUsage<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;dwSize(ByVal&nbsp;Index&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwSize&nbsp;=&nbsp;ListOfActiveProcess(Index).dwSize<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;GetActiveProcess()&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hToolhelpSnapshot&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tProcess&nbsp;As&nbsp;PROCESSENTRY32<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;r&nbsp;As&nbsp;Long,&nbsp;i&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;hToolhelpSnapshot&nbsp;=&nbsp;CreateToolhelpSnapshot(TH32CS_SNAPPROCESS,&nbsp;0&)<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hToolhelpSnapshot&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetActiveProcess&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;tProcess<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.dwSize&nbsp;=&nbsp;Len(tProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;ProcessFirst(hToolhelpSnapshot,&nbsp;tProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;Preserve&nbsp;ListOfActiveProcess(20)<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;While&nbsp;r<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;i&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;i&nbsp;Mod&nbsp;20&nbsp;=&nbsp;0&nbsp;Then&nbsp;ReDim&nbsp;Preserve&nbsp;ListOfActiveProcess(i&nbsp;+&nbsp;20)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ListOfActiveProcess(i)&nbsp;=&nbsp;tProcess<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;ProcessNext(hToolhelpSnapshot,&nbsp;tProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loop<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetActiveProcess&nbsp;=&nbsp;i<br>
&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;CloseHandle(hToolhelpSnapshot)<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0011"><b>KILL PROCESS</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Type&nbsp;LUID<br>
&nbsp;&nbsp;&nbsp;lowpart&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;highpart&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Type&nbsp;TOKEN_PRIVILEGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;PrivilegeCount&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;LuidUDT&nbsp;As&nbsp;LUID<br>
&nbsp;&nbsp;&nbsp;&nbsp;Attributes&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Const&nbsp;TOKEN_ADJUST_PRIVILEGES&nbsp;=&nbsp;&H20<br>
Const&nbsp;TOKEN_QUERY&nbsp;=&nbsp;&H8<br>
Const&nbsp;SE_PRIVILEGE_ENABLED&nbsp;=&nbsp;&H2<br>
Const&nbsp;PROCESS_ALL_ACCESS&nbsp;=&nbsp;&H1F0FFF<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetVersion&nbsp;Lib&nbsp;"kernel32"&nbsp;()&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetCurrentProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;()&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;OpenProcessToken&nbsp;Lib&nbsp;"advapi32"&nbsp;(ByVal&nbsp;ProcessHandle&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;DesiredAccess&nbsp;As&nbsp;Long,&nbsp;TokenHandle&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;LookupPrivilegeValue&nbsp;Lib&nbsp;"advapi32"&nbsp;Alias&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"LookupPrivilegeValueA"&nbsp;(ByVal&nbsp;lpSystemName&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;lpName&nbsp;As&nbsp;String,&nbsp;lpLuid&nbsp;As&nbsp;LUID)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;AdjustTokenPrivileges&nbsp;Lib&nbsp;"advapi32"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;TokenHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;DisableAllPrivileges&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;NewState&nbsp;As&nbsp;TOKEN_PRIVILEGES,&nbsp;ByVal&nbsp;BufferLength&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;PreviousState&nbsp;As&nbsp;Any,&nbsp;ReturnLength&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;OpenProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Long,&nbsp;ByVal&nbsp;bInheritHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwProcessId&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;TerminateProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hProcess&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Long,&nbsp;ByVal&nbsp;uExitCode&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Function&nbsp;KillProcess(ByVal&nbsp;hProcessID&nbsp;As&nbsp;Long,&nbsp;Optional&nbsp;ByVal&nbsp;ExitCode&nbsp;As&nbsp;Long)&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hToken&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hProcess&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tp&nbsp;As&nbsp;TOKEN_PRIVILEGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Windows&nbsp;NT/2000&nbsp;require&nbsp;a&nbsp;special&nbsp;treatment<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;to&nbsp;ensure&nbsp;that&nbsp;the&nbsp;calling&nbsp;process&nbsp;has&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;privileges&nbsp;to&nbsp;shut&nbsp;down&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;under&nbsp;NT&nbsp;the&nbsp;high-order&nbsp;bit&nbsp;(that&nbsp;is,&nbsp;the&nbsp;sign&nbsp;bit)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;of&nbsp;the&nbsp;value&nbsp;retured&nbsp;by&nbsp;GetVersion&nbsp;is&nbsp;cleared<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetVersion()&nbsp;>=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;open&nbsp;the&nbsp;tokens&nbsp;for&nbsp;the&nbsp;current&nbsp;process<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;exit&nbsp;if&nbsp;any&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;OpenProcessToken(GetCurrentProcess(),&nbsp;TOKEN_ADJUST_PRIVILEGES&nbsp;Or&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TOKEN_QUERY,&nbsp;hToken)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;retrieves&nbsp;the&nbsp;locally&nbsp;unique&nbsp;identifier&nbsp;(LUID)&nbsp;used<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;to&nbsp;locally&nbsp;represent&nbsp;the&nbsp;specified&nbsp;privilege&nbsp;name<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;(first&nbsp;argument&nbsp;=&nbsp;""&nbsp;means&nbsp;the&nbsp;local&nbsp;system)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Exit&nbsp;if&nbsp;any&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;LookupPrivilegeValue("",&nbsp;"SeDebugPrivilege",&nbsp;tp.LuidUDT)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;complete&nbsp;the&nbsp;TOKEN_PRIVILEGES&nbsp;structure&nbsp;with&nbsp;the&nbsp;#&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;privileges&nbsp;and&nbsp;the&nbsp;desired&nbsp;attribute<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.PrivilegeCount&nbsp;=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.Attributes&nbsp;=&nbsp;SE_PRIVILEGE_ENABLED<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;try&nbsp;to&nbsp;acquire&nbsp;debug&nbsp;privilege&nbsp;for&nbsp;this&nbsp;process<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;exit&nbsp;if&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;AdjustTokenPrivileges(hToken,&nbsp;False,&nbsp;tp,&nbsp;0,&nbsp;ByVal&nbsp;0&,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;0&)&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;CleanUp<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;now&nbsp;we&nbsp;can&nbsp;finally&nbsp;open&nbsp;the&nbsp;other&nbsp;process<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;while&nbsp;having&nbsp;complete&nbsp;access&nbsp;on&nbsp;its&nbsp;attributes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;exit&nbsp;if&nbsp;any&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;hProcess&nbsp;=&nbsp;OpenProcess(PROCESS_ALL_ACCESS,&nbsp;0,&nbsp;hProcessID)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hProcess&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;call&nbsp;was&nbsp;successful,&nbsp;so&nbsp;we&nbsp;can&nbsp;kill&nbsp;the&nbsp;application<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;set&nbsp;return&nbsp;value&nbsp;for&nbsp;this&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KillProcess&nbsp;=&nbsp;(TerminateProcess(hProcess,&nbsp;ExitCode)&nbsp;<>&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;close&nbsp;the&nbsp;process&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle&nbsp;hProcess<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetVersion()&nbsp;>=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;under&nbsp;NT&nbsp;restore&nbsp;original&nbsp;privileges<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tp.Attributes&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AdjustTokenPrivileges&nbsp;hToken,&nbsp;False,&nbsp;tp,&nbsp;0,&nbsp;ByVal&nbsp;0&,&nbsp;ByVal&nbsp;0&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
CleanUp:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hToken&nbsp;Then&nbsp;CloseHandle&nbsp;hToken<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0012"><b>KILL TASK</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;FindWindow&&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"FindWindowA"&nbsp;(ByVal&nbsp;lpClassName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpWindowName&nbsp;As&nbsp;String)<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetWindowThreadProcessId&&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;lpdwProcessId&nbsp;As&nbsp;Long)<br>
Private&nbsp;Declare&nbsp;Function&nbsp;OpenProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;bInheritHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwProcessId&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;TerminateProcess&&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hProcess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uExitCode&nbsp;As&nbsp;Long)<br>
<br>
Public&nbsp;Function&nbsp;LaunchApp(Path&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;LaunchApp&nbsp;=&nbsp;Shell(Path,&nbsp;vbNormalNoFocus)<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Function&nbsp;IsAppRunning(WindowClassName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hw&<br>
&nbsp;&nbsp;&nbsp;&nbsp;hw&&nbsp;=&nbsp;FindWindow(WindowClassName,&nbsp;vbNullString)<br>
&nbsp;&nbsp;&nbsp;&nbsp;IsAppRunning&nbsp;=&nbsp;(hw&&nbsp;<>&nbsp;0)<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Function&nbsp;FindWindowByClass(WindowClassName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;FindWindowByClass&nbsp;=&nbsp;FindWindow(WindowClassName,&nbsp;vbNullString)<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Function&nbsp;FindProcessByWindowClass(WindowClassName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;pid&<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetWindowThreadProcessId&nbsp;FindWindowByClass(WindowClassName),&nbsp;pid&<br>
&nbsp;&nbsp;&nbsp;&nbsp;FindProcessByWindowClass&nbsp;=&nbsp;pid&<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Sub&nbsp;KillProcessById(ProcessId&nbsp;As&nbsp;Long)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hp&<br>
&nbsp;&nbsp;&nbsp;&nbsp;hp&&nbsp;=&nbsp;OpenProcess(1&,&nbsp;-1&,&nbsp;ProcessId)<br>
&nbsp;&nbsp;&nbsp;&nbsp;TerminateProcess&nbsp;hp&,&nbsp;0&<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0013"><b>PRINT A TEXTBOX</b></a></b></font><br>
<font face="Courier New" size="2">
Printer.Print&nbsp;Text1.Text<br>
Printer.EndDoc<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0014"><b>ADD/REMOVE NETWORK CONNECTIONS</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Enum&nbsp;WNetResultConstants<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_SUCCESS&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_NET_ERROR&nbsp;=&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_BAD_PASSWORD&nbsp;=&nbsp;6<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_BAD_DEVICE&nbsp;=&nbsp;1200&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_CONNECTION_UNAVAIL&nbsp;=&nbsp;1201&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_EXTENDED_ERROR&nbsp;=&nbsp;1208&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_MORE_DATA&nbsp;=&nbsp;234<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_NOT_SUPPORTED&nbsp;=&nbsp;50&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_NO_NET_OR_BAD_PATH&nbsp;=&nbsp;1203&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_NO_NETWORK&nbsp;=&nbsp;1222&<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WN_ERROR_NOT_CONNECTED&nbsp;=&nbsp;2250&<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Enum<br>
'<br>
'&nbsp;API&nbsp;Calls<br>
'<br>
&nbsp;&nbsp;&nbsp;Private&nbsp;Declare&nbsp;Function&nbsp;GetDesktopWindow&nbsp;Lib&nbsp;"user32"&nbsp;()&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;&nbsp;Private&nbsp;Declare&nbsp;Function&nbsp;WNetAddConnection&nbsp;Lib&nbsp;"mpr.dll"&nbsp;Alias&nbsp;"WNetAddConnectionA"&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ByVal&nbsp;lpszNetPath&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpszPassword&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;lpszLocalName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;&nbsp;Private&nbsp;Declare&nbsp;Function&nbsp;WNetCancelConnection&nbsp;Lib&nbsp;"mpr.dll"&nbsp;Alias&nbsp;"WNetCancelConnectionA"&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ByVal&nbsp;lpszName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;bForce&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;&nbsp;Private&nbsp;Declare&nbsp;Function&nbsp;WNetConnectionDialog&nbsp;Lib&nbsp;"mpr.dll"&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwType&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Function&nbsp;AddNetworkConnection(sShareName&nbsp;As&nbsp;String,&nbsp;sPassword&nbsp;As&nbsp;String,&nbsp;sDriveLetter&nbsp;As&nbsp;String)&nbsp;As&nbsp;WNetResultConstants<br>
&nbsp;&nbsp;&nbsp;&nbsp;AddNetworkConnection&nbsp;=&nbsp;WNetAddConnection(sShareName,&nbsp;sPassword,&nbsp;sDriveLetter)<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Function&nbsp;RemoveNetworkConnection(sDriveLetter&nbsp;As&nbsp;String,&nbsp;bForce&nbsp;As&nbsp;Boolean)&nbsp;As&nbsp;WNetResultConstants<br>
&nbsp;&nbsp;&nbsp;&nbsp;RemoveNetworkConnection&nbsp;=&nbsp;WNetCancelConnection(sDriveLetter,&nbsp;CLng(bForce))<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Sub&nbsp;ShowMapDrivesDialog(Optional&nbsp;hWndOwner&nbsp;As&nbsp;Long&nbsp;=&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hWndOwner&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hWndOwner&nbsp;=&nbsp;GetDesktopWindow()<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;WNetConnectionDialog&nbsp;hWndOwner,&nbsp;1<br>
End&nbsp;Sub<br>
&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0015"><b>GENERATE A TEMPORARY FILENAME</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;GetTempFileNameAPI&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"GetTempFileNameA"&nbsp;_<br>
			&nbsp;(ByVal&nbsp;lpszPath&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpPrefixString&nbsp;As&nbsp;String,&nbsp;_<br>
			&nbsp;&nbsp;ByVal&nbsp;wUnique&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpTempFileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
<br>
Public&nbsp;Function&nbsp;GetTempFileName(Optional&nbsp;ByVal&nbsp;sPrefixString&nbsp;As&nbsp;String&nbsp;=&nbsp;"~TM",&nbsp;_<br>
				Optional&nbsp;ByVal&nbsp;sPath&nbsp;As&nbsp;String&nbsp;=&nbsp;"")&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;nRet&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lpTempFileName&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;sPath&nbsp;=&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sPath&nbsp;=&nbsp;CurDir$<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpTempFileName&nbsp;=&nbsp;Space$(1024)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;nRet&nbsp;=&nbsp;GetTempFileNameAPI(sPath,&nbsp;sPrefixString,&nbsp;0,&nbsp;lpTempFileName)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;nRet&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTempFileName&nbsp;=&nbsp;""<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetTempFileName&nbsp;=&nbsp;Trim$(lpTempFileName)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0016"><b>CONTROL PANEL SHELL PARAMETERS</b></a></b></font><br>
<font face="Courier New" size="2">
Control&nbsp;Panel&nbsp;(CONTROL.EXE)<br>
Control&nbsp;Panel:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL<br>
<br>
Accessability&nbsp;Settings&nbsp;(ACCESS.CPL)&nbsp;<br>
Accessability&nbsp;Properties&nbsp;(Keyboard):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;access.cpl,,1<br>
Accessability&nbsp;Properties&nbsp;(Sound):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;access.cpl,,2<br>
Accessability&nbsp;Properties&nbsp;(Display):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;access.cpl,,3<br>
Accessability&nbsp;Properties&nbsp;(Mouse):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;access.cpl,,4<br>
Accessability&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;access.cpl,,5<br>
<br>
Add/Remove&nbsp;Programs&nbsp;(APPWIZ.CPL)<br>
Add/Remove&nbsp;Programs&nbsp;Properties&nbsp;(Install/Uninstall):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;appwiz.cpl,,1<br>
Add/Remove&nbsp;Programs&nbsp;Properties&nbsp;(Windows&nbsp;Setup):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;appwiz.cpl,,2<br>
Add/Remove&nbsp;Programs&nbsp;Properties&nbsp;(Startup&nbsp;Disk):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;appwiz.cpl,,3<br>
<br>
Display&nbsp;Settings&nbsp;(DESK.CPL)<br>
Display&nbsp;Properties&nbsp;(Background):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;desk.cpl,,0<br>
Display&nbsp;Properties&nbsp;(Screen&nbsp;Saver):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;desk.cpl,,1<br>
Display&nbsp;Properties&nbsp;(Appearance):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;desk.cpl,,2<br>
Display&nbsp;Properties&nbsp;(Settings):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;desk.cpl,,3<br>
Display&nbsp;Properties&nbsp;(Install&nbsp;Screen&nbsp;Saver):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;desk.cpl,InstallScreenSaver&nbsp;%1<br>
&nbsp;&nbsp;&nbsp;&nbsp;(opens&nbsp;.scr&nbsp;at&nbsp;location&nbsp;specified&nbsp;by&nbsp;%1&nbsp;in&nbsp;preview&nbsp;window)<br>
<br>
FindFast&nbsp;Settings&nbsp;(FINDFAST.CPL)&nbsp;<br>
Find&nbsp;Fast&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;findfast.cpl<br>
<br>
Internet&nbsp;Settings&nbsp;(INETCPL.CPL)<br>
Internet&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,0<br>
Internet&nbsp;Properties&nbsp;(Security):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,1<br>
Internet&nbsp;Properties&nbsp;(Content):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,2<br>
Internet&nbsp;Properties&nbsp;(Connection):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,3<br>
Internet&nbsp;Properties&nbsp;(Programs):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,4<br>
Internet&nbsp;Properties&nbsp;(Advanced):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;inetcpl.cpl,,5<br>
<br>
Regional&nbsp;Settings&nbsp;(INTL.CPL)<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Regional&nbsp;Settings):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,0<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Number):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,1<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Currency):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,2<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Time):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,3<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Date):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,4<br>
Regional&nbsp;Settings&nbsp;Properties&nbsp;(Input&nbsp;Locales):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;intl.cpl,,5<br>
<br>
Joystick&nbsp;Settings&nbsp;(JOY.CPL)<br>
Joystick&nbsp;Properties&nbsp;(Joystick):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;joy.cpl<br>
<br>
Mouse/Keyboard/Printers/Fonts&nbsp;Settings&nbsp;(MAIN.CPL)<br>
Mouse&nbsp;Properties:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;main.cpl&nbsp;@0<br>
Keyboard&nbsp;Properties:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;main.cpl&nbsp;@1<br>
Printers:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;main.cpl&nbsp;@2<br>
Fonts:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;main.cpl&nbsp;@3<br>
<br>
Mail&nbsp;and&nbsp;Fax&nbsp;Settings&nbsp;(MLCFG32.CPL)<br>
Microsoft&nbsp;Exchange/Outlook&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mlcfg32.cpl<br>
<br>
Multimedia/Sounds&nbsp;Settings&nbsp;(MMSYS.CPL)<br>
Multimedia&nbsp;Properties&nbsp;(Audio):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl,,0<br>
Multimedia&nbsp;Properties&nbsp;(Video):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl,,1<br>
Multimedia&nbsp;Properties&nbsp;(MIDI):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl,,2<br>
Multimedia&nbsp;Properties&nbsp;(CD&nbsp;Music):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl,,3<br>
Multimedia&nbsp;Properties&nbsp;(Advanced/Devices):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl,,4<br>
&nbsp;<br>
Sounds&nbsp;Properties:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;mmsys.cpl&nbsp;@1<br>
<br>
Modem&nbsp;Settings&nbsp;(MODEM.CPL)<br>
Modem&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;modem.cpl<br>
<br>
Network&nbsp;Settings&nbsp;(NETCPL.CPL&nbsp;/&nbsp;NCPA.DLL)<br>
Network&nbsp;(Configuration):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;netcpl.cpl<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;ncpa.cpl<br>
&nbsp;<br>
Dial-up&nbsp;Networking&nbsp;Wizard<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;rnaui.dll,RnaWizard<br>
&nbsp;<br>
Create&nbsp;Share&nbsp;Dialog<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;ntlanui.dll,ShareCreate<br>
Manage&nbsp;Shares&nbsp;Dialog<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;ntlanui.dll,ShareManage<br>
<br>
ODBC&nbsp;Settings&nbsp;(ODBCCP32.CPL)<br>
ODBC&nbsp;Data&nbsp;Source&nbsp;Administrator&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;odbccp32.cpl<br>
<br>
Password&nbsp;Settings&nbsp;(PASSWORD.CPL)<br>
Password&nbsp;Properties&nbsp;(Change&nbsp;Passwords):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;password.cpl<br>
<br>
COM&nbsp;Ports&nbsp;Settings&nbsp;(PORTS.CPL)<br>
COM&nbsp;Ports&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;ports.cpl<br>
<br>
Server&nbsp;Properties&nbsp;(SRVMGR.CPL)<br>
Server&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;srvmgr.cpl<br>
Services&nbsp;dialog:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;srvmgr.cpl&nbsp;Services<br>
<br>
System&nbsp;Settings&nbsp;(SYSDM.CPL)<br>
System&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,0<br>
System&nbsp;Properties&nbsp;(Device&nbsp;Manager):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,1<br>
System&nbsp;Properties&nbsp;(Performance):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,3<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,1<br>
System&nbsp;Properties&nbsp;(Environment):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,2<br>
System&nbsp;Properties&nbsp;(Startup/Shutdown):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,3<br>
System&nbsp;Properties&nbsp;(Hardware&nbsp;Profiles):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,2<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,4<br>
System&nbsp;Properties&nbsp;(User&nbsp;Profiles):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl,,5<br>
&nbsp;<br>
Add&nbsp;New&nbsp;Hardware&nbsp;Wizard:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;sysdm.cpl&nbsp;@1<br>
Add&nbsp;New&nbsp;Printer&nbsp;Wizard:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Win9x:&nbsp;rundll32.exe&nbsp;shell32.dll,SHHelpShortcuts_RunDLL&nbsp;AddPrinter<br>
<br>
Telephony&nbsp;Settings&nbsp;(TELEPHON.CPL)<br>
Dialing&nbsp;Properties&nbsp;(My&nbsp;Location&nbsp;/&nbsp;Drivers):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;telephon.cpl<br>
<br>
Themes&nbsp;Settings&nbsp;(THEMES.CPL)<br>
Themes&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;themes.cpl<br>
<br>
Time&nbsp;and&nbsp;Date&nbsp;Settings&nbsp;(TIMEDATE.CPL)<br>
Date/Time&nbsp;Properties:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;timedate.cpl<br>
Choose&nbsp;Time&nbsp;Zone:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;timedate.cpl,,/f<br>
<br>
TweakUI&nbsp;Settings&nbsp;(TWEAKUI.CPL)<br>
TweakUI&nbsp;Dialog&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;tweakui.cpl<br>
<br>
UPS&nbsp;Settings&nbsp;(UPS.CPL)<br>
Uninteruptable&nbsp;Power&nbsp;Supply&nbsp;Properties&nbsp;(General):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;WinNT:&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;ups.cpl<br>
<br>
Microsoft&nbsp;Mail&nbsp;Postoffice&nbsp;Settings&nbsp;(WGPOCPL.CPL)<br>
Microsoft&nbsp;Workgroup&nbsp;Postoffice&nbsp;Admin:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;wgpocpl.cpl<br>
<br>
Miscellaneous&nbsp;File&nbsp;System&nbsp;Dialogs&nbsp;and&nbsp;Wizards<br>
Open&nbsp;With&nbsp;(File&nbsp;Associations):&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,OpenAs_RunDLL&nbsp;d:\path\filename.ext<br>
Run&nbsp;Diskcopy&nbsp;Dialog:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;diskcopy.dll,DiskCopyRunDll<br>
Run&nbsp;Format&nbsp;Floppy&nbsp;Dialog:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,SHFormatDrive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(make&nbsp;sure&nbsp;a&nbsp;disk&nbsp;is&nbsp;inserted&nbsp;in&nbsp;Drive&nbsp;A:&nbsp;first!)<br>
Create&nbsp;New&nbsp;Shortcut&nbsp;Wizard:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;AppWiz.Cpl,NewLinkHere&nbsp;%1<br>
&nbsp;&nbsp;&nbsp;&nbsp;(creates&nbsp;shortcut&nbsp;at&nbsp;location&nbsp;specified&nbsp;by&nbsp;%1)<br>
Create&nbsp;a&nbsp;Briefcase:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;syncui.dll,Briefcase_Create<br>
View&nbsp;Fonts:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,SHHelpShortcuts_RunDLL&nbsp;FontsFolder<br>
View&nbsp;Printers:<br>
&nbsp;&nbsp;&nbsp;&nbsp;rundll32.exe&nbsp;shell32.dll,SHHelpShortcuts_RunDLL&nbsp;PrintersFolder<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0017"><b>ADD A BUTTON TO THE CONTROL BOX</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
<br>
Public&nbsp;Type&nbsp;POINTAPI<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;Rectangle&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hdc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y2&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;SelectObject&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hdc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;DeleteObject&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;CreateSolidBrush&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;crColor&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;CreatePen&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;nPenStyle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nWidth&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;crColor&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;Ellipse&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hdc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y2&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;LineTo&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hdc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;x&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;y&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;MoveToEx&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hdc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;x&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;y&nbsp;As&nbsp;Long,&nbsp;lpPoint&nbsp;As&nbsp;POINTAPI)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetWindowLong&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"GetWindowLongA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nIndex&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;SetWindowLong&&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"SetWindowLongA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nIndex&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwNewLong&nbsp;As&nbsp;Long)<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;CallWindowProc&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"CallWindowProcA"&nbsp;(ByVal&nbsp;lpPrevWndFunc&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;msg&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetWindowDC&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;ReleaseDC&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hdc&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;ScreenToClient&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;lpPoint&nbsp;As&nbsp;POINTAPI)&nbsp;As&nbsp;Long<br>
<br>
<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetAsyncKeyState&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;vKey&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;GWL_WNDPROC&nbsp;=&nbsp;(-4)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCPAINT&nbsp;=&nbsp;&H85<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_PAINT&nbsp;=&nbsp;&HF<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_SIZE&nbsp;=&nbsp;&H5<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCLBUTTONDOWN&nbsp;=&nbsp;&HA1<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCLBUTTONUP&nbsp;=&nbsp;&HA2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCHITTEST&nbsp;=&nbsp;&H84<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCACTIVATE&nbsp;=&nbsp;&H86<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_ACTIVATEAPP&nbsp;=&nbsp;&H1C<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_ACTIVATE&nbsp;=&nbsp;&H6<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCMOUSEMOVE&nbsp;=&nbsp;&HA0<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_MOUSEMOVE&nbsp;=&nbsp;&H200<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;Const&nbsp;WM_NCLBUTTONDBLCLK&nbsp;=&nbsp;&HA3<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;WndProcOld&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Public&nbsp;gSubClassedForm&nbsp;As&nbsp;Form<br>
&nbsp;&nbsp;&nbsp;&nbsp;Private&nbsp;bPressed&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;'LOWORD&nbsp;and&nbsp;HIWORD&nbsp;are&nbsp;needed&nbsp;to&nbsp;extract<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;values&nbsp;from&nbsp;lParam<br>
<br>
<br>
Public&nbsp;Function&nbsp;LoWord(ByVal&nbsp;LongVal&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;LoWord&nbsp;=&nbsp;LongVal&nbsp;And&nbsp;&HFFFF&<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;HiWord(ByVal&nbsp;LongVal&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Integer<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;LongVal&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HiWord&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;HiWord&nbsp;=&nbsp;LongVal&nbsp;\&nbsp;&H10000&nbsp;And&nbsp;&HFFFF&<br>
End&nbsp;Function<br>
<br>
<br>
Public&nbsp;Function&nbsp;WindProc(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wMsg&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lWidth&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;POINTS&nbsp;As&nbsp;POINTAPI<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draw&nbsp;the&nbsp;button&nbsp;whenever&nbsp;on&nbsp;any&nbsp;event&nbsp;t<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hat&nbsp;will&nbsp;cause&nbsp;it&nbsp;to&nbsp;erase<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wMsg&nbsp;=&nbsp;WM_PAINT&nbsp;Or&nbsp;wMsg&nbsp;=&nbsp;WM_ACTIVATE&nbsp;Or&nbsp;wMsg&nbsp;=&nbsp;WM_ACTIVATEAPP&nbsp;Or&nbsp;wMsg&nbsp;=&nbsp;WM_NCACTIVATE&nbsp;Or&nbsp;wMsg&nbsp;=&nbsp;WM_NCPAINT&nbsp;Or&nbsp;(wMsg&nbsp;=&nbsp;WM_SIZE&nbsp;And&nbsp;wParam&nbsp;<>&nbsp;1)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawControlBox&nbsp;hwnd,&nbsp;RGB(192,&nbsp;192,&nbsp;192),&nbsp;vbBlack,&nbsp;RGB(128,&nbsp;128,&nbsp;128),&nbsp;vbWhite,&nbsp;RGB(224,&nbsp;224,&nbsp;224),&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draws&nbsp;an&nbsp;"inverted"&nbsp;form&nbsp;of&nbsp;the&nbsp;button&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;when&nbsp;it's&nbsp;pressed<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wMsg&nbsp;=&nbsp;WM_NCLBUTTONDOWN&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lWidth&nbsp;=&nbsp;gSubClassedForm.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MakeClientPoints&nbsp;hwnd,&nbsp;lParam,&nbsp;POINTS<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(POINTS.x&nbsp;>&nbsp;(lWidth&nbsp;-&nbsp;80))&nbsp;And&nbsp;(POINTS.x&nbsp;<&nbsp;(lWidth&nbsp;-&nbsp;60))&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawControlBox&nbsp;hwnd,&nbsp;RGB(192,&nbsp;192,&nbsp;192),&nbsp;vbWhite,&nbsp;RGB(224,&nbsp;224,&nbsp;224),&nbsp;vbBlack,&nbsp;RGB(128,&nbsp;128,&nbsp;128),&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bPressed&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Resets&nbsp;the&nbsp;original&nbsp;colors&nbsp;when&nbsp;the&nbsp;mou<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;se&nbsp;is&nbsp;unpressed<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wMsg&nbsp;=&nbsp;WM_NCLBUTTONUP&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawControlBox&nbsp;hwnd,&nbsp;RGB(192,&nbsp;192,&nbsp;192),&nbsp;vbBlack,&nbsp;RGB(128,&nbsp;128,&nbsp;128),&nbsp;vbWhite,&nbsp;RGB(224,&nbsp;224,&nbsp;224),&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lWidth&nbsp;=&nbsp;gSubClassedForm.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MakeClientPoints&nbsp;hwnd,&nbsp;lParam,&nbsp;POINTS<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(POINTS.x&nbsp;>&nbsp;(lWidth&nbsp;-&nbsp;74))&nbsp;And&nbsp;(POINTS.x&nbsp;<&nbsp;(lWidth&nbsp;-&nbsp;60))&nbsp;Then<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bPressed&nbsp;=&nbsp;True&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bPressed&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;gSubClassedForm.ControlBoxClick<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bPressed&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wMsg&nbsp;=&nbsp;WM_NCHITTEST&nbsp;And&nbsp;GetAsyncKeyState(vbLeftButton)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lWidth&nbsp;=&nbsp;gSubClassedForm.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MakeClientPoints&nbsp;hwnd,&nbsp;lParam,&nbsp;POINTS<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(POINTS.x&nbsp;>&nbsp;(lWidth&nbsp;-&nbsp;74))&nbsp;And&nbsp;(POINTS.x&nbsp;<&nbsp;(lWidth&nbsp;-&nbsp;60))&nbsp;And&nbsp;(POINTS.y&nbsp;<&nbsp;0)&nbsp;And&nbsp;(POINTS.y&nbsp;>&nbsp;-20)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawControlBox&nbsp;hwnd,&nbsp;RGB(192,&nbsp;192,&nbsp;192),&nbsp;vbWhite,&nbsp;RGB(224,&nbsp;224,&nbsp;224),&nbsp;vbBlack,&nbsp;RGB(128,&nbsp;128,&nbsp;128),&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrawControlBox&nbsp;hwnd,&nbsp;RGB(192,&nbsp;192,&nbsp;192),&nbsp;vbBlack,&nbsp;RGB(128,&nbsp;128,&nbsp;128),&nbsp;vbWhite,&nbsp;RGB(224,&nbsp;224,&nbsp;224),&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wMsg&nbsp;=&nbsp;WM_NCLBUTTONDBLCLK&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lWidth&nbsp;=&nbsp;gSubClassedForm.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MakeClientPoints&nbsp;hwnd,&nbsp;lParam,&nbsp;POINTS<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(POINTS.x&nbsp;>&nbsp;(lWidth&nbsp;-&nbsp;74))&nbsp;And&nbsp;(POINTS.x&nbsp;<&nbsp;(lWidth&nbsp;-&nbsp;60))&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;WindProc&nbsp;=&nbsp;CallWindowProc(WndProcOld&,&nbsp;hwnd&,&nbsp;wMsg&,&nbsp;wParam&,&nbsp;lParam&)<br>
End&nbsp;Function<br>
'Converts&nbsp;screen&nbsp;coordinates&nbsp;of&nbsp;a&nbsp;DWORD&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;point&nbsp;structure,&nbsp;of&nbsp;a&nbsp;client<br>
<br>
<br>
Sub&nbsp;MakeClientPoints(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;pts&nbsp;As&nbsp;Long,&nbsp;PT&nbsp;As&nbsp;POINTAPI)<br>
&nbsp;&nbsp;&nbsp;&nbsp;PT.x&nbsp;=&nbsp;LoWord(pts)<br>
&nbsp;&nbsp;&nbsp;&nbsp;PT.y&nbsp;=&nbsp;HiWord(pts)<br>
&nbsp;&nbsp;&nbsp;&nbsp;ScreenToClient&nbsp;hwnd,&nbsp;PT<br>
End&nbsp;Sub<br>
'***************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;****************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>
'FUNCTION:&nbsp;DrawControlBox<br>
'ARGUMENTS:&nbsp;hwndhandle&nbsp;of&nbsp;window&nbsp;to&nbsp;draw<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;to<br>
'bGround&nbsp;Background&nbsp;color&nbsp;of&nbsp;button<br>
'Bdm1Bottom&nbsp;border&nbsp;color<br>
'Bdm22nd&nbsp;level&nbsp;bottom&nbsp;border<br>
'Top1Top&nbsp;border&nbsp;color<br>
'Top22nd&nbsp;level&nbsp;top&nbsp;border<br>
'lOffset&nbsp;Amount&nbsp;to&nbsp;offset&nbsp;the&nbsp;ellipse&nbsp;by<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
'<br>
'COMMENTS:&nbsp;This&nbsp;is&nbsp;the&nbsp;sub&nbsp;routine&nbsp;that&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draws&nbsp;the&nbsp;actual&nbsp;control&nbsp;box.&nbsp;It&nbsp;is&nbsp;not<br>
'a&nbsp;generic&nbsp;function,&nbsp;however.&nbsp;You&nbsp;may&nbsp;sp<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ecify&nbsp;the&nbsp;border&nbsp;colors,&nbsp;but<br>
'you&nbsp;cannot&nbsp;specify&nbsp;the&nbsp;shape&nbsp;inside&nbsp;or&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;size.&nbsp;I&nbsp;will&nbsp;try&nbsp;to&nbsp;update&nbsp;this&nbsp;late<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r<br>
'***************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;****************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<br>
<br>
<br>
Sub&nbsp;DrawControlBox(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;bGround&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Bdm1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Bdm2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Top1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Top2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lOffset&nbsp;As&nbsp;Byte)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hBrush&nbsp;As&nbsp;Long&nbsp;'Handle&nbsp;of&nbsp;the&nbsp;background&nbsp;brush<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hOldBrush&nbsp;As&nbsp;Long'Handle&nbsp;of&nbsp;the&nbsp;previous&nbsp;brush<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hPen&nbsp;As&nbsp;Long'Handle&nbsp;of&nbsp;the&nbsp;new&nbsp;pen<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hOldPen&nbsp;As&nbsp;Long&nbsp;'Handle&nbsp;of&nbsp;the&nbsp;previous&nbsp;pen<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lWidth&nbsp;As&nbsp;Long&nbsp;'Width&nbsp;of&nbsp;the&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;DC&nbsp;As&nbsp;Long&nbsp;'Device&nbsp;context&nbsp;of&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;PT&nbsp;As&nbsp;POINTAPI&nbsp;'Stores&nbsp;previous&nbsp;points&nbsp;in&nbsp;MoveToEx<br>
&nbsp;&nbsp;&nbsp;&nbsp;lWidth&nbsp;=&nbsp;gSubClassedForm.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX<br>
&nbsp;&nbsp;&nbsp;&nbsp;DC&nbsp;=&nbsp;GetWindowDC(hwnd)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hBrush&nbsp;=&nbsp;CreateSolidBrush(bGround)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldBrush&nbsp;=&nbsp;SelectObject(DC,&nbsp;hBrush)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hPen&nbsp;=&nbsp;CreatePen(0,&nbsp;1,&nbsp;Top1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldPen&nbsp;=&nbsp;SelectObject(DC,&nbsp;hPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Rectangle&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;74,&nbsp;6,&nbsp;lWidth&nbsp;-&nbsp;58,&nbsp;20<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldPen))<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draw&nbsp;ellipse&nbsp;(Black,&nbsp;regardless&nbsp;of&nbsp;othe<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;colors)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hPen&nbsp;=&nbsp;CreatePen(0,&nbsp;1,&nbsp;vbBlack)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldPen&nbsp;=&nbsp;SelectObject(DC,&nbsp;hPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Ellipse&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;70&nbsp;+&nbsp;lOffset,&nbsp;8&nbsp;+&nbsp;lOffset,&nbsp;lWidth&nbsp;-&nbsp;63&nbsp;+&nbsp;lOffset,&nbsp;17&nbsp;+&nbsp;lOffset<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldPen))<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draw&nbsp;bottom&nbsp;border<br>
&nbsp;&nbsp;&nbsp;&nbsp;hPen&nbsp;=&nbsp;CreatePen(0,&nbsp;1,&nbsp;Bdm1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldPen&nbsp;=&nbsp;SelectObject(DC,&nbsp;hPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(hOldPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;74,&nbsp;19,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;58,&nbsp;19<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;59,&nbsp;6,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;59,&nbsp;19<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldPen))<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldBrush))<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draw&nbsp;2nd&nbsp;bottom&nbsp;border<br>
&nbsp;&nbsp;&nbsp;&nbsp;hPen&nbsp;=&nbsp;CreatePen(0,&nbsp;1,&nbsp;Bdm2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldPen&nbsp;=&nbsp;SelectObject(DC,&nbsp;hPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(hOldPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;73,&nbsp;18,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;59,&nbsp;18<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;60,&nbsp;7,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;60,&nbsp;19<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldPen))<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Draw&nbsp;2nd&nbsp;top&nbsp;border<br>
&nbsp;&nbsp;&nbsp;&nbsp;hPen&nbsp;=&nbsp;CreatePen(0,&nbsp;1,&nbsp;Top2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hOldPen&nbsp;=&nbsp;SelectObject(DC,&nbsp;hPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(hOldPen)<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;73,&nbsp;7,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;60,&nbsp;7<br>
&nbsp;&nbsp;&nbsp;&nbsp;MoveToEx&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;73,&nbsp;7,&nbsp;PT<br>
&nbsp;&nbsp;&nbsp;&nbsp;LineTo&nbsp;DC,&nbsp;lWidth&nbsp;-&nbsp;73,&nbsp;18<br>
&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject&nbsp;(SelectObject(DC,&nbsp;hOldPen))<br>
&nbsp;&nbsp;&nbsp;&nbsp;ReleaseDC&nbsp;hwnd,&nbsp;DC<br>
End&nbsp;Sub<br>
<br>
<br>
Public&nbsp;Sub&nbsp;SubClassForm(frm&nbsp;As&nbsp;Form)<br>
&nbsp;&nbsp;&nbsp;&nbsp;WndProcOld&&nbsp;=&nbsp;SetWindowLong(frm.hwnd,&nbsp;GWL_WNDPROC,&nbsp;AddressOf&nbsp;WindProc)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;gSubClassedForm&nbsp;=&nbsp;frm<br>
End&nbsp;Sub<br>
<br>
<br>
Public&nbsp;Sub&nbsp;UnSubclassForm(frm&nbsp;As&nbsp;Form)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SetWindowLong&nbsp;frm.hwnd,&nbsp;GWL_WNDPROC,&nbsp;WndProcOld&<br>
&nbsp;&nbsp;&nbsp;&nbsp;WndProcOld&&nbsp;=&nbsp;0<br>
End&nbsp;Sub<br>
'***************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**********<br>
'ADD&nbsp;THIS&nbsp;SECTION&nbsp;OF&nbsp;CODE&nbsp;TO&nbsp;A&nbsp;FORM&nbsp;(CAL<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LED&nbsp;FORM1)<br>
'***************************************<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**********<br>
<br>
<br>
Private&nbsp;Sub&nbsp;Form_Load()<br>
<br>
<br>
SubClassForm&nbsp;Form1<br>
End&nbsp;Sub<br>
<br>
<br>
Private&nbsp;Sub&nbsp;Form_Unload(Cancel&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;&nbsp;UnSubclassForm&nbsp;Form1<br>
End&nbsp;Sub<br>
'Make&nbsp;sure&nbsp;that&nbsp;the&nbsp;Sub&nbsp;"ControlBoxClick<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;()"&nbsp;is&nbsp;in&nbsp;the&nbsp;Form&nbsp;that&nbsp;you&nbsp;are<br>
'adding&nbsp;the&nbsp;control&nbsp;box&nbsp;to.&nbsp;Whatever&nbsp;is&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;this&nbsp;sub&nbsp;routine&nbsp;will&nbsp;be&nbsp;executed<br>
'when&nbsp;the&nbsp;button&nbsp;is&nbsp;pressed<br>
<br>
<br>
Public&nbsp;Sub&nbsp;ControlBoxClick()<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;<--&nbsp;Add&nbsp;code&nbsp;for&nbsp;when&nbsp;the&nbsp;button&nbsp;is&nbsp;cl<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icked&nbsp;--><br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"You&nbsp;pressed&nbsp;the&nbsp;button"<br>
End&nbsp;Sub<br>
		<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0018"><b>DISABLE CLOSE BUTTON</b></a></b></font><br>
<font face="Courier New" size="2">
Declare&nbsp;Function&nbsp;GetSystemMenu&nbsp;Lib&nbsp;"user32"&nbsp;_<br>
(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;bRevert&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Declare&nbsp;Function&nbsp;GetMenuItemCount&nbsp;Lib&nbsp;"user32"&nbsp;_<br>
(ByVal&nbsp;hMenu&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Declare&nbsp;Function&nbsp;DrawMenuBar&nbsp;Lib&nbsp;"user32"&nbsp;_<br>
(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Declare&nbsp;Function&nbsp;RemoveMenu&nbsp;Lib&nbsp;"user32"&nbsp;_<br>
(ByVal&nbsp;hMenu&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nPosition&nbsp;As&nbsp;Long,&nbsp;_<br>
ByVal&nbsp;wFlags&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Const&nbsp;MF_BYPOSITION&nbsp;=&nbsp;&H400&<br>
Public&nbsp;Const&nbsp;MF_REMOVE&nbsp;=&nbsp;&H1000&<br>
<br>
Form&nbsp;code----------------<br>
Dim&nbsp;hSysMenu&nbsp;As&nbsp;Long<br>
Dim&nbsp;nCnt&nbsp;As&nbsp;Long<br>
<br>
'First,&nbsp;show&nbsp;the&nbsp;form<br>
Me.Show<br>
<br>
'Get&nbsp;handle&nbsp;to&nbsp;our&nbsp;form's&nbsp;system&nbsp;menu&nbsp;<br>
'(Restore,&nbsp;Maximize,&nbsp;Move,&nbsp;close&nbsp;etc.)<br>
hSysMenu&nbsp;=&nbsp;GetSystemMenu(Me.hwnd,&nbsp;False)<br>
<br>
If&nbsp;hSysMenu&nbsp;Then<br>
'Get&nbsp;System&nbsp;menu's&nbsp;menu&nbsp;count<br>
nCnt&nbsp;=&nbsp;GetMenuItemCount(hSysMenu)<br>
<br>
If&nbsp;nCnt&nbsp;Then<br>
<br>
'Menu&nbsp;count&nbsp;is&nbsp;based&nbsp;on&nbsp;0&nbsp;(0,&nbsp;1,&nbsp;2,&nbsp;3...)<br>
<br>
RemoveMenu&nbsp;hSysMenu,&nbsp;nCnt&nbsp;-&nbsp;1,&nbsp;_<br>
MF_BYPOSITION&nbsp;Or&nbsp;MF_REMOVE<br>
<br>
RemoveMenu&nbsp;hSysMenu,&nbsp;nCnt&nbsp;-&nbsp;2,&nbsp;_<br>
MF_BYPOSITION&nbsp;Or&nbsp;MF_REMOVE&nbsp;'Remove&nbsp;the&nbsp;seperator<br>
<br>
DrawMenuBar&nbsp;Me.hwnd&nbsp;<br>
'Force&nbsp;caption&nbsp;bar's&nbsp;refresh.&nbsp;Disabling&nbsp;X&nbsp;button<br>
<br>
Me.Caption&nbsp;=&nbsp;"Try&nbsp;to&nbsp;close&nbsp;me!"<br>
End&nbsp;If<br>
End&nbsp;If<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0019"><b>RETURN SUB DIRECTORIES</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;SubFolders(ByVal&nbsp;strRootDir&nbsp;As&nbsp;String)&nbsp;As&nbsp;Variant<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;Goto&nbsp;ehSubFolders&nbsp;'Trap&nbsp;For&nbsp;errors<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;strSubDir&nbsp;As&nbsp;String,&nbsp;strDelimiter&nbsp;As&nbsp;String,&nbsp;strReturn&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Trim(strRootDir)&nbsp;=&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strRootDir&nbsp;=&nbsp;CurDir<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;strRootDir&nbsp;=&nbsp;AppendBackslash(strRootDir)<br>
&nbsp;&nbsp;&nbsp;&nbsp;strDelimiter&nbsp;=&nbsp;";"<br>
&nbsp;&nbsp;&nbsp;&nbsp;strSubDir&nbsp;=&nbsp;Dir(strRootDir,&nbsp;vbDirectory)&nbsp;'Retrieve&nbsp;the&nbsp;first&nbsp;entry<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;While&nbsp;strSubDir&nbsp;<>&nbsp;""&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;strSubDir&nbsp;<>&nbsp;"."&nbsp;And&nbsp;strSubDir&nbsp;<>&nbsp;".."&nbsp;Then<br>
	&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(GetAttr(strRootDir&nbsp;&&nbsp;strSubDir)&nbsp;And&nbsp;vbDirectory)&nbsp;=&nbsp;vbDirectory&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	strReturn&nbsp;=&nbsp;strReturn&nbsp;&&nbsp;strSubDir&nbsp;&&nbsp;strDelimiter<br>
	&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
	End&nbsp;If<br>
	strSubDir&nbsp;=&nbsp;Dir&nbsp;'Get&nbsp;Next&nbsp;entry<br>
&nbsp;&nbsp;&nbsp;&nbsp;Loop<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;SubFolders&nbsp;=&nbsp;Split(strReturn,&nbsp;strDelimiter)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
ehSubFolders:<br>
&nbsp;&nbsp;&nbsp;&nbsp;SubFolders&nbsp;=&nbsp;Empty<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0020"><b>TYPED URL LOCATION</b></a></b></font><br>
<font face="Courier New" size="2">
HKEY_CURRENT_USER\Software\Microsoft\Internet&nbsp;Explorer\TypedURLs<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0021"><b>TRANSPARENT FORM WHEN OUT OF FOCUS</b></a></b></font><br>
<font face="Courier New" size="2">
[form&nbsp;code]<br>
Private&nbsp;Sub&nbsp;Form_Load()<br>
Dim&nbsp;NormalWindowStyle&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Label1&nbsp;=&nbsp;App.Path<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Show<br>
&nbsp;&nbsp;&nbsp;&nbsp;DoEvents<br>
&nbsp;&nbsp;&nbsp;&nbsp;gHW&nbsp;=&nbsp;Me.hwnd&nbsp;&nbsp;&nbsp;'Store&nbsp;handle&nbsp;to&nbsp;this&nbsp;form's&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;Hook&nbsp;&nbsp;&nbsp;&nbsp;'Call&nbsp;procedure&nbsp;to&nbsp;begin&nbsp;capturing&nbsp;messages&nbsp;for&nbsp;this&nbsp;window<br>
<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;NormalWindowStyle&nbsp;=&nbsp;GetWindowLong(Me.hwnd,&nbsp;GWL_EXSTYLE)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SetWindowLong&nbsp;Me.hwnd,&nbsp;GWL_EXSTYLE,&nbsp;NormalWindowStyle&nbsp;Or&nbsp;WS_EX_LAYERED<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;SetLayeredWindowAttributes&nbsp;Me.hwnd,&nbsp;0,&nbsp;255,&nbsp;LWA_ALPHA<br>
<br>
End&nbsp;Sub<br>
<br>
Private&nbsp;Sub&nbsp;Form_QueryUnload(Cancel&nbsp;As&nbsp;Integer,&nbsp;UnloadMode&nbsp;As&nbsp;Integer)<br>
SetLayeredWindowAttributes&nbsp;Me.hwnd,&nbsp;0,&nbsp;155,&nbsp;LWA_ALPHA<br>
End&nbsp;Sub<br>
<br>
Private&nbsp;Sub&nbsp;Form_Unload(Cancel&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Unhook<br>
End&nbsp;Sub<br>
<br>
[module&nbsp;code]<br>
Public&nbsp;Const&nbsp;GWL_EXSTYLE&nbsp;=&nbsp;(-20)<br>
Public&nbsp;Const&nbsp;WS_EX_LAYERED&nbsp;=&nbsp;&H80000<br>
Public&nbsp;Const&nbsp;WS_EX_TRANSPARENT&nbsp;=&nbsp;&H20&<br>
Public&nbsp;Const&nbsp;LWA_ALPHA&nbsp;=&nbsp;&H2&<br>
<br>
Declare&nbsp;Function&nbsp;CallWindowProc&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"CallWindowProcA"&nbsp;(ByVal&nbsp;lpPrevWndFunc&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Msg&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;<br>
Declare&nbsp;Function&nbsp;FindWindow&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"FindWindowA"&nbsp;(ByVal&nbsp;lpClassName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpWindowName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;GetWindowLong&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"GetWindowLongA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nIndex&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;SetWindowLong&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"SetWindowLongA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nIndex&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwNewLong&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;SetLayeredWindowAttributes&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;crey&nbsp;As&nbsp;Byte,&nbsp;ByVal&nbsp;bAlpha&nbsp;As&nbsp;Byte,&nbsp;ByVal&nbsp;dwFlags&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Private&nbsp;Const&nbsp;WM_ACTIVATEAPP&nbsp;=&nbsp;&H1C<br>
Private&nbsp;Const&nbsp;GWL_WNDPROC&nbsp;=&nbsp;-4<br>
Public&nbsp;lpPrevWndProc&nbsp;As&nbsp;Long<br>
Public&nbsp;gHW&nbsp;As&nbsp;Long<br>
<br>
Public&nbsp;Sub&nbsp;Hook()<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Establish&nbsp;a&nbsp;hook&nbsp;to&nbsp;capture&nbsp;messages&nbsp;to&nbsp;this&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpPrevWndProc&nbsp;=&nbsp;SetWindowLong(gHW,&nbsp;GWL_WNDPROC,&nbsp;AddressOf&nbsp;WindowProc)<br>
<br>
End&nbsp;Sub<br>
<br>
Public&nbsp;Sub&nbsp;Unhook()<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;temp&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Reset&nbsp;the&nbsp;message&nbsp;handler&nbsp;for&nbsp;this&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;SetWindowLong(gHW,&nbsp;GWL_WNDPROC,&nbsp;lpPrevWndProc)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
<br>
Function&nbsp;WindowProc(ByVal&nbsp;hw&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uMsg&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Check&nbsp;for&nbsp;the&nbsp;ActivateApp&nbsp;message<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;uMsg&nbsp;=&nbsp;WM_ACTIVATEAPP&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Check&nbsp;to&nbsp;see&nbsp;if&nbsp;Activating&nbsp;the&nbsp;application<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;wParam&nbsp;=&nbsp;0&nbsp;Then&nbsp;&nbsp;'Application&nbsp;Received&nbsp;Focus<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetLayeredWindowAttributes&nbsp;gHW,&nbsp;0,&nbsp;155,&nbsp;LWA_ALPHA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Application&nbsp;Lost&nbsp;Focus<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetLayeredWindowAttributes&nbsp;gHW,&nbsp;0,&nbsp;255,&nbsp;LWA_ALPHA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Pass&nbsp;message&nbsp;on&nbsp;to&nbsp;the&nbsp;original&nbsp;window&nbsp;message&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;WindowProc&nbsp;=&nbsp;CallWindowProc(lpPrevWndProc,&nbsp;hw,&nbsp;uMsg,&nbsp;wParam,&nbsp;lParam)<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0022"><b>EXITPROCESS - EXIT WITH RETURN CODE</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Sub&nbsp;ExitProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;uExitCode&nbsp;As&nbsp;Long)<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0023"><b>PRESS VIRTUAL KEY</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Sub&nbsp;keybd_event&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;bVk&nbsp;As&nbsp;Byte,&nbsp;ByVal&nbsp;bScan&nbsp;As&nbsp;Byte,&nbsp;ByVal&nbsp;dwFlags&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwExtraInfo&nbsp;As&nbsp;Long)<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetKeyState&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;nVirtKey&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Const&nbsp;KEYEVENTF_KEYUP&nbsp;=&nbsp;&H2<br>
<br>
<br>
Sub&nbsp;PressVirtualKey(ByVal&nbsp;virtKeyCode&nbsp;As&nbsp;KeyCodeConstants,&nbsp;Optional&nbsp;ByVal&nbsp;Action&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Action&nbsp;>=&nbsp;0&nbsp;Then&nbsp;keybd_event&nbsp;virtKeyCode,&nbsp;0,&nbsp;0,&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Action&nbsp;<=&nbsp;0&nbsp;Then&nbsp;keybd_event&nbsp;virtKeyCode,&nbsp;0,&nbsp;KEYEVENTF_KEYUP,&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0024"><b>INI PROCESSING - THE COOLEST</b></a></b></font><br>
<font face="Courier New" size="2">
Declare&nbsp;Function&nbsp;GetPrivateProfileString&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"GetPrivateProfileStringA"&nbsp;(ByVal&nbsp;lpApplicationName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpKeyName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpDefault&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpReturnedString&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;nSize&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpFileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;WritePrivateProfileString&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"WritePrivateProfileStringA"&nbsp;(ByVal&nbsp;lpApplicationName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpKeyName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpString&nbsp;As&nbsp;Any,&nbsp;ByVal&nbsp;lpFileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
<br>
Function&nbsp;ReadINI(Section,&nbsp;KeyName,&nbsp;filename&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;sRet&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;sRet&nbsp;=&nbsp;String(255,&nbsp;Chr(0))<br>
&nbsp;&nbsp;&nbsp;&nbsp;ReadINI&nbsp;=&nbsp;Left(sRet,&nbsp;GetPrivateProfileString(Section,&nbsp;ByVal&nbsp;KeyName,&nbsp;"",&nbsp;sRet,&nbsp;Len(sRet),&nbsp;filename))<br>
End&nbsp;Function<br>
Function&nbsp;writeINI(sSection&nbsp;As&nbsp;String,&nbsp;sKeyName&nbsp;As&nbsp;String,&nbsp;sNewString&nbsp;As&nbsp;String,&nbsp;sFileName)&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;r<br>
&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;WritePrivateProfileString(sSection,&nbsp;sKeyName,&nbsp;sNewString,&nbsp;sFileName)<br>
End&nbsp;Function<br>
&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0025"><b>TASK INVISIBILITY</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;command1.caption&nbsp;=&nbsp;"Hide"<br>
&nbsp;&nbsp;&nbsp;&nbsp;App.TaskVisible&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Now&nbsp;press&nbsp;control-Alt-Delete&nbsp;together,&nbsp;and&nbsp;hey&nbsp;presto,&nbsp;it&nbsp;aint&nbsp;there"<br>
End&nbsp;Sub<br>
<br>
<br>
Private&nbsp;Sub&nbsp;Command2_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;command2.caption&nbsp;=&nbsp;"Show"<br>
&nbsp;&nbsp;&nbsp;&nbsp;App.TaskVisible&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Now&nbsp;press&nbsp;control-Alt-Delete&nbsp;together&nbsp;and&nbsp;it&nbsp;will&nbsp;be&nbsp;there&nbsp;again"<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0026"><b>BASE CONVERSION DEC TO ANY</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;Base10toX(dNum&nbsp;As&nbsp;Double,&nbsp;lBase&nbsp;As&nbsp;Long)&nbsp;As&nbsp;String<br>
On&nbsp;Error&nbsp;GoTo&nbsp;Shit<br>
Dim&nbsp;x&nbsp;As&nbsp;Double<br>
Dim&nbsp;y&nbsp;As&nbsp;Double<br>
Dim&nbsp;Power&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lBase&nbsp;>&nbsp;35&nbsp;Then&nbsp;Err.Raise&nbsp;-849151,&nbsp;,&nbsp;"Base&nbsp;too&nbsp;large"<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lBase&nbsp;<&nbsp;2&nbsp;Then&nbsp;Err.Raise&nbsp;-849151,&nbsp;,&nbsp;"Base&nbsp;too&nbsp;small"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Base10toX&nbsp;=&nbsp;"":&nbsp;Power&nbsp;=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;Do:&nbsp;Power&nbsp;=&nbsp;Power&nbsp;+&nbsp;1:&nbsp;Loop&nbsp;Until&nbsp;lBase&nbsp;^&nbsp;Power&nbsp;>=&nbsp;dNum:&nbsp;x&nbsp;=&nbsp;dNum<br>
&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;x&nbsp;>=&nbsp;lBase&nbsp;And&nbsp;Power&nbsp;>&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;x&nbsp;\&nbsp;(lBase&nbsp;^&nbsp;Power)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(y&nbsp;=&nbsp;0&nbsp;And&nbsp;Base10toX&nbsp;>&nbsp;"")&nbsp;Or&nbsp;y&nbsp;>&nbsp;0&nbsp;Then&nbsp;Base10toX&nbsp;=&nbsp;Base10toX&nbsp;&&nbsp;IIf(y&nbsp;<&nbsp;10,&nbsp;CStr(y),&nbsp;Chr(65&nbsp;+&nbsp;y&nbsp;-&nbsp;10))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x&nbsp;-&nbsp;(y&nbsp;*&nbsp;(lBase&nbsp;^&nbsp;Power)):&nbsp;Power&nbsp;=&nbsp;Power&nbsp;-&nbsp;1:&nbsp;DoEvents<br>
&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;Base10toX&nbsp;=&nbsp;Base10toX&nbsp;&&nbsp;IIf(x&nbsp;<&nbsp;10,&nbsp;CStr(x),&nbsp;Chr(65&nbsp;+&nbsp;x&nbsp;-&nbsp;10))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
Shit:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Base10toX&nbsp;=&nbsp;Err.Description&nbsp;&&nbsp;"&nbsp;("&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;")"<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0027"><b>BASE CONVERSION ANY TO DEC</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;BaseXto10(dNum&nbsp;As&nbsp;String,&nbsp;lBase&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Double<br>
On&nbsp;Error&nbsp;GoTo&nbsp;Shit<br>
Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
Dim&nbsp;Power&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lBase&nbsp;>&nbsp;35&nbsp;Then&nbsp;Err.Raise&nbsp;-849151,&nbsp;,&nbsp;"Base&nbsp;too&nbsp;large"<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lBase&nbsp;<&nbsp;2&nbsp;Then&nbsp;Err.Raise&nbsp;-849151,&nbsp;,&nbsp;"Base&nbsp;too&nbsp;small"<br>
&nbsp;&nbsp;&nbsp;&nbsp;BaseXto10&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;Power&nbsp;=&nbsp;Len(dNum)&nbsp;To&nbsp;1&nbsp;Step&nbsp;-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;IsNumeric(Mid(dNum,&nbsp;Len(dNum)&nbsp;-&nbsp;Power&nbsp;+&nbsp;1,&nbsp;1))&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;CInt(Mid(dNum,&nbsp;Len(dNum)&nbsp;-&nbsp;Power&nbsp;+&nbsp;1,&nbsp;1))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;(Asc(Mid(dNum,&nbsp;Len(dNum)&nbsp;-&nbsp;Power&nbsp;+&nbsp;1,&nbsp;1))&nbsp;-&nbsp;55)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BaseXto10&nbsp;=&nbsp;BaseXto10&nbsp;+&nbsp;(x&nbsp;*&nbsp;(lBase&nbsp;^&nbsp;(Power&nbsp;-&nbsp;1)))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;Power<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
Shit:<br>
&nbsp;&nbsp;&nbsp;&nbsp;BaseXto10&nbsp;=&nbsp;Err.Description&nbsp;&&nbsp;"&nbsp;("&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;")"<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0028"><b>COMPARE 2 USER DEFINED TYPES</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Sub&nbsp;CopyMemory&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"RtlMoveMemory"&nbsp;(dest&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Any,&nbsp;source&nbsp;As&nbsp;Any,&nbsp;ByVal&nbsp;bytes&nbsp;As&nbsp;Long)<br>
<br>
'&nbsp;a&nbsp;sample&nbsp;UDT&nbsp;structure,&nbsp;that&nbsp;contains&nbsp;almost&nbsp;every&nbsp;possible&nbsp;type&nbsp;of&nbsp;data<br>
Private&nbsp;Type&nbsp;MyUDT<br>
&nbsp;&nbsp;&nbsp;&nbsp;item1&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;item2(10)&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;item3&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;item4&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;&nbsp;&nbsp;item5&nbsp;As&nbsp;Double<br>
&nbsp;&nbsp;&nbsp;&nbsp;item6&nbsp;As&nbsp;Currency<br>
&nbsp;&nbsp;&nbsp;&nbsp;item7&nbsp;As&nbsp;String&nbsp;*&nbsp;20<br>
End&nbsp;Type<br>
Dim&nbsp;udt1&nbsp;As&nbsp;MyUDT,&nbsp;udt2&nbsp;As&nbsp;MyUDT<br>
<br>
'&nbsp;init&nbsp;the&nbsp;first&nbsp;UDT<br>
udt1.item1&nbsp;=&nbsp;10<br>
udt1.item2(1)&nbsp;=&nbsp;4<br>
udt1.item3&nbsp;=&nbsp;12345<br>
udt1.item4&nbsp;=&nbsp;345.567<br>
udt1.item5&nbsp;=&nbsp;111.333444<br>
udt1.item6&nbsp;=&nbsp;223344.5566<br>
udt1.item7&nbsp;=&nbsp;"this&nbsp;is&nbsp;a&nbsp;test"<br>
<br>
'&nbsp;init&nbsp;the&nbsp;second&nbsp;UDT<br>
'&nbsp;(in&nbsp;this&nbsp;test&nbsp;both&nbsp;UDTs&nbsp;contains&nbsp;the&nbsp;same&nbsp;value)<br>
udt2&nbsp;=&nbsp;udt1<br>
<br>
'&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;to&nbsp;be&nbsp;compared<br>
Dim&nbsp;bytes&nbsp;As&nbsp;Long<br>
bytes&nbsp;=&nbsp;LenB(udt1)<br>
<br>
'&nbsp;the&nbsp;strings&nbsp;used&nbsp;for&nbsp;the&nbsp;comparison<br>
Dim&nbsp;s1&nbsp;As&nbsp;String,&nbsp;s2&nbsp;As&nbsp;String<br>
'&nbsp;make&nbsp;them&nbsp;long&nbsp;enough&nbsp;to&nbsp;host&nbsp;the&nbsp;UDTs<br>
s1&nbsp;=&nbsp;Space$((bytes&nbsp;+&nbsp;1)&nbsp;\&nbsp;2)<br>
s2&nbsp;=&nbsp;s1<br>
<br>
'&nbsp;copy&nbsp;the&nbsp;UDTs&nbsp;into&nbsp;the&nbsp;strings<br>
CopyMemory&nbsp;ByVal&nbsp;StrPtr(s1),&nbsp;ByVal&nbsp;VarPtr(udt1),&nbsp;bytes<br>
CopyMemory&nbsp;ByVal&nbsp;StrPtr(s2),&nbsp;ByVal&nbsp;VarPtr(udt2),&nbsp;bytes<br>
<br>
'&nbsp;now&nbsp;you&nbsp;can&nbsp;perform&nbsp;the&nbsp;comparison<br>
If&nbsp;s1&nbsp;=&nbsp;s2&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Equal"<br>
Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Different"<br>
End&nbsp;If<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0029"><b>VB TO EXCEL EXAMPLE</b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;objExcel&nbsp;As&nbsp;Excel.Application<br>
Dim&nbsp;objWorksheet&nbsp;As&nbsp;Excel.Worksheet<br>
Const&nbsp;BMWFont&nbsp;As&nbsp;String&nbsp;=&nbsp;"BMW&nbsp;Helvetica&nbsp;Light"<br>
Const&nbsp;XL_NOTRUNNING&nbsp;As&nbsp;Long&nbsp;=&nbsp;429<br>
Const&nbsp;Bold&nbsp;As&nbsp;Boolean&nbsp;=&nbsp;True<br>
Const&nbsp;Regular&nbsp;As&nbsp;Boolean&nbsp;=&nbsp;False<br>
Const&nbsp;Wrap&nbsp;As&nbsp;Boolean&nbsp;=&nbsp;True<br>
Const&nbsp;NoWrap&nbsp;As&nbsp;Boolean&nbsp;=&nbsp;True<br>
<br>
<br>
Sub&nbsp;OpenExcelSheet()<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objExcel&nbsp;=&nbsp;Excel.Application<br>
&nbsp;&nbsp;&nbsp;&nbsp;objExcel.Visible&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;objExcel.SheetsInNewWorkbook&nbsp;=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;objExcel.Workbooks.Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objWorksheet&nbsp;=&nbsp;objExcel.Worksheets("Sheet1")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
Sub&nbsp;WriteCell(sText&nbsp;As&nbsp;String,&nbsp;lCol&nbsp;As&nbsp;Long,&nbsp;lRow&nbsp;As&nbsp;Long,&nbsp;sFontName&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iFontSize&nbsp;As&nbsp;Integer,&nbsp;bBold&nbsp;As&nbsp;Boolean,&nbsp;sAlignment&nbsp;As&nbsp;String)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;objWorksheet<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Left(sText,&nbsp;1)&nbsp;=&nbsp;"'"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).Value&nbsp;=&nbsp;sText<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).Formula&nbsp;=&nbsp;sText<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).Font.Name&nbsp;=&nbsp;sFontName<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).Font.Size&nbsp;=&nbsp;iFontSize<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).Font.Bold&nbsp;=&nbsp;IIf(bBold,&nbsp;True,&nbsp;False)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).VerticalAlignment&nbsp;=&nbsp;xlTop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Cells(lRow,&nbsp;lCol).HorizontalAlignment&nbsp;=&nbsp;IIf(LCase(sAlignment)&nbsp;=&nbsp;"left",&nbsp;xlLeft,&nbsp;xlRight)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'.Cells(lRow,&nbsp;lCol).Font.Color&nbsp;=&nbsp;RGB(255,0,0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
End&nbsp;Sub<br>
Function&nbsp;CloseExcelSheet(ByVal&nbsp;EmployeeNo&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;P11DFromDate&nbsp;As&nbsp;Date,&nbsp;ByVal&nbsp;P11DToDate&nbsp;As&nbsp;Date)&nbsp;As&nbsp;String<br>
Dim&nbsp;sLoc&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;sLoc&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"P11DSaveLocation")<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;sLoc&nbsp;=&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SaveSetting&nbsp;App.Title,&nbsp;"Settings",&nbsp;"P11DSaveLocation",&nbsp;"c:\"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;P11D_MsgBox&nbsp;"The&nbsp;location&nbsp;where&nbsp;your&nbsp;P11D&nbsp;reports&nbsp;has&nbsp;not&nbsp;been&nbsp;defined."&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"The&nbsp;save&nbsp;location&nbsp;is&nbsp;now&nbsp;set&nbsp;to&nbsp;C:\"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"You&nbsp;can&nbsp;change&nbsp;this&nbsp;location&nbsp;from&nbsp;the&nbsp;Main&nbsp;menu/Options",&nbsp;99,&nbsp;App.Title<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;CloseExcelSheet&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"P11DSaveLocation")&nbsp;&&nbsp;"P11D&nbsp;"&nbsp;&&nbsp;IIf(bForecast,&nbsp;"Forecast",&nbsp;"Actual")&nbsp;&&nbsp;"&nbsp;Emp&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Format(EmployeeNo,&nbsp;"000000")&nbsp;&&nbsp;"&nbsp;From&nbsp;"&nbsp;&&nbsp;Format(P11DFromDate,&nbsp;"dd.mm.yyyy")&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;To&nbsp;"&nbsp;&&nbsp;Format(P11DToDate,&nbsp;"dd.mm.yyyy")&nbsp;&&nbsp;"&nbsp;Created&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Format(Now,&nbsp;"dd.mm.yyyy&nbsp;HH.MM.SS")&nbsp;&&nbsp;".xls"<br>
&nbsp;&nbsp;&nbsp;&nbsp;objWorksheet.SaveAs&nbsp;FileName:=CloseExcelSheet,&nbsp;FileFormat:=xlNormal,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Password:="",&nbsp;WriteResPassword:="",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadOnlyRecommended:=False,&nbsp;CreateBackup:=False<br>
&nbsp;&nbsp;&nbsp;&nbsp;objExcel.Quit<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objWorksheet&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objExcel&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
Sub&nbsp;ExcelPageSetup(ByVal&nbsp;P11DFromDate&nbsp;As&nbsp;Date,&nbsp;ByVal&nbsp;P11DToDate&nbsp;As&nbsp;Date,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;EmployeeNo&nbsp;As&nbsp;Long)<br>
Dim&nbsp;sPageSetup&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Page&nbsp;setup)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;objWorksheet<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Range("S1").Select<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Pictures.Insert(App.Path&nbsp;&&nbsp;"\bmw_logo.bmp").Select<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;Selection<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ShapeRange.ScaleWidth&nbsp;0.66,&nbsp;0,&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ShapeRange.ScaleHeight&nbsp;0.66,&nbsp;0,&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sPageSetup&nbsp;=&nbsp;"PAGE.SETUP(,,.5,.5,1,1,False,False,False,False,2,9,True,"&nbsp;&&nbsp;Chr(34)&nbsp;&&nbsp;"Auto"&nbsp;&&nbsp;Chr(34)&nbsp;&&nbsp;",1,False,"&nbsp;&&nbsp;Chr(34)&nbsp;&&nbsp;"620"&nbsp;&&nbsp;Chr(34)&nbsp;&&nbsp;",0.5,0.5,False,False)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'PAGE.SETUP(head,&nbsp;foot,&nbsp;left,&nbsp;right,&nbsp;top,&nbsp;bot,&nbsp;hdng,&nbsp;grid,&nbsp;h_cntr,&nbsp;v_cntr,&nbsp;orient,&nbsp;paper_size,&nbsp;scale,&nbsp;pg_num,&nbsp;pg_order,&nbsp;bw_cells,&nbsp;quality,&nbsp;head_margin,&nbsp;foot_margin,&nbsp;notes,&nbsp;draft)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Application.ExecuteExcel4Macro&nbsp;sPageSetup<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'line&nbsp;1&nbsp;header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Header&nbsp;line&nbsp;1)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'A&nbsp;Subsidiary&nbsp;of&nbsp;BMW&nbsp;AG",&nbsp;1,&nbsp;1,&nbsp;BMWFont,&nbsp;6,&nbsp;Regular,&nbsp;"right"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Range("A1").Select<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;Selection<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.VerticalAlignment&nbsp;=&nbsp;xlTop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.WrapText&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'"&nbsp;&&nbsp;OrganisationDescription(CurrentOrganisation),&nbsp;2,&nbsp;1,&nbsp;BMWFont,&nbsp;18,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'"&nbsp;&&nbsp;Year(P11DFromDate)&nbsp;&&nbsp;"&nbsp;-&nbsp;"&nbsp;&&nbsp;Year(P11DToDate),&nbsp;8,&nbsp;1,&nbsp;BMWFont,&nbsp;18,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'line&nbsp;2&nbsp;employee&nbsp;header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Header&nbsp;line&nbsp;2)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'"&nbsp;&&nbsp;Format(EmployeeNo,&nbsp;"000000"),&nbsp;1,&nbsp;3,&nbsp;BMWFont,&nbsp;10,&nbsp;Bold,&nbsp;"Left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'"&nbsp;&&nbsp;GetEmloyeeName(EmployeeNo),&nbsp;4,&nbsp;3,&nbsp;BMWFont,&nbsp;10,&nbsp;Bold,&nbsp;"Left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'"&nbsp;&&nbsp;GetEmloyeeNI(EmployeeNo),&nbsp;9,&nbsp;3,&nbsp;BMWFont,&nbsp;10,&nbsp;Bold,&nbsp;"Left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'line&nbsp;3&nbsp;Vehicles<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Header&nbsp;line&nbsp;3)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Vehicles",&nbsp;1,&nbsp;5,&nbsp;BMWFont,&nbsp;10,&nbsp;Bold,&nbsp;"Left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Mileage",&nbsp;6,&nbsp;6,&nbsp;BMWFont,&nbsp;9,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Loan",&nbsp;14,&nbsp;6,&nbsp;BMWFont,&nbsp;9,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Depreciation",&nbsp;16,&nbsp;6,&nbsp;BMWFont,&nbsp;9,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;".",&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'column&nbsp;headers<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Column&nbsp;headers)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'From",&nbsp;1,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'To",&nbsp;2,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'PPN",&nbsp;3,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Reg&nbsp;No",&nbsp;4,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Model",&nbsp;5,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Business",&nbsp;6,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Private",&nbsp;7,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'PMR",&nbsp;8,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Ins",&nbsp;9,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Maint",&nbsp;10,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'RFL",&nbsp;11,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'PDI",&nbsp;12,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Amount",&nbsp;13,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Benefit",&nbsp;14,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Residual",&nbsp;15,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Amount",&nbsp;16,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Benefit",&nbsp;17,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Fuel",&nbsp;18,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteCell&nbsp;"'Total",&nbsp;19,&nbsp;7,&nbsp;BMWFont,&nbsp;8,&nbsp;Bold,&nbsp;"left"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'column&nbsp;widths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SBInfo&nbsp;"Formatting&nbsp;excel&nbsp;wooksheet&nbsp;(Column&nbsp;widths)"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(1).ColumnWidth&nbsp;=&nbsp;9.14<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(2).ColumnWidth&nbsp;=&nbsp;9.14<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(3).ColumnWidth&nbsp;=&nbsp;3.71<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(4).ColumnWidth&nbsp;=&nbsp;8.43<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(5).ColumnWidth&nbsp;=&nbsp;11<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(6).ColumnWidth&nbsp;=&nbsp;7.29<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(7).ColumnWidth&nbsp;=&nbsp;5.75<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(8).ColumnWidth&nbsp;=&nbsp;4<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(9).ColumnWidth&nbsp;=&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(10).ColumnWidth&nbsp;=&nbsp;5<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(11).ColumnWidth&nbsp;=&nbsp;4.3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(12).ColumnWidth&nbsp;=&nbsp;4.14<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(13).ColumnWidth&nbsp;=&nbsp;6.86<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(14).ColumnWidth&nbsp;=&nbsp;6.3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(15).ColumnWidth&nbsp;=&nbsp;6.86<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(16).ColumnWidth&nbsp;=&nbsp;6.43<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(17).ColumnWidth&nbsp;=&nbsp;6<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(18).ColumnWidth&nbsp;=&nbsp;6.29<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Columns(19).ColumnWidth&nbsp;=&nbsp;8.43<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0030"><b>LASER DRAW EFFECT</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;GetTickCount&nbsp;Lib&nbsp;"Kernel32"&nbsp;()&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetPixel&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hDC&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;SetPixel&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hDC&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;crColor&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Dim&nbsp;stopMe&nbsp;As&nbsp;Boolean<br>
<br>
Private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;Dim&nbsp;pCol&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;Dim&nbsp;pW&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;Dim&nbsp;pH&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;DisableButtons<br>
&nbsp;&nbsp;Picture2.Cls<br>
&nbsp;&nbsp;pW&nbsp;=&nbsp;Picture1.Width<br>
&nbsp;&nbsp;pH&nbsp;=&nbsp;Picture1.Height<br>
&nbsp;&nbsp;For&nbsp;X&nbsp;=&nbsp;0&nbsp;To&nbsp;pW&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;Y&nbsp;=&nbsp;0&nbsp;To&nbsp;pH&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pCol&nbsp;=&nbsp;GetPixel(Picture1.hDC,&nbsp;X,&nbsp;Y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Picture2.Line&nbsp;(pW,&nbsp;pH&nbsp;/&nbsp;2)-(X,&nbsp;Y),&nbsp;pCol<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetPixel&nbsp;Picture2.hDC,&nbsp;X,&nbsp;Y,&nbsp;pCol<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Sleep&nbsp;10<br>
&nbsp;&nbsp;&nbsp;&nbsp;Picture2.Refresh<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;stopMe&nbsp;=&nbsp;True&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopMe&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnableButtons<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;Next&nbsp;X<br>
&nbsp;&nbsp;EnableButtons<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0031"><b>LIST FILES AND FOLDERS UNDER A FOLDER</b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;FSO&nbsp;As&nbsp;New&nbsp;FileSystemObject<br>
Dim&nbsp;objFolders&nbsp;As&nbsp;Folders<br>
Dim&nbsp;objFolder&nbsp;As&nbsp;Folder<br>
Dim&nbsp;objFiles&nbsp;As&nbsp;Files<br>
Dim&nbsp;objFile&nbsp;As&nbsp;File<br>
Set&nbsp;objFolder&nbsp;=&nbsp;FSO.GetFolder("C:\")<br>
Set&nbsp;objFolders&nbsp;=&nbsp;objFolder.SubFolders<br>
Set&nbsp;objFiles&nbsp;=&nbsp;objFolder.Files<br>
<br>
<br>
<br>
For&nbsp;Each&nbsp;objFolder&nbsp;In&nbsp;objFolders<br>
&nbsp;&nbsp;&nbsp;&nbsp;List1.AddItem&nbsp;objFolder.Name<br>
Next<br>
<br>
<br>
<br>
For&nbsp;Each&nbsp;objFile&nbsp;In&nbsp;objFiles<br>
&nbsp;&nbsp;&nbsp;&nbsp;List2.AddItem&nbsp;objFile.Name<br>
Next<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0032"><b>CAPTURE SCREEN TO FILE (SCREEN PRINT)</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Sub&nbsp;keybd_event&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;bVk&nbsp;As&nbsp;Byte,&nbsp;ByVal&nbsp;bScan&nbsp;As&nbsp;Byte,&nbsp;_&nbsp;ByVal&nbsp;dwFlags&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwExtraInfo&nbsp;As&nbsp;Long)<br>
<br>
Public&nbsp;Function&nbsp;Capture_Desktop(ByVal&nbsp;Destination$)&nbsp;as&nbsp;Boolean&nbsp;<br>
<br>
On&nbsp;Error&nbsp;goto&nbsp;errl&nbsp;<br>
DoEvents&nbsp;<br>
Call&nbsp;keybd_event(vbKeySnapshot,&nbsp;1,&nbsp;0,&nbsp;0)&nbsp;'Get&nbsp;the&nbsp;screen&nbsp;and&nbsp;copy&nbsp;it&nbsp;to&nbsp;clipboard&nbsp;<br>
DoEvents&nbsp;'let&nbsp;computer&nbsp;catch&nbsp;up&nbsp;<br>
SavePicture&nbsp;Clipboard.GetData(vbCFBitmap),&nbsp;Destination$&nbsp;'&nbsp;saves&nbsp;the&nbsp;clipboard&nbsp;data&nbsp;to&nbsp;a&nbsp;BMP&nbsp;file&nbsp;<br>
Capture_Desktop&nbsp;=&nbsp;True&nbsp;<br>
Exit&nbsp;Function&nbsp;<br>
errl:&nbsp;<br>
Msgbox&nbsp;"Error&nbsp;number:&nbsp;"&nbsp;&&nbsp;err.number&nbsp;&&nbsp;".&nbsp;"&nbsp;&&nbsp;err.description&nbsp;<br>
Capture_Desktop&nbsp;=&nbsp;False&nbsp;<br>
End&nbsp;Function&nbsp;'A&nbsp;lil'&nbsp;example&nbsp;<br>
Private&nbsp;Sub&nbsp;Command1_Click()&nbsp;<br>
Capture_Desktop&nbsp;"c:\windows\desktop\desktop.bmp"&nbsp;'That's&nbsp;it<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0033"><b>SLEEP API</b></a></b></font><br>
<font face="Courier New" size="2">
Declare&nbsp;Sub&nbsp;Sleep&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwMilliseconds&nbsp;As&nbsp;Long)<br>
'Sleep&nbsp;(1000)<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0034"><b>GET REMOTE SERVER TIME</b></a></b></font><br>
<font face="Courier New" size="2">
option&nbsp;Explicit<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Declare&nbsp;Function&nbsp;NetRemoteTOD&nbsp;Lib&nbsp;"Netapi32.dll"&nbsp;(&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tServer&nbsp;as&nbsp;Any,&nbsp;pBuffer&nbsp;as&nbsp;Long)&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Type&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wYear&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wMonth&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wDayOfWeek&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wDay&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wHour&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wMinute&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wSecond&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wMilliseconds&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Type&nbsp;TIME_ZONE_INFORMATION<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bias&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StandardName(32)&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StandardDate&nbsp;as&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StandardBias&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DaylightName(32)&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DaylightDate&nbsp;as&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DaylightBias&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Declare&nbsp;Function&nbsp;GetTimeZoneInformation&nbsp;Lib&nbsp;"kernel32"&nbsp;(lpTimeZoneInformation&nbsp;as&nbsp;TIME_ZONE_INFORMATION)&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Declare&nbsp;Function&nbsp;NetApiBufferFree&nbsp;Lib&nbsp;"Netapi32.dll"&nbsp;(byval&nbsp;lpBuffer&nbsp;as&nbsp;Long)&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Type&nbsp;TIME_OF_DAY_INFO<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_elapsedt&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_msecs&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_hours&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_mins&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_secs&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_hunds&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_timezone&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_tinterval&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_day&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_month&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_year&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tod_weekday&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Declare&nbsp;Sub&nbsp;CopyMemory&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"RtlMoveMemory"&nbsp;(Destination&nbsp;as&nbsp;Any,&nbsp;Source&nbsp;as&nbsp;Any,&nbsp;byval&nbsp;Length&nbsp;as&nbsp;Long)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Function&nbsp;getRemoteTOD(byval&nbsp;strServer&nbsp;as&nbsp;string)&nbsp;as&nbsp;date<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;result&nbsp;as&nbsp;date<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lRet&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tod&nbsp;as&nbsp;TIME_OF_DAY_INFO<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lpbuff&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tServer()&nbsp;as&nbsp;Byte<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tServer&nbsp;=&nbsp;strServer&nbsp;&&nbsp;vbNullChar<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lRet&nbsp;=&nbsp;NetRemoteTOD(tServer(0),&nbsp;lpbuff)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lRet&nbsp;=&nbsp;0&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CopyMemory&nbsp;tod,&nbsp;byval&nbsp;lpbuff,&nbsp;len(tod)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NetApiBufferFree&nbsp;lpbuff<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;DateSerial(tod.tod_year,&nbsp;tod.tod_month,&nbsp;tod.tod_day)&nbsp;+&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TimeSerial(tod.tod_hours,&nbsp;tod.tod_mins&nbsp;-&nbsp;tod.tod_timezone,&nbsp;tod.tod_secs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getRemoteTOD&nbsp;=&nbsp;result<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Err.Raise&nbsp;Number:=vbObjectError&nbsp;+&nbsp;1001,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description:="cannot&nbsp;get&nbsp;remote&nbsp;TOD"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Function<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;to&nbsp;use&nbsp;in&nbsp;your&nbsp;program,&nbsp;call&nbsp;it&nbsp;like&nbsp;this&nbsp;:&nbsp;<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;d&nbsp;as&nbsp;date<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;=&nbsp;GetRemoteTOD("your&nbsp;NT&nbsp;server&nbsp;name&nbsp;goes&nbsp;here")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;d<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0035"><b>TRANSAPRENT FORM 5</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;CreateRoundRectRgn&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;X1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X3&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y3&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CreateRectRgn&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;X1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y2&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CreateEllipticRgn&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;X1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;X2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Y2&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CombineRgn&nbsp;Lib&nbsp;"gdi32"&nbsp;(ByVal&nbsp;hDestRgn&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hSrcRgn1&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hSrcRgn2&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nCombineMode&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;SetWindowRgn&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hWnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hRgn&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;bRedraw&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'2&nbsp;The&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;This&nbsp;should&nbsp;be&nbsp;in&nbsp;the&nbsp;form's&nbsp;code.&nbsp;<br>
<br>
<br>
Private&nbsp;Function&nbsp;fMakeATranspArea(AreaType&nbsp;As&nbsp;String,&nbsp;pCordinate()&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Name:&nbsp;fMakeATranpArea<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Author:&nbsp;Dalin&nbsp;Nie<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Date:&nbsp;5/18/98<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Purpose:&nbsp;Create&nbsp;a&nbsp;Transprarent&nbsp;Area&nbsp;in&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;form&nbsp;so&nbsp;that&nbsp;you&nbsp;can&nbsp;see&nbsp;through<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Input:&nbsp;Areatype&nbsp;:&nbsp;a&nbsp;String&nbsp;indicate&nbsp;wha<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;kind&nbsp;of&nbsp;hole&nbsp;shape&nbsp;it&nbsp;would&nbsp;like&nbsp;to&nbsp;ma<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ke<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;PCordinate&nbsp;:&nbsp;the&nbsp;cordinate&nbsp;area&nbsp;needed<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;create&nbsp;the&nbsp;shape:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Example:&nbsp;X1,&nbsp;Y1,&nbsp;X2,&nbsp;Y2&nbsp;for&nbsp;Rectangle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'OutPut:&nbsp;A&nbsp;boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;RGN_DIFF&nbsp;=&nbsp;4<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lOriginalForm&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ltheHole&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lNewForm&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lFwidth&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lFHeight&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lborder_width&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ltitle_height&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;Goto&nbsp;Trap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lFwidth&nbsp;=&nbsp;ScaleX(Width,&nbsp;vbTwips,&nbsp;vbPixels)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lFHeight&nbsp;=&nbsp;ScaleY(Height,&nbsp;vbTwips,&nbsp;vbPixels)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lOriginalForm&nbsp;=&nbsp;CreateRectRgn(0,&nbsp;0,&nbsp;lFwidth,&nbsp;lFHeight)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lborder_width&nbsp;=&nbsp;(lFHeight&nbsp;-&nbsp;ScaleWidth)&nbsp;/&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ltitle_height&nbsp;=&nbsp;lFHeight&nbsp;-&nbsp;lborder_width&nbsp;-&nbsp;ScaleHeight<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select&nbsp;Case&nbsp;AreaType<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;"Elliptic"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ltheHole&nbsp;=&nbsp;CreateEllipticRgn(pCordinate(1),&nbsp;pCordinate(2),&nbsp;pCordinate(3),&nbsp;pCordinate(4))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;"RectAngle"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ltheHole&nbsp;=&nbsp;CreateRectRgn(pCordinate(1),&nbsp;pCordinate(2),&nbsp;pCordinate(3),&nbsp;pCordinate(4))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;"RoundRect"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ltheHole&nbsp;=&nbsp;CreateRoundRectRgn(pCordinate(1),&nbsp;pCordinate(2),&nbsp;pCordinate(3),&nbsp;pCordinate(4),&nbsp;pCordinate(5),&nbsp;pCordinate(6))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;"Circle"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ltheHole&nbsp;=&nbsp;CreateRoundRectRgn(pCordinate(1),&nbsp;pCordinate(2),&nbsp;pCordinate(3),&nbsp;pCordinate(4),&nbsp;pCordinate(3),&nbsp;pCordinate(4))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Unknown&nbsp;Shape!!"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Select<br>
&nbsp;&nbsp;&nbsp;&nbsp;lNewForm&nbsp;=&nbsp;CreateRectRgn(0,&nbsp;0,&nbsp;0,&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;CombineRgn&nbsp;lNewForm,&nbsp;lOriginalForm,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ltheHole,&nbsp;RGN_DIFF<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;SetWindowRgn&nbsp;hWnd,&nbsp;lNewForm,&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Refresh<br>
&nbsp;&nbsp;&nbsp;&nbsp;fMakeATranspArea&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;Trap:<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"error&nbsp;Occurred.&nbsp;Error&nbsp;#&nbsp;"&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;",&nbsp;"&nbsp;&&nbsp;Err.Description<br>
End&nbsp;Function<br>
<br>
<br>
'&nbsp;3&nbsp;How&nbsp;To&nbsp;Call&nbsp;<br>
<br>
Dim&nbsp;lParam(1&nbsp;To&nbsp;6)&nbsp;As&nbsp;Long<br>
lParam(1)&nbsp;=&nbsp;100<br>
lParam(2)&nbsp;=&nbsp;100<br>
lParam(3)&nbsp;=&nbsp;250<br>
lParam(4)&nbsp;=&nbsp;250<br>
lParam(5)&nbsp;=&nbsp;50<br>
lParam(6)&nbsp;=&nbsp;50<br>
Call&nbsp;fMakeATranspArea("RoundRect",&nbsp;lParam())<br>
'Call&nbsp;fMakeATranspArea("RectAngle",&nbsp;lPar<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;am())<br>
'Call&nbsp;fMakeATranspArea("Circle",&nbsp;lParam(<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;))<br>
'Call&nbsp;fMakeATranspArea("Elliptic",&nbsp;lPara<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m())<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0036"><b>FAST DECIMAL TO BINARY</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Function&nbsp;DecToBin2(ByVal&nbsp;dIn&nbsp;As&nbsp;Double)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;DecToBin2&nbsp;=&nbsp;""<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;dIn&nbsp;>=&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DecToBin2&nbsp;=&nbsp;IIf(dIn&nbsp;Mod&nbsp;2&nbsp;=&nbsp;0,&nbsp;"0",&nbsp;"1")&nbsp;&&nbsp;DecToBin2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dIn&nbsp;=&nbsp;dIn&nbsp;\&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
End&nbsp;Function<br>
<br>
Private&nbsp;Function&nbsp;BinToDec(ByVal&nbsp;sIn&nbsp;As&nbsp;String)&nbsp;As&nbsp;Double<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;BinToDec&nbsp;=&nbsp;0<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(sIn)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BinToDec&nbsp;=&nbsp;BinToDec&nbsp;+&nbsp;(CInt(Mid(sIn,&nbsp;x,&nbsp;1))&nbsp;*&nbsp;(2&nbsp;^&nbsp;(Len(sIn)&nbsp;-&nbsp;x)))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0037"><b>EXCEL STUFF 3 (WORKING)</b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;objExcel&nbsp;As&nbsp;Excel.Application<br>
Dim&nbsp;i&nbsp;As&nbsp;Long<br>
<br>
Set&nbsp;objExcel&nbsp;=&nbsp;Excel.Application<br>
objExcel.Visible&nbsp;=&nbsp;False<br>
objExcel.SheetsInNewWorkbook&nbsp;=&nbsp;1<br>
objExcel.Workbooks.Add&nbsp;'&nbsp;(Text1)<br>
<br>
With&nbsp;objExcel.ActiveSheet<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;1).Value&nbsp;=&nbsp;"DATE"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;2).Value&nbsp;=&nbsp;"CHAPTER"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;3).Value&nbsp;=&nbsp;"#&nbsp;QUESTIONS"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;4).Value&nbsp;=&nbsp;"RIGHT&nbsp;ANSWERS"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;5).Value&nbsp;=&nbsp;"WRONG&nbsp;ANSWERS"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;6).Value&nbsp;=&nbsp;"NOT&nbsp;ANSWERED"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Cells(1,&nbsp;7).Value&nbsp;=&nbsp;"PERCENTAGE"<br>
End&nbsp;With<br>
<br>
objExcel.ActiveSheet.SaveAs&nbsp;FileName:=Text1,&nbsp;FileFormat:=xlNormal,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Password:="",&nbsp;WriteResPassword:="",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadOnlyRecommended:=False,&nbsp;CreateBackup:=False<br>
objExcel.Quit<br>
Set&nbsp;objExcel&nbsp;=&nbsp;Nothing<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0038"><b>EXCEL STUFF 2</b></a></b></font><br>
<font face="Courier New" size="2">
im&nbsp;objExcel&nbsp;As&nbsp;Excel.Application<br>
<br>
Set&nbsp;objExcel&nbsp;=&nbsp;Excel.Application<br>
objExcel.Visible&nbsp;=&nbsp;False<br>
objExcel.SheetsInNewWorkbook&nbsp;=&nbsp;1<br>
objExcel.Workbooks.Open&nbsp;("C:/WS_SolarisMTT/Stats")<br>
<br>
With&nbsp;objExcel.ActiveSheet<br>
.Cells(1,&nbsp;1).Value&nbsp;=&nbsp;"DATE"<br>
.Cells(1,&nbsp;2).Value&nbsp;=&nbsp;"CHAPTER"<br>
.Cells(1,&nbsp;3).Value&nbsp;=&nbsp;"#&nbsp;QUESTIONS"<br>
.Cells(1,&nbsp;4).Value&nbsp;=&nbsp;"RIGHT&nbsp;ANSWERS"<br>
.Cells(1,&nbsp;5).Value&nbsp;=&nbsp;"WRONG&nbsp;ANSWERS"<br>
.Cells(1,&nbsp;6).Value&nbsp;=&nbsp;"NOT&nbsp;ANSWERED"<br>
.Cells(1,&nbsp;7).Value&nbsp;=&nbsp;"PERCENTAGE"<br>
End&nbsp;With<br>
<br>
I&nbsp;=&nbsp;2<br>
cellfree:<br>
With&nbsp;objExcel.ActiveSheet<br>
<br>
If&nbsp;.Cells(I,&nbsp;1).Value&nbsp;<>&nbsp;""&nbsp;Then<br>
I&nbsp;=&nbsp;I&nbsp;+&nbsp;1<br>
GoTo&nbsp;cellfree<br>
Else<br>
.Cells(I,&nbsp;1).Value&nbsp;=&nbsp;Date<br>
.Cells(I,&nbsp;2).Value&nbsp;=&nbsp;"Chap1"<br>
.Cells(I,&nbsp;3).Value&nbsp;=&nbsp;N<br>
.Cells(I,&nbsp;4).Value&nbsp;=&nbsp;contador<br>
.Cells(I,&nbsp;5).Value&nbsp;=&nbsp;Cuentabad<br>
.Cells(I,&nbsp;6).Value&nbsp;=&nbsp;Cuentanoans<br>
.Cells(I,&nbsp;7).Value&nbsp;=&nbsp;Percent<br>
End&nbsp;If<br>
End&nbsp;With<br>
<br>
<br>
objExcel.Save&nbsp;"C:/WS_SolarisMTT/Stats"<br>
objExcel.Quit<br>
Set&nbsp;objExcel&nbsp;=&nbsp;Nothing<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0039"><b>EXCEL STUFF 1</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;xlApp&nbsp;As&nbsp;Excel.Application&nbsp;&nbsp;'&nbsp;Excel&nbsp;Application&nbsp;Object&nbsp;<br>
Private&nbsp;xlBook&nbsp;As&nbsp;Excel.Workbook&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Excel&nbsp;Workbook&nbsp;Object&nbsp;<br>
<br>
'*************************************************************&nbsp;<br>
'&nbsp;Gets&nbsp;the&nbsp;contents&nbsp;of&nbsp;an&nbsp;Excel&nbsp;Worksheet's&nbsp;cell.&nbsp;<br>
'&nbsp;<br>
'&nbsp;xlWorksheet:&nbsp;Name&nbsp;of&nbsp;a&nbsp;worksheet&nbsp;in&nbsp;an&nbsp;Excel&nbsp;File,&nbsp;for&nbsp;example,&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Sheet1"&nbsp;<br>
'&nbsp;xlCellName:&nbsp;&nbsp;Name&nbsp;of&nbsp;a&nbsp;Cell&nbsp;(Row&nbsp;and&nbsp;Column),&nbsp;for&nbsp;example,&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"A1"&nbsp;or&nbsp;"B222".&nbsp;<br>
'&nbsp;xlFileName:&nbsp;&nbsp;Name&nbsp;of&nbsp;an&nbsp;Excel&nbsp;File,&nbsp;for&nbsp;example,&nbsp;"C:TestTesting.xls"&nbsp;<br>
'*************************************************************&nbsp;<br>
Private&nbsp;Function&nbsp;GetExcel(xlFileName&nbsp;As&nbsp;String,&nbsp;_&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlWorksheet&nbsp;As&nbsp;String,&nbsp;_&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlCellName&nbsp;As&nbsp;String)&nbsp;As&nbsp;String&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;GetExcel_Err&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;strCellContents&nbsp;As&nbsp;String&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Create&nbsp;the&nbsp;Excel&nbsp;App&nbsp;Object&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlApp&nbsp;=&nbsp;CreateObject("Excel.Application")&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Create&nbsp;the&nbsp;Excel&nbsp;Workbook&nbsp;Object.&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlBook&nbsp;=&nbsp;xlApp.Workbooks.Open(xlFileName)&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Get&nbsp;the&nbsp;Cell&nbsp;Contents&nbsp;<br>
&nbsp;&nbsp;&nbsp;strCellContents&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlBook.worksheets(xlWorksheet).range(xlCellName).Value<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Close&nbsp;the&nbsp;spreadsheet&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlBook.Close&nbsp;savechanges:=False&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlApp.Quit&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlApp&nbsp;=&nbsp;Nothing&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlBook&nbsp;=&nbsp;Nothing&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;GetExcel&nbsp;=&nbsp;strCellContents&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Exit&nbsp;Function&nbsp;<br>
GetExcel_Err:&nbsp;<br>
&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"GetExcel&nbsp;Error:&nbsp;"&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;"-"&nbsp;&&nbsp;Err.Description&nbsp;<br>
&nbsp;&nbsp;&nbsp;Resume&nbsp;Next&nbsp;<br>
End&nbsp;Function&nbsp;<br>
<br>
'*************************************************************&nbsp;<br>
'&nbsp;Sets&nbsp;the&nbsp;contents&nbsp;of&nbsp;an&nbsp;Excel&nbsp;Worksheet's&nbsp;cell.&nbsp;<br>
'&nbsp;<br>
'&nbsp;xlWorksheet:&nbsp;Name&nbsp;of&nbsp;a&nbsp;worksheet&nbsp;in&nbsp;an&nbsp;Excel&nbsp;File,&nbsp;for&nbsp;example,&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Sheet1"&nbsp;<br>
'&nbsp;xlCellName:&nbsp;&nbsp;Name&nbsp;of&nbsp;a&nbsp;Cell&nbsp;(Row&nbsp;and&nbsp;Column),&nbsp;for&nbsp;example,&nbsp;<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"A1"&nbsp;or&nbsp;"B222".&nbsp;<br>
'&nbsp;xlFileName:&nbsp;&nbsp;Name&nbsp;of&nbsp;an&nbsp;Excel&nbsp;File,&nbsp;for&nbsp;example,&nbsp;"C:TestTesting.xls"&nbsp;<br>
'&nbsp;xlCellContents:&nbsp;&nbsp;What&nbsp;you&nbsp;want&nbsp;to&nbsp;place&nbsp;into&nbsp;the&nbsp;Cell.&nbsp;<br>
'*************************************************************&nbsp;<br>
Private&nbsp;Sub&nbsp;SetExcel(xlFileName&nbsp;As&nbsp;String,&nbsp;_&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlWorksheet&nbsp;As&nbsp;String,&nbsp;_&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlCellName&nbsp;As&nbsp;String,&nbsp;_&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xlCellContents&nbsp;As&nbsp;String)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;SetExcel_Err&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Create&nbsp;the&nbsp;Excel&nbsp;App&nbsp;Object&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlApp&nbsp;=&nbsp;CreateObject("Excel.Application")&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Create&nbsp;the&nbsp;Excel&nbsp;Workbook&nbsp;Object.&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlBook&nbsp;=&nbsp;xlApp.Workbooks.Open(xlFileName)&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Set&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;Cell&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlBook.worksheets(xlWorksheet).range(xlCellName).Value&nbsp;=&nbsp;xlCellContents&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;'&nbsp;Save&nbsp;changes&nbsp;and&nbsp;close&nbsp;the&nbsp;spreadsheet&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlBook.Save&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlBook.Close&nbsp;savechanges:=False&nbsp;<br>
&nbsp;&nbsp;&nbsp;xlApp.Quit&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlApp&nbsp;=&nbsp;Nothing&nbsp;<br>
&nbsp;&nbsp;&nbsp;Set&nbsp;xlBook&nbsp;=&nbsp;Nothing&nbsp;<br>
&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub&nbsp;<br>
SetExcel_Err:&nbsp;<br>
&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"SetExcel&nbsp;Error:&nbsp;"&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;"-"&nbsp;&&nbsp;Err.Description&nbsp;<br>
&nbsp;&nbsp;&nbsp;Resume&nbsp;Next&nbsp;<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0040"><b>ARRAY BUILDING WITHOUT SUBSCRIPTS</b></a></b></font><br>
<font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;s(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;1&nbsp;To&nbsp;10<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;Preserve&nbsp;s(UBound(s)&nbsp;+&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s(UBound(s)&nbsp;-&nbsp;1)&nbsp;=&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;ReDim&nbsp;Preserve&nbsp;s(UBound(s)&nbsp;-&nbsp;1)<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0041"><b>KILL APPLICATION</b></a></b></font><br>
<font face="Courier New" size="2">
Const&nbsp;MAX_PATH&&nbsp;=&nbsp;260<br>
Declare&nbsp;Function&nbsp;TerminateProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;ApphProcess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uExitCode&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;OpenProcess&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;blnheritHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwAppProcessId&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;ProcessFirst&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"Process32First"&nbsp;(ByVal&nbsp;hSnapshot&nbsp;As&nbsp;Long,&nbsp;uProcess&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;ProcessNext&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"Process32Next"&nbsp;(ByVal&nbsp;hSnapshot&nbsp;As&nbsp;Long,&nbsp;uProcess&nbsp;As&nbsp;PROCESSENTRY32)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;CreateToolhelpSnapshot&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"CreateToolhelp32Snapshot"&nbsp;(ByVal&nbsp;lFlags&nbsp;As&nbsp;Long,&nbsp;lProcessID&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Declare&nbsp;Function&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
<br>
Type&nbsp;PROCESSENTRY32<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwSize&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntUsage&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32DefaultHeapID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ModuleID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;cntThreads&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;th32ParentProcessID&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;pcPriClassBase&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwFlags&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;szexeFile&nbsp;As&nbsp;String&nbsp;*&nbsp;MAX_PATH<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Type<br>
<br>
<br>
<br>
Public&nbsp;Function&nbsp;KillApp(myName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;PROCESS_ALL_ACCESS&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;uProcess&nbsp;As&nbsp;PROCESSENTRY32<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;rProcessFound&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hSnapshot&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;szExename&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;exitCode&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;myProcess&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;AppKill&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;appCount&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Local&nbsp;Error&nbsp;Goto&nbsp;Finish<br>
&nbsp;&nbsp;&nbsp;&nbsp;appCount&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;TH32CS_SNAPPROCESS&nbsp;As&nbsp;Long&nbsp;=&nbsp;2&<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;uProcess.dwSize&nbsp;=&nbsp;Len(uProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;hSnapshot&nbsp;=&nbsp;CreateToolhelpSnapshot(TH32CS_SNAPPROCESS,&nbsp;0&)<br>
&nbsp;&nbsp;&nbsp;&nbsp;rProcessFound&nbsp;=&nbsp;ProcessFirst(hSnapshot,&nbsp;uProcess)<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;While&nbsp;rProcessFound<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;InStr(1,&nbsp;uProcess.szexeFile,&nbsp;Chr(0))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;szExename&nbsp;=&nbsp;LCase$(Left$(uProcess.szexeFile,&nbsp;i&nbsp;-&nbsp;1))<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Right$(szExename,&nbsp;Len(myName))&nbsp;=&nbsp;LCase$(myName)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KillApp&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appCount&nbsp;=&nbsp;appCount&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myProcess&nbsp;=&nbsp;OpenProcess(PROCESS_ALL_ACCESS,&nbsp;False,&nbsp;uProcess.th32ProcessID)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AppKill&nbsp;=&nbsp;TerminateProcess(myProcess,&nbsp;exitCode)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;CloseHandle(myProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rProcessFound&nbsp;=&nbsp;ProcessNext(hSnapshot,&nbsp;uProcess)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Loop<br>
&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;CloseHandle(hSnapshot)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Finish:<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0042"><b>MAKE A .REG FILE</b></a></b></font><br>
<font face="Courier New" size="2">
First,&nbsp;open&nbsp;notepad.&nbsp;Then&nbsp;on&nbsp;the&nbsp;very&nbsp;first&nbsp;line,&nbsp;type,&nbsp;REGEDIT4.<br>
IMPORTANT:&nbsp;Put&nbsp;"Windows&nbsp;Registry&nbsp;Editor&nbsp;Version&nbsp;5.00"&nbsp;AS&nbsp;THE&nbsp;BEGINING&nbsp;FOR&nbsp;WINDOWS&nbsp;2000&nbsp;USERS!!!&nbsp;<br>
On&nbsp;the&nbsp;next&nbsp;line&nbsp;type,&nbsp;[&nbsp;Now&nbsp;type&nbsp;the&nbsp;path&nbsp;to&nbsp;your&nbsp;key.&nbsp;(i.e.,&nbsp;HKEY_LOCAL_MACHINE\...)&nbsp;<br>
DO&nbsp;NOT&nbsp;PUT&nbsp;QUOTATION&nbsp;MARKS&nbsp;FOR&nbsp;THE&nbsp;PATH!&nbsp;<br>
End&nbsp;the&nbsp;key&nbsp;location&nbsp;with,&nbsp;]&nbsp;On&nbsp;the&nbsp;line&nbsp;RIGHT&nbsp;under&nbsp;that,&nbsp;type&nbsp;a&nbsp;quotation&nbsp;mark,&nbsp;then&nbsp;the&nbsp;key&nbsp;name.&nbsp;<br>
End&nbsp;your&nbsp;key&nbsp;NAME&nbsp;always&nbsp;with&nbsp;a&nbsp;quotation&nbsp;mark.&nbsp;<br>
Type&nbsp;an&nbsp;=&nbsp;sign,&nbsp;(with&nbsp;no&nbsp;space&nbsp;in&nbsp;between&nbsp;the&nbsp;key)&nbsp;next&nbsp;type&nbsp;the&nbsp;value&nbsp;for&nbsp;that&nbsp;key.&nbsp;<br>
<br>
If&nbsp;you&nbsp;have&nbsp;multiple&nbsp;keys&nbsp;to&nbsp;add,&nbsp;press&nbsp;enter&nbsp;and&nbsp;add&nbsp;the&nbsp;other&nbsp;key&nbsp;name&nbsp;and&nbsp;so&nbsp;on&nbsp;until&nbsp;you&nbsp;get&nbsp;to&nbsp;the&nbsp;point&nbsp;where&nbsp;you&nbsp;want&nbsp;to&nbsp;add&nbsp;another&nbsp;key&nbsp;to&nbsp;a&nbsp;different&nbsp;location.&nbsp;When&nbsp;you&nbsp;get&nbsp;to&nbsp;this&nbsp;point,&nbsp;press&nbsp;enter&nbsp;and&nbsp;and&nbsp;follow&nbsp;these&nbsp;steps&nbsp;all&nbsp;over&nbsp;again!&nbsp;When&nbsp;your&nbsp;done,&nbsp;save&nbsp;it&nbsp;as:&nbsp;"whatever.reg"&nbsp;An&nbsp;example&nbsp;would&nbsp;look&nbsp;like&nbsp;this:&nbsp;<br>
REGEDIT4<br>
[HKEY_LOCAL_MACHINE\Software\WINDOWS\]<br>
"Whatever"=Anything<br>
[HKEY_LOCAL_MACHINE\Software\YourApp]<br>
"Color"=&H8000000F<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0043"><b>DETECT APPLICATION FOCUS</b></a></b></font><br>
<font face="Courier New" size="2">
in&nbsp;the&nbsp;bas&nbsp;module...<br>
Option&nbsp;Explicit<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CallWindowProc&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;_<br>
	"CallWindowProcA"&nbsp;(ByVal&nbsp;lpPrevWndFunc&nbsp;As&nbsp;Long,&nbsp;_<br>
	ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;Msg&nbsp;As&nbsp;Long,&nbsp;_<br>
	ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long&nbsp;<br>
&nbsp;<br>
Private&nbsp;Declare&nbsp;Function&nbsp;SetWindowLong&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"SetWindowLongA"&nbsp;_<br>
	(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nIndex&nbsp;As&nbsp;Long,&nbsp;_<br>
	ByVal&nbsp;dwNewLong&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long&nbsp;<br>
<br>
Private&nbsp;Const&nbsp;WM_ACTIVATEAPP&nbsp;=&nbsp;&H1C<br>
Private&nbsp;Const&nbsp;GWL_WNDPROC&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;-4<br>
Public&nbsp;lpPrevWndProc&nbsp;As&nbsp;Long<br>
Public&nbsp;gHW&nbsp;As&nbsp;Long&nbsp;<br>
<br>
Public&nbsp;Sub&nbsp;Hook()<br>
<br>
	'Establish&nbsp;a&nbsp;hook&nbsp;to&nbsp;capture&nbsp;messages&nbsp;to&nbsp;this&nbsp;window<br>
	lpPrevWndProc&nbsp;=&nbsp;SetWindowLong(gHW,&nbsp;GWL_WNDPROC,&nbsp;AddressOf&nbsp;WindowProc)&nbsp;<br>
<br>
End&nbsp;Sub<br>
<br>
Public&nbsp;Sub&nbsp;Unhook()<br>
<br>
	Dim&nbsp;temp&nbsp;As&nbsp;Long<br>
	<br>
	'Reset&nbsp;the&nbsp;message&nbsp;handler&nbsp;for&nbsp;this&nbsp;window<br>
	temp&nbsp;=&nbsp;SetWindowLong(gHW,&nbsp;GWL_WNDPROC,&nbsp;lpPrevWndProc)<br>
	<br>
End&nbsp;Sub<br>
<br>
Function&nbsp;WindowProc(ByVal&nbsp;hw&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uMsg&nbsp;As&nbsp;Long,&nbsp;_<br>
	ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
	'Check&nbsp;for&nbsp;the&nbsp;ActivateApp&nbsp;message<br>
	If&nbsp;uMsg&nbsp;=&nbsp;WM_ACTIVATEAPP&nbsp;Then<br>
		'Check&nbsp;to&nbsp;see&nbsp;if&nbsp;Activating&nbsp;the&nbsp;application<br>
		If&nbsp;wParam&nbsp;=&nbsp;0&nbsp;Then	'Application&nbsp;Received&nbsp;Focus<br>
			Form1.Caption&nbsp;=&nbsp;"Focus&nbsp;Restored"<br>
		Else<br>
			'Application&nbsp;Lost&nbsp;Focus<br>
			Form1.Caption&nbsp;=&nbsp;"Focus&nbsp;Lost"<br>
		End&nbsp;If<br>
	End&nbsp;If&nbsp;<br>
	<br>
	'Pass&nbsp;message&nbsp;on&nbsp;to&nbsp;the&nbsp;original&nbsp;window&nbsp;message&nbsp;handler<br>
	WindowProc&nbsp;=&nbsp;&nbsp;CallWindowProc(lpPrevWndProc,&nbsp;hw,&nbsp;uMsg,&nbsp;wParam,&nbsp;lParam)&nbsp;<br>
End&nbsp;Function<br>
<br>
In&nbsp;the&nbsp;form....<br>
Option&nbsp;Explicit<br>
<br>
Sub&nbsp;Form_Load()<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;gHW&nbsp;=&nbsp;Me.hwnd&nbsp;&nbsp;&nbsp;'Store&nbsp;handle&nbsp;to&nbsp;this&nbsp;form's&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;Hook&nbsp;&nbsp;&nbsp;&nbsp;'Call&nbsp;procedure&nbsp;to&nbsp;begin&nbsp;capturing&nbsp;messages&nbsp;for&nbsp;this&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
Private&nbsp;Sub&nbsp;Form_Unload(Cancel&nbsp;As&nbsp;Integer)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Call&nbsp;procedure&nbsp;to&nbsp;stop&nbsp;intercepting&nbsp;the&nbsp;messages&nbsp;for&nbsp;this&nbsp;window<br>
&nbsp;&nbsp;&nbsp;&nbsp;Unhook<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0044"><b>LOG TIME</b></a></b></font><br>
<font face="Courier New" size="2">
Sub&nbsp;StartApp()<br>
Open&nbsp;"c:\test.log"&nbsp;For&nbsp;Append&nbsp;As&nbsp;#1<br>
Print&nbsp;#1,&nbsp;Format(Now,&nbsp;"yyyymmdd&nbsp;hh:mm")&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;UCase(Environ("username"))&nbsp;&&nbsp;"&nbsp;START"<br>
Close&nbsp;#1<br>
End&nbsp;Sub<br>
Sub&nbsp;ExitApp()<br>
Open&nbsp;"c:\test.log"&nbsp;For&nbsp;Append&nbsp;As&nbsp;#1<br>
Print&nbsp;#1,&nbsp;Format(Now,&nbsp;"yyyymmdd&nbsp;hh:mm")&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;UCase(Environ("username"))&nbsp;&&nbsp;"&nbsp;STOP"<br>
Close&nbsp;#1<br>
Unload&nbsp;Me<br>
End<br>
<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0045"><b>SCREEN RESOLUTION</b></a></b></font><br>
<font face="Courier New" size="2">
Label1&nbsp;=&nbsp;CStr(Screen.Width&nbsp;/&nbsp;Screen.TwipsPerPixelX)&nbsp;&&nbsp;"x"&nbsp;&&nbsp;CStr(Screen.Height&nbsp;/&nbsp;Screen.TwipsPerPixelY)<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0046"><b>INI DELETE</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;INI_D(ByVal&nbsp;sLocation&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;sField&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;iFnum&nbsp;As&nbsp;Integer<br>
Dim&nbsp;sFile&nbsp;As&nbsp;String<br>
Dim&nbsp;sLines()&nbsp;As&nbsp;String<br>
Dim&nbsp;iX&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLocation)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INI_D&nbsp;=&nbsp;"!INI&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Left(INI_R(sLocation,&nbsp;sField),&nbsp;4)&nbsp;=&nbsp;"!INI"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INI_D&nbsp;=&nbsp;"!INI&nbsp;field&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;sFile&nbsp;=&nbsp;FileText(sLocation)<br>
&nbsp;&nbsp;&nbsp;&nbsp;sLines&nbsp;=&nbsp;Split(sFile,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;iFnum&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;sLocation&nbsp;For&nbsp;Output&nbsp;As&nbsp;iFnum<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;iX&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(sLines)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(Trim(sLines(iX))&nbsp;=&nbsp;""&nbsp;Or&nbsp;InStr(sLines(iX),&nbsp;"=")&nbsp;=&nbsp;0)&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Or&nbsp;InStr(UCase(sLines(iX)),&nbsp;UCase(sField))&nbsp;=&nbsp;0&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Or&nbsp;(InStr(UCase(sLines(iX)),&nbsp;UCase(sField))&nbsp;>&nbsp;0&nbsp;And&nbsp;InStr(sLines(iX),&nbsp;"=")&nbsp;<&nbsp;InStr(UCase(sLines(iX)),&nbsp;UCase(sField)))&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#iFnum,&nbsp;sLines(iX)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;iX<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;iFnum<br>
&nbsp;&nbsp;&nbsp;&nbsp;INI_D&nbsp;=&nbsp;"!INI&nbsp;RC0"<br>
<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0047"><b>INI WRITE</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;INI_W(ByVal&nbsp;sLocation&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;sField&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;sValue&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;bFieldThere&nbsp;As&nbsp;Boolean<br>
Dim&nbsp;sFile&nbsp;As&nbsp;String<br>
Dim&nbsp;iFnum&nbsp;As&nbsp;Integer<br>
Dim&nbsp;sLines()&nbsp;As&nbsp;String<br>
Dim&nbsp;iX&nbsp;As&nbsp;Integer<br>
Dim&nbsp;sLine()&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLocation)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INI_W&nbsp;=&nbsp;"!INI&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;bFieldThere&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Left(INI_R(sLocation,&nbsp;sField),&nbsp;4)&nbsp;=&nbsp;"!INI"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bFieldThere&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;sFile&nbsp;=&nbsp;FileText(sLocation)<br>
&nbsp;&nbsp;&nbsp;&nbsp;sFile&nbsp;=&nbsp;IIf(Right(sFile,&nbsp;2)&nbsp;=&nbsp;vbCrLf,&nbsp;Left(sFile,&nbsp;Len(sFile)&nbsp;-&nbsp;2),&nbsp;sFile)<br>
&nbsp;&nbsp;&nbsp;&nbsp;iFnum&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;sLocation&nbsp;For&nbsp;Output&nbsp;As&nbsp;iFnum<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;bFieldThere&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sFile&nbsp;=&nbsp;sFile&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;sField&nbsp;&&nbsp;"="&nbsp;&&nbsp;sValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#iFnum,&nbsp;sFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sLines&nbsp;=&nbsp;Split(sFile,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;iX&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(sLines)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Trim(sLines(iX))&nbsp;=&nbsp;""&nbsp;Or&nbsp;InStr(sLines(iX),&nbsp;"=")&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#iFnum,&nbsp;sLines(iX)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sLine&nbsp;=&nbsp;Split(sLines(iX),&nbsp;"=")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;UCase(sLine(0))&nbsp;=&nbsp;UCase(sField)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sLine(1)&nbsp;=&nbsp;sValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#iFnum,&nbsp;sLine(0)&nbsp;&&nbsp;"="&nbsp;&&nbsp;sLine(1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;iX<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;iFnum<br>
&nbsp;&nbsp;&nbsp;&nbsp;INI_W&nbsp;=&nbsp;"!INI&nbsp;RC0"<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0048"><b>INI READ</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;INI_R(ByVal&nbsp;sLocation&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;sField&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
'==========================================<br>
'requires&nbsp;fileexists&nbsp;and&nbsp;filetext&nbsp;functions<br>
'==========================================<br>
On&nbsp;Local&nbsp;Error&nbsp;GoTo&nbsp;INIError<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLocation)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INI_R&nbsp;=&nbsp;"!INI&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
Dim&nbsp;sIn&nbsp;As&nbsp;String<br>
Dim&nbsp;sLines()&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;sIn&nbsp;=&nbsp;FileText(sLocation)<br>
&nbsp;&nbsp;&nbsp;&nbsp;sLines&nbsp;=&nbsp;Split(UCase(sIn),&nbsp;UCase(sField))<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Left(sLines(1),&nbsp;1)&nbsp;<>&nbsp;"="&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INI_R&nbsp;=&nbsp;"!INI&nbsp;field&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;INI_R&nbsp;=&nbsp;Mid(sLines(1),&nbsp;2,&nbsp;IIf(InStr(sLines(1),&nbsp;vbCrLf)&nbsp;>&nbsp;0,&nbsp;InStr(sLines(1),&nbsp;vbCrLf),&nbsp;Len(sLines(1)))&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
INIError:<br>
&nbsp;&nbsp;&nbsp;&nbsp;INI_R&nbsp;=&nbsp;"!INI&nbsp;field&nbsp;not&nbsp;found"<br>
End&nbsp;Function<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0049"><b>TRIM TEXTBOX WIDTH TO WIDTH OF TEXT</b></a></b></font><br>
<font face="Courier New" size="2">
Text1.Width&nbsp;=&nbsp;Form1.TextWidth("a")&nbsp;<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0050"><b>DECIMAL TO BINARY</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;DecValue&nbsp;=&nbsp;Val(Text1.Text)<br>
&nbsp;&nbsp;&nbsp;&nbsp;BinValue&nbsp;=&nbsp;""<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TempValue&nbsp;=&nbsp;DecValue&nbsp;Mod&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BinValue&nbsp;=&nbsp;CStr(TempValue)&nbsp;+&nbsp;BinValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DecValue&nbsp;=&nbsp;DecValue&nbsp;\&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Loop&nbsp;Until&nbsp;DecValue&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Print<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Print&nbsp;BinValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;Text2.Text&nbsp;=&nbsp;BinValue<br>
End&nbsp;Sub<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0051"><b>OPEN AN APP WITH IT'S DEFAULT APPLICATION</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;ShellExecute&nbsp;Lib&nbsp;"shell32.dll"&nbsp;Alias&nbsp;"ShellExecuteA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpOperation&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpFile&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpParameters&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpDirectory&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;nShowCmd&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
'//&nbsp;open&nbsp;file&nbsp;(quotes&nbsp;are&nbsp;used&nbsp;so&nbsp;that&nbsp;the&nbsp;actual&nbsp;value&nbsp;that&nbsp;is&nbsp;passed&nbsp;is&nbsp;"C:\test.doc"<br>
Private&nbsp;Sub&nbsp;cmdOpen_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;ShellExecute(0,&nbsp;vbNullString,&nbsp;""""C:\test.doc"""",&nbsp;vbNullString,&nbsp;vbNullString,&nbsp;vbNormalFocus)&nbsp;=&nbsp;2&nbsp;Then<br>
End&nbsp;Sub<br>
<br>
'//&nbsp;open&nbsp;url<br>
Private&nbsp;Sub&nbsp;cmdOpen_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;ShellExecute(0,&nbsp;vbNullString,&nbsp;"http://www.vbweb.f9.co.uk/",&nbsp;vbNullString,&nbsp;vbNullString,&nbsp;vbNormalFocus)&nbsp;=&nbsp;2&nbsp;Then<br>
End&nbsp;Sub<br>
<br>
'//&nbsp;open&nbsp;email&nbsp;address<br>
Private&nbsp;Sub&nbsp;cmdOpen_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;ShellExecute(0,&nbsp;vbNullString,&nbsp;"mailto:support@vbweb.f9.co.uk",&nbsp;vbNullString,&nbsp;vbNullString,&nbsp;vbNormalFocus)&nbsp;=&nbsp;2&nbsp;Then<br>
End&nbsp;Sub&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0052"><b>DETECT INTERNET CONNECTION</b></a></b></font><br>
<font face="Courier New" size="2">
Option&nbsp;Explicit<br>
Public&nbsp;Declare&nbsp;Function&nbsp;InternetGetConnectedState&nbsp;_<br>
Lib&nbsp;"wininet.dll"&nbsp;(ByRef&nbsp;lpSFlags&nbsp;As&nbsp;Long,&nbsp;_<br>
ByVal&nbsp;dwReserved&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Public&nbsp;Const&nbsp;INTERNET_CONNECTION_LAN&nbsp;As&nbsp;Long&nbsp;=&nbsp;&H2<br>
Public&nbsp;Const&nbsp;INTERNET_CONNECTION_MODEM&nbsp;As&nbsp;Long&nbsp;=&nbsp;&H1<br>
<br>
Public&nbsp;Function&nbsp;Online()&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;'If&nbsp;you&nbsp;are&nbsp;online&nbsp;it&nbsp;will&nbsp;return&nbsp;True,&nbsp;otherwise&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;Online&nbsp;=&nbsp;InternetGetConnectedState(0&&nbsp;,0&)<br>
End&nbsp;Function<br>
<br>
Public&nbsp;Function&nbsp;ViaLAN()&nbsp;As&nbsp;Boolean<br>
<br>
Dim&nbsp;SFlags&nbsp;As&nbsp;Long<br>
'return&nbsp;the&nbsp;flags&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection<br>
Call&nbsp;InternetGetConnectedState(SFlags,&nbsp;0&)<br>
<br>
'True&nbsp;if&nbsp;the&nbsp;Sflags&nbsp;has&nbsp;a&nbsp;LAN&nbsp;connection<br>
ViaLAN&nbsp;=&nbsp;SFlags&nbsp;And&nbsp;INTERNET_CONNECTION_LAN<br>
<br>
End&nbsp;Function<br>
Public&nbsp;Function&nbsp;ViaModem()&nbsp;As&nbsp;Boolean<br>
<br>
Dim&nbsp;SFlags&nbsp;As&nbsp;Long<br>
'return&nbsp;the&nbsp;flags&nbsp;associated&nbsp;with&nbsp;the&nbsp;connection<br>
Call&nbsp;InternetGetConnectedState(SFlags,&nbsp;0&)<br>
<br>
'True&nbsp;if&nbsp;the&nbsp;Sflags&nbsp;has&nbsp;a&nbsp;modem&nbsp;connection<br>
ViaModem&nbsp;=&nbsp;SFlags&nbsp;And&nbsp;INTERNET_CONNECTION_MODEM<br>
<br>
End&nbsp;Function<br>
<br>
<br>
'Add&nbsp;this&nbsp;code&nbsp;to&nbsp;a&nbsp;form&nbsp;with&nbsp;one&nbsp;command&nbsp;button&nbsp;and&nbsp;three&nbsp;text&nbsp;boxes.&nbsp;It&nbsp;will&nbsp;return&nbsp;"True"&nbsp;for&nbsp;which&nbsp;ever&nbsp;'one&nbsp;you&nbsp;are&nbsp;connected&nbsp;to.&nbsp;<br>
<br>
Option&nbsp;Explicit&nbsp;<br>
<br>
Private&nbsp;Sub&nbsp;Command1_Click()&nbsp;<br>
Text1&nbsp;=&nbsp;ViaLAN()&nbsp;<br>
Text2&nbsp;=&nbsp;ViaModem()&nbsp;<br>
Text3&nbsp;=&nbsp;Online()<br>
End&nbsp;Sub&nbsp;<br>
<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0053"><b>REGISTRY BITS N BOBS</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
'&nbsp;Reg&nbsp;Key&nbsp;Security&nbsp;Options...<br>
Const&nbsp;KEY_ALL_ACCESS&nbsp;=&nbsp;&H2003F<br>
<br>
'&nbsp;Reg&nbsp;Key&nbsp;ROOT&nbsp;Types...<br>
Const&nbsp;HKEY_LOCAL_MACHINE&nbsp;=&nbsp;&H80000002<br>
Const&nbsp;ERROR_SUCCESS&nbsp;=&nbsp;0<br>
Const&nbsp;REG_SZ&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Unicode&nbsp;nul&nbsp;terminated&nbsp;string<br>
Const&nbsp;REG_DWORD&nbsp;=&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;32-bit&nbsp;number<br>
<br>
Const&nbsp;gREGKEYSYSINFOLOC&nbsp;=&nbsp;"SOFTWARE\Microsoft\Shared&nbsp;Tools&nbsp;Location"<br>
Const&nbsp;gREGVALSYSINFOLOC&nbsp;=&nbsp;"MSINFO"<br>
Const&nbsp;gREGKEYSYSINFO&nbsp;=&nbsp;"SOFTWARE\Microsoft\Shared&nbsp;Tools\MSINFO"<br>
Const&nbsp;gREGVALSYSINFO&nbsp;=&nbsp;"PATH"<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;OSWinHelp%&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"WinHelpA"&nbsp;(ByVal&nbsp;hwnd&,&nbsp;ByVal&nbsp;HelpFile$,&nbsp;ByVal&nbsp;wCommand%,&nbsp;dwData&nbsp;As&nbsp;Any)<br>
Private&nbsp;Declare&nbsp;Function&nbsp;RegOpenKeyEx&nbsp;Lib&nbsp;"advapi32"&nbsp;Alias&nbsp;"RegOpenKeyExA"&nbsp;(ByVal&nbsp;hKey&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpSubKey&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;ulOptions&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;samDesired&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;phkResult&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;RegQueryValueEx&nbsp;Lib&nbsp;"advapi32"&nbsp;Alias&nbsp;"RegQueryValueExA"&nbsp;(ByVal&nbsp;hKey&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpValueName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;lpReserved&nbsp;As&nbsp;Long,&nbsp;ByRef&nbsp;lpType&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lpData&nbsp;As&nbsp;String,&nbsp;ByRef&nbsp;lpcbData&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;RegCloseKey&nbsp;Lib&nbsp;"advapi32"&nbsp;(ByVal&nbsp;hKey&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Sub&nbsp;StartSysInfo()<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;SysInfoErr<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;rc&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;SysInfoPath&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Try&nbsp;To&nbsp;Get&nbsp;System&nbsp;Info&nbsp;Program&nbsp;Path\Name&nbsp;From&nbsp;Registry...<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetKeyValue(HKEY_LOCAL_MACHINE,&nbsp;gREGKEYSYSINFO,&nbsp;gREGVALSYSINFO,&nbsp;SysInfoPath)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Try&nbsp;To&nbsp;Get&nbsp;System&nbsp;Info&nbsp;Program&nbsp;Path&nbsp;Only&nbsp;From&nbsp;Registry...<br>
&nbsp;&nbsp;&nbsp;&nbsp;ElseIf&nbsp;GetKeyValue(HKEY_LOCAL_MACHINE,&nbsp;gREGKEYSYSINFOLOC,&nbsp;gREGVALSYSINFOLOC,&nbsp;SysInfoPath)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Validate&nbsp;Existance&nbsp;Of&nbsp;Known&nbsp;32&nbsp;Bit&nbsp;File&nbsp;Version<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(Dir(SysInfoPath&nbsp;&&nbsp;"\MSINFO32.EXE")&nbsp;<>&nbsp;"")&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SysInfoPath&nbsp;=&nbsp;SysInfoPath&nbsp;&&nbsp;"\MSINFO32.EXE"<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Error&nbsp;-&nbsp;File&nbsp;Can&nbsp;Not&nbsp;Be&nbsp;Found...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;SysInfoErr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Error&nbsp;-&nbsp;Registry&nbsp;Entry&nbsp;Can&nbsp;Not&nbsp;Be&nbsp;Found...<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;SysInfoErr<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;Shell(SysInfoPath,&nbsp;vbNormalFocus)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
SysInfoErr:<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"System&nbsp;Information&nbsp;Is&nbsp;Unavailable&nbsp;At&nbsp;This&nbsp;Time",&nbsp;vbOKOnly<br>
End&nbsp;Sub<br>
Public&nbsp;Function&nbsp;GetKeyValue(KeyRoot&nbsp;As&nbsp;Long,&nbsp;KeyName&nbsp;As&nbsp;String,&nbsp;SubKeyRef&nbsp;As&nbsp;String,&nbsp;ByRef&nbsp;KeyVal&nbsp;As&nbsp;String)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Loop&nbsp;Counter<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;rc&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Return&nbsp;Code<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hKey&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Handle&nbsp;To&nbsp;An&nbsp;Open&nbsp;Registry&nbsp;Key<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hDepth&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;KeyValType&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Data&nbsp;Type&nbsp;Of&nbsp;A&nbsp;Registry&nbsp;Key<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;tmpVal&nbsp;As&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Tempory&nbsp;Storage&nbsp;For&nbsp;A&nbsp;Registry&nbsp;Key&nbsp;Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;KeyValSize&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Size&nbsp;Of&nbsp;Registry&nbsp;Key&nbsp;Variable<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Open&nbsp;RegKey&nbsp;Under&nbsp;KeyRoot&nbsp;{HKEY_LOCAL_MACHINE...}<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;rc&nbsp;=&nbsp;RegOpenKeyEx(KeyRoot,&nbsp;KeyName,&nbsp;0,&nbsp;KEY_ALL_ACCESS,&nbsp;hKey)&nbsp;'&nbsp;Open&nbsp;Registry&nbsp;Key<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(rc&nbsp;<>&nbsp;ERROR_SUCCESS)&nbsp;Then&nbsp;GoTo&nbsp;GetKeyError&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Handle&nbsp;Error...<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;tmpVal&nbsp;=&nbsp;String$(1024,&nbsp;0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Allocate&nbsp;Variable&nbsp;Space<br>
&nbsp;&nbsp;&nbsp;&nbsp;KeyValSize&nbsp;=&nbsp;1024&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Mark&nbsp;Variable&nbsp;Size<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Retrieve&nbsp;Registry&nbsp;Key&nbsp;Value...<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;rc&nbsp;=&nbsp;RegQueryValueEx(hKey,&nbsp;SubKeyRef,&nbsp;0,&nbsp;KeyValType,&nbsp;tmpVal,&nbsp;KeyValSize)&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Get/Create&nbsp;Key&nbsp;Value<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(rc&nbsp;<>&nbsp;ERROR_SUCCESS)&nbsp;Then&nbsp;GoTo&nbsp;GetKeyError&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Handle&nbsp;Errors<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;tmpVal&nbsp;=&nbsp;VBA.Left(tmpVal,&nbsp;InStr(tmpVal,&nbsp;VBA.Chr(0))&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Determine&nbsp;Key&nbsp;Value&nbsp;Type&nbsp;For&nbsp;Conversion...<br>
&nbsp;&nbsp;&nbsp;&nbsp;'------------------------------------------------------------<br>
&nbsp;&nbsp;&nbsp;&nbsp;Select&nbsp;Case&nbsp;KeyValType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Search&nbsp;Data&nbsp;Types...<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;REG_SZ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;String&nbsp;Registry&nbsp;Key&nbsp;Data&nbsp;Type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KeyVal&nbsp;=&nbsp;tmpVal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Copy&nbsp;String&nbsp;Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;REG_DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Double&nbsp;Word&nbsp;Registry&nbsp;Key&nbsp;Data&nbsp;Type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;Len(tmpVal)&nbsp;To&nbsp;1&nbsp;Step&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Convert&nbsp;Each&nbsp;Bit<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KeyVal&nbsp;=&nbsp;KeyVal&nbsp;+&nbsp;Hex(Asc(Mid(tmpVal,&nbsp;i,&nbsp;1)))&nbsp;&nbsp;&nbsp;'&nbsp;Build&nbsp;Value&nbsp;Char.&nbsp;By&nbsp;Char.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KeyVal&nbsp;=&nbsp;Format$("&h"&nbsp;+&nbsp;KeyVal)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Convert&nbsp;Double&nbsp;Word&nbsp;To&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;Select<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetKeyValue&nbsp;=&nbsp;True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Return&nbsp;Success<br>
&nbsp;&nbsp;&nbsp;&nbsp;rc&nbsp;=&nbsp;RegCloseKey(hKey)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Close&nbsp;Registry&nbsp;Key<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Exit<br>
<br>
GetKeyError:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Cleanup&nbsp;After&nbsp;An&nbsp;Error&nbsp;Has&nbsp;Occured...<br>
&nbsp;&nbsp;&nbsp;&nbsp;KeyVal&nbsp;=&nbsp;""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Set&nbsp;Return&nbsp;Val&nbsp;To&nbsp;Empty&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetKeyValue&nbsp;=&nbsp;False&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Return&nbsp;Failure<br>
&nbsp;&nbsp;&nbsp;&nbsp;rc&nbsp;=&nbsp;RegCloseKey(hKey)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Close&nbsp;Registry&nbsp;Key<br>
End&nbsp;Function<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;DEFAULT_USER&nbsp;=&nbsp;GetSetting(App.EXEName,&nbsp;"OPTIONS",&nbsp;"DEFAULT_USER",&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;EXCHANGE_USER&nbsp;=&nbsp;GetSetting(App.EXEName,&nbsp;"OPTIONS",&nbsp;"EXCHANGE_USER",&nbsp;"")<br>
&nbsp;&nbsp;&nbsp;&nbsp;DAILY_DIST_LIST&nbsp;=&nbsp;GetSetting(App.EXEName,&nbsp;"OPTIONS",&nbsp;"DAILY_DIST_LIST",&nbsp;"")<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Left&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"MainLeft",&nbsp;1000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Top&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"MainTop",&nbsp;1000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Width&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"MainWidth",&nbsp;6500)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Me.Height&nbsp;=&nbsp;GetSetting(App.Title,&nbsp;"Settings",&nbsp;"MainHeight",&nbsp;6500)<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0054"><b>COMPLETE INI FILE HANDLING</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;WriteINI(sLOC&nbsp;As&nbsp;String,&nbsp;sParm&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sValue&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;sHeader&nbsp;As&nbsp;String)<br>
'*******************************************************<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;Requires&nbsp;FileExists&nbsp;and&nbsp;FileText&nbsp;functions!!!&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'*******************************************************<br>
Dim&nbsp;sIF&nbsp;As&nbsp;String<br>
Dim&nbsp;x&nbsp;As&nbsp;Double,&nbsp;y&nbsp;As&nbsp;Double<br>
Dim&nbsp;dHeaderPos&nbsp;As&nbsp;Double<br>
Dim&nbsp;dNextHeaderPos&nbsp;As&nbsp;Double<br>
Dim&nbsp;dParmPos&nbsp;As&nbsp;Double<br>
Dim&nbsp;bHeaderExists&nbsp;As&nbsp;Boolean<br>
Dim&nbsp;bHeaderRequired&nbsp;As&nbsp;Boolean<br>
Dim&nbsp;bParmIsThere&nbsp;As&nbsp;Boolean<br>
Dim&nbsp;sNewINI&nbsp;As&nbsp;String<br>
Dim&nbsp;fNum&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLOC)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteINI&nbsp;=&nbsp;"!"&nbsp;&&nbsp;sLOC&nbsp;&&nbsp;"&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sIF&nbsp;=&nbsp;FileText(sLOC)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;sParm&nbsp;=&nbsp;UCase(sParm)<br>
&nbsp;&nbsp;&nbsp;&nbsp;sHeader&nbsp;=&nbsp;UCase(sHeader)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;sHeader&nbsp;>&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bHeaderRequired&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dHeaderPos&nbsp;=&nbsp;InStr(UCase(sIF),&nbsp;"["&nbsp;&&nbsp;sHeader&nbsp;&&nbsp;"]")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;dHeaderPos&nbsp;>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bHeaderExists&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dNextHeaderPos&nbsp;=&nbsp;InStr(dHeaderPos&nbsp;+&nbsp;1,&nbsp;sIF,&nbsp;"[")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;dNextHeaderPos&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dNextHeaderPos&nbsp;=&nbsp;Len(sIF)&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bHeaderExists&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bHeaderRequired&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;dParmPos&nbsp;=&nbsp;InStr(UCase(sIF),&nbsp;sParm&nbsp;&&nbsp;"=")<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;dParmPos&nbsp;>&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bParmIsThere&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bParmIsThere&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bHeaderRequired&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bHeaderExists&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bParmIsThere&nbsp;And&nbsp;(dParmPos&nbsp;>&nbsp;dHeaderPos)&nbsp;And&nbsp;(dParmPos&nbsp;<&nbsp;dNextHeaderPos)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;InStr(dParmPos,&nbsp;sIF,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;Left(sIF,&nbsp;dParmPos&nbsp;+&nbsp;Len(sParm))&nbsp;&&nbsp;sValue&nbsp;&&nbsp;Mid(sIF,&nbsp;x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bParmIsThere&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WriteINI&nbsp;=&nbsp;"!"&nbsp;&&nbsp;sParm&nbsp;&&nbsp;"&nbsp;is&nbsp;there&nbsp;under&nbsp;a&nbsp;different&nbsp;header"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;InStr(dHeaderPos,&nbsp;sIF,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;Left(sIF,&nbsp;x&nbsp;-&nbsp;1)&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;sParm&nbsp;&&nbsp;"="&nbsp;&&nbsp;sValue&nbsp;&&nbsp;Mid(sIF,&nbsp;x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;sIF&nbsp;&&nbsp;"["&nbsp;&&nbsp;sHeader&nbsp;&&nbsp;"]"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;sParm&nbsp;&&nbsp;"="&nbsp;&&nbsp;sValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;bParmIsThere&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;InStr(dParmPos,&nbsp;sIF,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;x&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;Len(sIF)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;Left(sIF,&nbsp;dParmPos&nbsp;+&nbsp;Len(sParm))&nbsp;&&nbsp;sValue&nbsp;&&nbsp;Mid(sIF,&nbsp;x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;sParm&nbsp;&&nbsp;"="&nbsp;&&nbsp;sValue&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;sIF<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;fNum&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;sLOC&nbsp;For&nbsp;Output&nbsp;As&nbsp;fNum<br>
&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#fNum,&nbsp;sNewINI<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;fNum<br>
&nbsp;&nbsp;&nbsp;&nbsp;WriteINI&nbsp;=&nbsp;"!OK&nbsp;RC"<br>
End&nbsp;Function<br>
Function&nbsp;ReadINI(sLOC&nbsp;As&nbsp;String,&nbsp;sParm&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
'*******************************************************<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;Requires&nbsp;FileExists&nbsp;and&nbsp;FileText&nbsp;functions!!!&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'*******************************************************<br>
Dim&nbsp;sIF&nbsp;As&nbsp;String<br>
Dim&nbsp;x&nbsp;As&nbsp;Double,&nbsp;y&nbsp;As&nbsp;Double,&nbsp;z&nbsp;As&nbsp;Double<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLOC)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadINI&nbsp;=&nbsp;"!"&nbsp;&&nbsp;sLOC&nbsp;&&nbsp;"&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sIF&nbsp;=&nbsp;FileText(sLOC)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;sParm&nbsp;=&nbsp;UCase(sParm)&nbsp;&&nbsp;"="<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;InStr(UCase(sIF),&nbsp;sParm)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;x&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReadINI&nbsp;=&nbsp;"!Parameter&nbsp;not&nbsp;present&nbsp;on&nbsp;INI&nbsp;file&nbsp;:&nbsp;"&nbsp;&&nbsp;Left(sParm,&nbsp;Len(sParm)&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x&nbsp;+&nbsp;Len(sParm)<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;InStr(x,&nbsp;sIF,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;y&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;Len(sIF)&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;ReadINI&nbsp;=&nbsp;Mid(sIF,&nbsp;x,&nbsp;y&nbsp;-&nbsp;x)<br>
End&nbsp;Function<br>
Function&nbsp;RemoveINI(sLOC&nbsp;As&nbsp;String,&nbsp;sParm&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
'*******************************************************<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;Requires&nbsp;FileExists&nbsp;and&nbsp;FileText&nbsp;functions!!!&nbsp;&nbsp;&nbsp;**<br>
'**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**<br>
'*******************************************************<br>
Dim&nbsp;sIF&nbsp;As&nbsp;String,&nbsp;sNewINI&nbsp;As&nbsp;String<br>
Dim&nbsp;fNum&nbsp;As&nbsp;Integer<br>
Dim&nbsp;x&nbsp;As&nbsp;Double,&nbsp;y&nbsp;As&nbsp;Double,&nbsp;z&nbsp;As&nbsp;Double<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Not&nbsp;FileExists(sLOC)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RemoveINI&nbsp;=&nbsp;"!"&nbsp;&&nbsp;sLOC&nbsp;&&nbsp;"&nbsp;file&nbsp;not&nbsp;found"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sIF&nbsp;=&nbsp;FileText(sLOC)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;sParm&nbsp;=&nbsp;UCase(sParm)&nbsp;&&nbsp;"="<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;InStr(UCase(sIF),&nbsp;sParm)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;x&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RemoveINI&nbsp;=&nbsp;"!Parameter&nbsp;not&nbsp;present&nbsp;on&nbsp;INI&nbsp;file&nbsp;:&nbsp;"&nbsp;&&nbsp;Left(sParm,&nbsp;Len(sParm)&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;InStr(x&nbsp;+&nbsp;1,&nbsp;sIF,&nbsp;vbCrLf)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;y&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;Len(sIF)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;sNewINI&nbsp;=&nbsp;Left(sIF,&nbsp;x&nbsp;-&nbsp;1)&nbsp;&&nbsp;Mid(sIF,&nbsp;y&nbsp;+&nbsp;2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;fNum&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;sLOC&nbsp;For&nbsp;Output&nbsp;As&nbsp;fNum<br>
&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;#fNum,&nbsp;sNewINI<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;fNum<br>
&nbsp;&nbsp;&nbsp;&nbsp;RemoveINI&nbsp;=&nbsp;"!OK&nbsp;RC"<br>
End&nbsp;Function<br>
<br>
Function&nbsp;FileExists(FileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;get&nbsp;the&nbsp;attributes&nbsp;and&nbsp;ensure&nbsp;that&nbsp;it&nbsp;isn't&nbsp;a&nbsp;directory<br>
&nbsp;&nbsp;&nbsp;&nbsp;FileExists&nbsp;=&nbsp;(GetAttr(FileName)&nbsp;And&nbsp;vbDirectory)&nbsp;=&nbsp;0<br>
ErrorHandler:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs,&nbsp;this&nbsp;function&nbsp;returns&nbsp;False<br>
End&nbsp;Function<br>
Function&nbsp;FileText(ByVal&nbsp;FileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;handle&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Len(Dir$(FileName))&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Err.Raise&nbsp;53&nbsp;&nbsp;&nbsp;'&nbsp;File&nbsp;not&nbsp;found<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;handle&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;FileName$&nbsp;For&nbsp;Binary&nbsp;As&nbsp;#handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;FileText&nbsp;=&nbsp;Space$(LOF(handle))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Get&nbsp;#handle,&nbsp;,&nbsp;FileText<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;#handle<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0055"><b>SEND FOCAL FORM TO THE CLIPBOARD!</b></a></b></font><br>
<font face="Courier New" size="2">
SendKeys&nbsp;(Chr(18)&nbsp;&&nbsp;Chr(161)&nbsp;&&nbsp;Chr(44))<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0056"><b>WINDOWS DIRECTORY PATH</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;GetWindowsDirectory&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"GetWindowsDirectoryA"&nbsp;(ByVal&nbsp;lpBuffer&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;nSize&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
'&nbsp;Return&nbsp;the&nbsp;path&nbsp;of&nbsp;the&nbsp;Windows&nbsp;directory<br>
<br>
Function&nbsp;WindowsDirectory()&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;buffer&nbsp;As&nbsp;String&nbsp;*&nbsp;512,&nbsp;length&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;=&nbsp;GetWindowsDirectory(buffer,&nbsp;Len(buffer))<br>
&nbsp;&nbsp;&nbsp;&nbsp;WindowsDirectory&nbsp;=&nbsp;Left$(buffer,&nbsp;length)<br>
End&nbsp;Function<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0057"><b>GET FILE DESCRIPTION FROM API</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Const&nbsp;MAX_PATH&nbsp;=&nbsp;260<br>
<br>
Private&nbsp;Type&nbsp;SHFILEINFO<br>
&nbsp;&nbsp;&nbsp;&nbsp;hIcon&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;iIcon&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwAttributes&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;szDisplayName&nbsp;As&nbsp;String&nbsp;*&nbsp;MAX_PATH<br>
&nbsp;&nbsp;&nbsp;&nbsp;szTypeName&nbsp;As&nbsp;String&nbsp;*&nbsp;80<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;SHGetFileInfo&nbsp;Lib&nbsp;"Shell32"&nbsp;Alias&nbsp;"SHGetFileInfoA"&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;(ByVal&nbsp;pszPath&nbsp;As&nbsp;Any,&nbsp;ByVal&nbsp;dwFileAttributes&nbsp;As&nbsp;Long,&nbsp;psfi&nbsp;As&nbsp;SHFILEINFO,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;cbFileInfo&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;uFlags&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
'&nbsp;Returns&nbsp;the&nbsp;description&nbsp;of&nbsp;the&nbsp;specified&nbsp;file/folder&nbsp;<br>
'&nbsp;&nbsp;(for&nbsp;example&nbsp;"Folder",&nbsp;"Executable&nbsp;file",&nbsp;"Bmp&nbsp;Image"&nbsp;and&nbsp;so&nbsp;on)<br>
<br>
Function&nbsp;GetFileDescription(ByVal&nbsp;sPath&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;SHGFI_TYPENAME&nbsp;=&nbsp;&H400<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;FInfo&nbsp;As&nbsp;SHFILEINFO<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;retrieve&nbsp;the&nbsp;item's&nbsp;attributes<br>
&nbsp;&nbsp;&nbsp;&nbsp;SHGetFileInfo&nbsp;sPath,&nbsp;0,&nbsp;FInfo,&nbsp;Len(FInfo),&nbsp;SHGFI_TYPENAME<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;read&nbsp;the&nbsp;szTypeName&nbsp;field<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetFileDescription&nbsp;=&nbsp;Left$(FInfo.szTypeName,&nbsp;InStr(FInfo.szTypeName&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vbNullChar,&nbsp;vbNullChar)&nbsp;-&nbsp;1)<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0058"><b>GET FILE DATES</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Type&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;wYear&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMonth&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wDayOfWeek&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wDay&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wHour&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMinute&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wSecond&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMilliseconds&nbsp;As&nbsp;Integer<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Type&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwLowDateTime&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwHighDateTime&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CreateFile&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"CreateFileA"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpFileName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;dwShareMode&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;NoSecurity&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;dwCreationDisposition&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwFlagsAndAttributes&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;hTemplateFile&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetFileTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hFile&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpCreationTime&nbsp;As&nbsp;FILETIME,&nbsp;lpLastAccessTime&nbsp;As&nbsp;FILETIME,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpLastWriteTime&nbsp;As&nbsp;FILETIME)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;FileTimeToSystemTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(lpFileTime&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;FILETIME,&nbsp;lpSystemTime&nbsp;As&nbsp;SYSTEMTIME)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;FileTimeToLocalFileTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(lpFileTime&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;FILETIME,&nbsp;lpLocalFileTime&nbsp;As&nbsp;FILETIME)&nbsp;As&nbsp;Long<br>
<br>
Private&nbsp;Const&nbsp;GENERIC_READ&nbsp;=&nbsp;&H80000000<br>
Private&nbsp;Const&nbsp;FILE_SHARE_READ&nbsp;=&nbsp;&H1<br>
Private&nbsp;Const&nbsp;FILE_SHARE_WRITE&nbsp;=&nbsp;&H2<br>
Private&nbsp;Const&nbsp;OPEN_EXISTING&nbsp;=&nbsp;3<br>
Private&nbsp;Const&nbsp;INVALID_HANDLE_VALUE&nbsp;=&nbsp;-1<br>
<br>
'&nbsp;Retrieve&nbsp;the&nbsp;Create&nbsp;date,&nbsp;Modify&nbsp;(write)&nbsp;date&nbsp;and&nbsp;Last&nbsp;Access&nbsp;date&nbsp;of<br>
'&nbsp;the&nbsp;specified&nbsp;file.&nbsp;Returns&nbsp;True&nbsp;if&nbsp;successful,&nbsp;False&nbsp;otherwise.<br>
<br>
Function&nbsp;GetFileTimeInfo(ByVal&nbsp;FileName&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;CreateDate&nbsp;As&nbsp;Date,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;ModifyDate&nbsp;As&nbsp;Date,&nbsp;Optional&nbsp;LastAccessDate&nbsp;As&nbsp;Date)&nbsp;As&nbsp;Boolean<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hFile&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftCreate&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftModify&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftLastAccess&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ft&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;st&nbsp;As&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;open&nbsp;the&nbsp;file,&nbsp;exit&nbsp;if&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;hFile&nbsp;=&nbsp;CreateFile(FileName,&nbsp;GENERIC_READ,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FILE_SHARE_READ&nbsp;Or&nbsp;FILE_SHARE_WRITE,&nbsp;0&,&nbsp;OPEN_EXISTING,&nbsp;0&,&nbsp;0&)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hFile&nbsp;=&nbsp;INVALID_HANDLE_VALUE&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;read&nbsp;date&nbsp;information<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetFileTime(hFile,&nbsp;ftCreate,&nbsp;ftLastAccess,&nbsp;ftModify)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;non&nbsp;zero&nbsp;means&nbsp;successful<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetFileTimeInfo&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;convert&nbsp;result&nbsp;to&nbsp;date&nbsp;values<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;first,&nbsp;convert&nbsp;UTC&nbsp;file&nbsp;time&nbsp;to&nbsp;local&nbsp;file&nbsp;time<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftCreate,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;then&nbsp;convert&nbsp;to&nbsp;system&nbsp;time<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;finally,&nbsp;make&nbsp;up&nbsp;the&nbsp;Date&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;do&nbsp;the&nbsp;same&nbsp;for&nbsp;the&nbsp;ModifyDate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftModify,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModifyDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;and&nbsp;for&nbsp;LastAccessDate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftLastAccess,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastAccessDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;close&nbsp;the&nbsp;file,&nbsp;in&nbsp;all&nbsp;cases<br>
&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle&nbsp;hFile<br>
<br>
End&nbsp;Function<br>
<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0059"><b>SHELLING CONTROL PANEL APPLETS</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
&nbsp;&nbsp;&nbsp;Private&nbsp;Sub&nbsp;SetDateTime()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;Shell("rundll32.exe&nbsp;shell32.dll,Control_RunDLL&nbsp;timedate.cpl")<br>
&nbsp;&nbsp;&nbsp;End&nbsp;Sub<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0060"><b>EMAIL USING CDO 1.2 REFERENCE</b></a></b></font><br>
<font face="Courier New" size="2">
Sub&nbsp;SendEmailMAPI(SendTo&nbsp;As&nbsp;String,&nbsp;Subject&nbsp;As&nbsp;String,&nbsp;EmailText&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;AttachmentPath&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;Attachment&nbsp;As&nbsp;String)<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;cdoSession&nbsp;As&nbsp;Object<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;oFolder&nbsp;As&nbsp;Object<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;oMsg&nbsp;As&nbsp;Object<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;oRcpt&nbsp;As&nbsp;Object<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;oMessages&nbsp;As&nbsp;Object<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;cdoSession&nbsp;=&nbsp;CreateObject("MAPI.Session")<br>
&nbsp;&nbsp;&nbsp;&nbsp;cdoSession.Logon&nbsp;"MS&nbsp;Exchange&nbsp;Settings"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oFolder&nbsp;=&nbsp;cdoSession.Outbox<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMessages&nbsp;=&nbsp;oFolder.Messages<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oMsg&nbsp;=&nbsp;oMessages.Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;oRcpt&nbsp;=&nbsp;oMsg.Recipients<br>
&nbsp;&nbsp;&nbsp;&nbsp;oRcpt.Add&nbsp;,&nbsp;"SMTP:"&nbsp;&&nbsp;SendTo,&nbsp;CdoTo<br>
&nbsp;&nbsp;&nbsp;&nbsp;oRcpt.Resolve<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Subject&nbsp;=&nbsp;Subject<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Text&nbsp;=&nbsp;EmailText<br>
&nbsp;&nbsp;&nbsp;&nbsp;oMsg.Send<br>
&nbsp;&nbsp;&nbsp;&nbsp;cdoSession.Logoff<br>
<br>
ExitMe:<br>
&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
<br>
ErrorHandler:<br>
Const&nbsp;fname&nbsp;As&nbsp;String&nbsp;=&nbsp;"c:\dlrmem_errorlog.txt"<br>
Dim&nbsp;fnum&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;fnum&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;fname&nbsp;For&nbsp;Append&nbsp;As&nbsp;fnum<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Print&nbsp;#fnum,&nbsp;Format(Now,&nbsp;"yyyymmdd&nbsp;hhmmss")&nbsp;&&nbsp;"&nbsp;/mailto:"&nbsp;&&nbsp;SendTo&nbsp;&&nbsp;"&nbsp;/&nbsp;"&nbsp;&&nbsp;Err.Number,&nbsp;Err.Description<br>
&nbsp;&nbsp;&nbsp;Resume&nbsp;ExitMe<br>
<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0061"><b>GET SHORT FILE NAME</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;ShortDirName(sIn&nbsp;As&nbsp;String,&nbsp;iFullDirsToShow&nbsp;As&nbsp;Integer,&nbsp;iHalfDirsToShow&nbsp;As&nbsp;Integer)&nbsp;As&nbsp;String<br>
Dim&nbsp;sOut()&nbsp;As&nbsp;String<br>
Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;sOut&nbsp;=&nbsp;Split(sIn,&nbsp;"\")<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;UBound(sOut)<br>
&nbsp;&nbsp;&nbsp;&nbsp;ShortDirName&nbsp;=&nbsp;""<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(sOut)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ShortDirName&nbsp;=&nbsp;ShortDirName&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IIf(x&nbsp;<&nbsp;(iFullDirsToShow&nbsp;+&nbsp;1)&nbsp;Or&nbsp;x&nbsp;=&nbsp;UBound(sOut),&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sOut(x)&nbsp;&&nbsp;IIf(x&nbsp;=&nbsp;UBound(sOut),&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"\"),&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IIf((x&nbsp;>&nbsp;iFullDirsToShow)&nbsp;And&nbsp;(x&nbsp;<=&nbsp;(iFullDirsToShow&nbsp;+&nbsp;iHalfDirsToShow)),&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Left(sOut(x),&nbsp;Len(sOut(x))&nbsp;\&nbsp;2)&nbsp;&&nbsp;"...\",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"...\"))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0062"><b>GET WINDOWS TEMPORARY DIRECTORY</b></a></b></font><br>
<font face="Courier New" size="2">
function&nbsp;WindowsTEMPDir()&nbsp;as&nbsp;string<br>
	WindowsTEMPDir=&nbsp;IIf(Environ$("tmp"),&nbsp;Environ$("tmp"),Environ$("temp"))<br>
end&nbsp;function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0063"><b>GET FILE DATE INFO</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Type&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;wYear&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMonth&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wDayOfWeek&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wDay&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wHour&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMinute&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wSecond&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;wMilliseconds&nbsp;As&nbsp;Integer<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Type&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwLowDateTime&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwHighDateTime&nbsp;As&nbsp;Long<br>
End&nbsp;Type<br>
<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CreateFile&nbsp;Lib&nbsp;"kernel32"&nbsp;Alias&nbsp;"CreateFileA"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpFileName&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;dwDesiredAccess&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;dwShareMode&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;NoSecurity&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;dwCreationDisposition&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwFlagsAndAttributes&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;hTemplateFile&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;CloseHandle&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hObject&nbsp;As&nbsp;Long)&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetFileTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(ByVal&nbsp;hFile&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpCreationTime&nbsp;As&nbsp;FILETIME,&nbsp;lpLastAccessTime&nbsp;As&nbsp;FILETIME,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpLastWriteTime&nbsp;As&nbsp;FILETIME)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;FileTimeToSystemTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(lpFileTime&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;FILETIME,&nbsp;lpSystemTime&nbsp;As&nbsp;SYSTEMTIME)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;FileTimeToLocalFileTime&nbsp;Lib&nbsp;"kernel32"&nbsp;(lpFileTime&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;FILETIME,&nbsp;lpLocalFileTime&nbsp;As&nbsp;FILETIME)&nbsp;As&nbsp;Long<br>
<br>
Private&nbsp;Const&nbsp;GENERIC_READ&nbsp;=&nbsp;&H80000000<br>
Private&nbsp;Const&nbsp;FILE_SHARE_READ&nbsp;=&nbsp;&H1<br>
Private&nbsp;Const&nbsp;FILE_SHARE_WRITE&nbsp;=&nbsp;&H2<br>
Private&nbsp;Const&nbsp;OPEN_EXISTING&nbsp;=&nbsp;3<br>
Private&nbsp;Const&nbsp;INVALID_HANDLE_VALUE&nbsp;=&nbsp;-1<br>
<br>
'&nbsp;Retrieve&nbsp;the&nbsp;Create&nbsp;date,&nbsp;Modify&nbsp;(write)&nbsp;date&nbsp;and&nbsp;Last&nbsp;Access&nbsp;date&nbsp;of<br>
'&nbsp;the&nbsp;specified&nbsp;file.&nbsp;Returns&nbsp;True&nbsp;if&nbsp;successful,&nbsp;False&nbsp;otherwise.<br>
<br>
Function&nbsp;GetFileTimeInfo(ByVal&nbsp;FileName&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;CreateDate&nbsp;As&nbsp;Date,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;ModifyDate&nbsp;As&nbsp;Date,&nbsp;Optional&nbsp;LastAccessDate&nbsp;As&nbsp;Date)&nbsp;As&nbsp;Boolean<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;hFile&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftCreate&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftModify&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ftLastAccess&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ft&nbsp;As&nbsp;FILETIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;st&nbsp;As&nbsp;SYSTEMTIME<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;open&nbsp;the&nbsp;file,&nbsp;exit&nbsp;if&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;hFile&nbsp;=&nbsp;CreateFile(FileName,&nbsp;GENERIC_READ,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FILE_SHARE_READ&nbsp;Or&nbsp;FILE_SHARE_WRITE,&nbsp;0&,&nbsp;OPEN_EXISTING,&nbsp;0&,&nbsp;0&)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;hFile&nbsp;=&nbsp;INVALID_HANDLE_VALUE&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;read&nbsp;date&nbsp;information<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetFileTime(hFile,&nbsp;ftCreate,&nbsp;ftLastAccess,&nbsp;ftModify)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;non&nbsp;zero&nbsp;means&nbsp;successful<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetFileTimeInfo&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;convert&nbsp;result&nbsp;to&nbsp;date&nbsp;values<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;first,&nbsp;convert&nbsp;UTC&nbsp;file&nbsp;time&nbsp;to&nbsp;local&nbsp;file&nbsp;time<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftCreate,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;then&nbsp;convert&nbsp;to&nbsp;system&nbsp;time<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;finally,&nbsp;make&nbsp;up&nbsp;the&nbsp;Date&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;do&nbsp;the&nbsp;same&nbsp;for&nbsp;the&nbsp;ModifyDate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftModify,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModifyDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;and&nbsp;for&nbsp;LastAccessDate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToLocalFileTime&nbsp;ftLastAccess,&nbsp;ft<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileTimeToSystemTime&nbsp;ft,&nbsp;st<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastAccessDate&nbsp;=&nbsp;DateSerial(st.wYear,&nbsp;st.wMonth,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wDay)&nbsp;+&nbsp;TimeSerial(st.wHour,&nbsp;st.wMinute,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;st.wSecond)&nbsp;+&nbsp;(st.wMilliseconds&nbsp;/&nbsp;86400000)<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;close&nbsp;the&nbsp;file,&nbsp;in&nbsp;all&nbsp;cases<br>
&nbsp;&nbsp;&nbsp;&nbsp;CloseHandle&nbsp;hFile<br>
<br>
End&nbsp;Function<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0064"><b>GET FILE VERSION</b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Declare&nbsp;Function&nbsp;GetFileVersionInfoSize&nbsp;Lib&nbsp;"version.dll"&nbsp;Alias&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"GetFileVersionInfoSizeA"&nbsp;(ByVal&nbsp;lptstrFilename&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lpdwHandle&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Declare&nbsp;Function&nbsp;GetFileVersionInfo&nbsp;Lib&nbsp;"version.dll"&nbsp;Alias&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;"GetFileVersionInfoA"&nbsp;(ByVal&nbsp;lptstrFilename&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;dwHandle&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwLen&nbsp;As&nbsp;Long,&nbsp;lpData&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
<br>
Function&nbsp;GetFileVersionData(ByVal&nbsp;FileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Variant<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;length&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;handle&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;buffer&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;index&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;pos&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;=&nbsp;GetFileVersionInfoSize(FileName,&nbsp;handle)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;length&nbsp;=&nbsp;0&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;buffer&nbsp;=&nbsp;Space$(length)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;GetFileVersionInfo(FileName,&nbsp;handle,&nbsp;length,&nbsp;ByVal&nbsp;StrPtr(buffer))&nbsp;=&nbsp;0&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;res()&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;res()&nbsp;=&nbsp;Split("CompanyName;FileDescription;FileVersion;InternalName;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"LegalCopyright;OriginalFilename;ProductName;ProductVersion;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Comments;LegalTrademarks;PrivateBuild;SpecialBuild",&nbsp;";")<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;index&nbsp;=&nbsp;0&nbsp;To&nbsp;UBound(res)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos&nbsp;=&nbsp;InStr(buffer,&nbsp;res(index))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;pos&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos&nbsp;=&nbsp;pos&nbsp;+&nbsp;Len(res(index))&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Mid$(buffer,&nbsp;pos,&nbsp;1)&nbsp;=&nbsp;vbNullChar&nbsp;Then&nbsp;pos&nbsp;=&nbsp;pos&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res(index)&nbsp;=&nbsp;res(index)&nbsp;&&nbsp;":&nbsp;"&nbsp;&&nbsp;Mid$(buffer,&nbsp;pos,&nbsp;InStr(pos,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buffer,&nbsp;vbNullChar)&nbsp;-&nbsp;pos)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetFileVersionData&nbsp;=&nbsp;res()<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
Dim&nbsp;res&nbsp;As&nbsp;Variant<br>
res&nbsp;=&nbsp;GetFileVersionData(sFName)<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0065"><b>DISPLAY A LINE OF 16 BYTES OF DATA, HEX FOLLOWED BY DISPLAYABLE CHARS</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;ByteDisp(ByVal&nbsp;BO&nbsp;As&nbsp;Double,&nbsp;ByVal&nbsp;sIn&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
Dim&nbsp;sAddr&nbsp;As&nbsp;String<br>
Dim&nbsp;sHex&nbsp;As&nbsp;String<br>
<br>
Dim&nbsp;sChr&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;sHex&nbsp;=&nbsp;""<br>
&nbsp;&nbsp;&nbsp;&nbsp;sChr&nbsp;=&nbsp;""<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;1&nbsp;To&nbsp;32<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;x&nbsp;<=&nbsp;Len(sIn)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sHex&nbsp;=&nbsp;sHex&nbsp;&&nbsp;IIf(Len(Hex$(Asc(Mid(sIn,&nbsp;x,&nbsp;1))))&nbsp;=&nbsp;1,&nbsp;"0",&nbsp;"")&nbsp;&&nbsp;Hex$(Asc(Mid(sIn,&nbsp;x,&nbsp;1)))&nbsp;&&nbsp;"&nbsp;"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sChr&nbsp;=&nbsp;sChr&nbsp;&&nbsp;IIf(Asc(Mid(sIn,&nbsp;x,&nbsp;1))&nbsp;<&nbsp;32&nbsp;Or&nbsp;Asc(Mid(sIn,&nbsp;x,&nbsp;1))&nbsp;>&nbsp;126,&nbsp;".",&nbsp;Mid(sIn,&nbsp;x,&nbsp;1))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sHex&nbsp;=&nbsp;sHex&nbsp;&&nbsp;"&nbsp;&nbsp;&nbsp;"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sChr&nbsp;=&nbsp;sChr&nbsp;&&nbsp;"&nbsp;"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;sAddr&nbsp;=&nbsp;Hex$(BO)<br>
&nbsp;&nbsp;&nbsp;&nbsp;sAddr&nbsp;=&nbsp;String(10&nbsp;-&nbsp;Len(sAddr),&nbsp;"0")&nbsp;&&nbsp;sAddr<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByteDisp&nbsp;=&nbsp;sAddr&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;sHex&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;sChr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0066"><b>EMAIL USING MAPI WITH ATTACHMENTS</b></a></b></font><br>
<font face="Courier New" size="2">
Sub&nbsp;EmailUser(From&nbsp;As&nbsp;String,&nbsp;SendTo&nbsp;As&nbsp;String,&nbsp;Subject&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;EmailText&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;AttachmentPath&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;Attachment&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;CC&nbsp;As&nbsp;String)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;constRoutine&nbsp;As&nbsp;String&nbsp;=&nbsp;"SendEmail"<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;strSendTo&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;objSendMail&nbsp;As&nbsp;CDONTS.NewMail<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Integer<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;TryMAPI<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Do&nbsp;not&nbsp;cause&nbsp;the&nbsp;user&nbsp;a&nbsp;major&nbsp;error,&nbsp;just&nbsp;log&nbsp;the&nbsp;error&nbsp;and&nbsp;keep&nbsp;going<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;SendTo&nbsp;=&nbsp;""&nbsp;Then&nbsp;Exit&nbsp;Sub<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objSendMail&nbsp;=&nbsp;New&nbsp;CDONTS.NewMail<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;With&nbsp;objSendMail<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;Resume&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.From&nbsp;=&nbsp;From<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;CC&nbsp;<>&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.CC&nbsp;=&nbsp;CC<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.To&nbsp;=&nbsp;SendTo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Subject&nbsp;=&nbsp;Subject<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Body&nbsp;=&nbsp;EmailText<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AttachmentPath&nbsp;=&nbsp;Trim$(AttachmentPath)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;AttachmentPath&nbsp;<>&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Right$(AttachmentPath,&nbsp;1)&nbsp;<>&nbsp;"\"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AttachmentPath&nbsp;=&nbsp;AttachmentPath&nbsp;&&nbsp;"\"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AttachFile&nbsp;(AttachmentPath&nbsp;&&nbsp;Attachment)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Send<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;ExitMe<br>
<br>
TryMAPI:<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'If&nbsp;CDO&nbsp;fails,&nbsp;try&nbsp;MAPI<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;CC&nbsp;<>&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strSendTo&nbsp;=&nbsp;SendTo&nbsp;&&nbsp;";&nbsp;"&nbsp;&&nbsp;CC<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strSendTo&nbsp;=&nbsp;SendTo<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;SendEmailMAPI(SendTo:=strSendTo,&nbsp;Subject:=Subject,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EmailText:=EmailText)<br>
<br>
ExitMe:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objSendMail&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
<br>
ErrorHandler:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'Err.Raise&nbsp;Err.Number,&nbsp;Err.Source,&nbsp;Err.Description<br>
&nbsp;&nbsp;&nbsp;&nbsp;Resume&nbsp;ExitMe<br>
<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0067"><b>ANOTHER EMAIL MAPI</b></a></b></font><br>
<font face="Courier New" size="2">
Sub&nbsp;SendEmailMAPI(SendTo&nbsp;As&nbsp;String,&nbsp;Subject&nbsp;As&nbsp;String,&nbsp;EmailText&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Optional&nbsp;AttachmentPath&nbsp;As&nbsp;String,&nbsp;Optional&nbsp;Attachment&nbsp;As&nbsp;String)<br>
&nbsp;&nbsp;&nbsp;Const&nbsp;constRoutine&nbsp;As&nbsp;String&nbsp;=&nbsp;"SendEmailMAPI"<br>
<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;intStart&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;strSendTo&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;intEnd&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Integer<br>
<br>
&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;If&nbsp;frmEmailCommon.mapiSession.SessionID&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frmEmailCommon.mapiSession.SignOn<br>
&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;If&nbsp;SendTo&nbsp;=&nbsp;""&nbsp;Then&nbsp;Exit&nbsp;Sub<br>
<br>
&nbsp;&nbsp;&nbsp;With&nbsp;frmEmailCommon.mapiMessages<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.SessionID&nbsp;=&nbsp;frmEmailCommon.mapiSession.SessionID<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Compose<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Make&nbsp;sure&nbsp;that&nbsp;the&nbsp;SendTo&nbsp;always&nbsp;has&nbsp;a&nbsp;trailing&nbsp;semi-colon&nbsp;(makes&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;easier&nbsp;below)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Strip&nbsp;out&nbsp;any&nbsp;spaces&nbsp;between&nbsp;names&nbsp;for&nbsp;consistency<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(SendTo)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Mid$(SendTo,&nbsp;i,&nbsp;1)&nbsp;<>&nbsp;"&nbsp;"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strSendTo&nbsp;=&nbsp;strSendTo&nbsp;&&nbsp;Mid$(SendTo,&nbsp;i,&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;i<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SendTo&nbsp;=&nbsp;strSendTo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Right$(SendTo,&nbsp;1)&nbsp;<>&nbsp;";"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SendTo&nbsp;=&nbsp;SendTo&nbsp;&&nbsp;";"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Format&nbsp;each&nbsp;recipient,&nbsp;each&nbsp;are&nbsp;separated&nbsp;by&nbsp;a&nbsp;semi-colon,&nbsp;like&nbsp;this:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;&nbsp;steve.miller@aol.com;sm@psc.com;&nbsp;sm@teletech.com;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intEnd&nbsp;=&nbsp;InStr(1,&nbsp;SendTo,&nbsp;";")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.RecipAddress&nbsp;=&nbsp;Mid$(SendTo,&nbsp;1,&nbsp;intEnd&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ResolveName<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intStart&nbsp;=&nbsp;intEnd&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intEnd&nbsp;=&nbsp;InStr(intStart,&nbsp;SendTo,&nbsp;";")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;intEnd&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.RecipIndex&nbsp;=&nbsp;.RecipIndex&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.RecipAddress&nbsp;=&nbsp;Mid$(SendTo,&nbsp;intStart,&nbsp;intEnd&nbsp;-&nbsp;intStart)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ResolveName<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;intStart&nbsp;=&nbsp;intEnd&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loop<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.MsgSubject&nbsp;=&nbsp;Subject<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.MsgNoteText&nbsp;=&nbsp;EmailText<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Left$(Attachment,&nbsp;1)&nbsp;=&nbsp;"\"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attachment&nbsp;=&nbsp;Mid$(Attachment,&nbsp;2,&nbsp;Len(Attachment))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Attachment&nbsp;<>&nbsp;""&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Right$(AttachmentPath,&nbsp;1)&nbsp;=&nbsp;"\"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AttachmentPathName&nbsp;=&nbsp;AttachmentPath&nbsp;&&nbsp;Attachment<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AttachmentPathName&nbsp;=&nbsp;AttachmentPath&nbsp;&&nbsp;"\"&nbsp;&&nbsp;Attachment<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.AttachmentName&nbsp;=&nbsp;Attachment<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Send&nbsp;False<br>
&nbsp;&nbsp;&nbsp;End&nbsp;With<br>
<br>
ExitMe:<br>
&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
<br>
ErrorHandler:<br>
&nbsp;&nbsp;&nbsp;Err.Raise&nbsp;Err.Number,&nbsp;m_constPgm&nbsp;&&nbsp;constRoutine,&nbsp;Err.Description<br>
&nbsp;&nbsp;&nbsp;Resume&nbsp;ExitMe<br>
<br>
End&nbsp;Sub<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0068"><b>DAYS IN THE MONTHS</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;DaysInMonths(ByVal&nbsp;Yr&nbsp;As&nbsp;Integer)&nbsp;As&nbsp;Integer()<br>
Dim&nbsp;y&nbsp;As&nbsp;Integer,&nbsp;x&nbsp;As&nbsp;Integer,&nbsp;z(12)&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;x&nbsp;=&nbsp;1&nbsp;To&nbsp;12<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;31<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;Not&nbsp;IsDate(CStr(y)&nbsp;&&nbsp;"/"&nbsp;&&nbsp;CStr(x)&nbsp;&&nbsp;"/"&nbsp;&&nbsp;CStr(Yr))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;y&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z(x&nbsp;-&nbsp;1)&nbsp;=&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;DaysInMonths&nbsp;=&nbsp;z<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0069"><b>CONVERT GREG DATES TO JULIAN</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;ConvertToJulian(ByVal&nbsp;sIn&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;iYr&nbsp;As&nbsp;Integer,&nbsp;iMth&nbsp;As&nbsp;Integer,&nbsp;iDD&nbsp;As&nbsp;Integer,&nbsp;cDys&nbsp;As&nbsp;Integer<br>
Dim&nbsp;DM(12)&nbsp;As&nbsp;Integer,&nbsp;Leap&nbsp;As&nbsp;Boolean,&nbsp;x&nbsp;As&nbsp;Integer<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(0)&nbsp;=&nbsp;31:&nbsp;DM(2)&nbsp;=&nbsp;31<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(3)&nbsp;=&nbsp;30:&nbsp;DM(4)&nbsp;=&nbsp;31:&nbsp;DM(5)&nbsp;=&nbsp;30<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(6)&nbsp;=&nbsp;31:&nbsp;DM(7)&nbsp;=&nbsp;31:&nbsp;DM(8)&nbsp;=&nbsp;30<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(9)&nbsp;=&nbsp;31:&nbsp;DM(10)&nbsp;=&nbsp;30:&nbsp;DM(11)&nbsp;=&nbsp;31<br>
&nbsp;&nbsp;&nbsp;&nbsp;Leap&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;iYr&nbsp;=&nbsp;Format(sIn,&nbsp;"yyyy")<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(iYr&nbsp;Mod&nbsp;4&nbsp;=&nbsp;0&nbsp;And&nbsp;iYr&nbsp;Mod&nbsp;100&nbsp;>&nbsp;0)&nbsp;Or&nbsp;(iYr&nbsp;Mod&nbsp;100&nbsp;=&nbsp;0&nbsp;And&nbsp;iYr&nbsp;Mod&nbsp;400&nbsp;=&nbsp;0)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Leap&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(1)&nbsp;=&nbsp;IIf(Leap,&nbsp;29,&nbsp;28)<br>
&nbsp;&nbsp;&nbsp;&nbsp;iMth&nbsp;=&nbsp;Format(sIn,&nbsp;"mm")<br>
&nbsp;&nbsp;&nbsp;&nbsp;iDD&nbsp;=&nbsp;Format(sIn,&nbsp;"dd")<br>
&nbsp;&nbsp;&nbsp;&nbsp;cDys&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;x&nbsp;<&nbsp;iMth&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cDys&nbsp;=&nbsp;cDys&nbsp;+&nbsp;DM(x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;cDys&nbsp;=&nbsp;cDys&nbsp;+&nbsp;iDD<br>
&nbsp;&nbsp;&nbsp;&nbsp;ConvertToJulian&nbsp;=&nbsp;Format(sIn,&nbsp;"yyyy")&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;Format(cDys,&nbsp;"000")<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0070"><b>CONVERT JULIAN DATES TO GREGORIAN</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;ConvertFromJulian(ByVal&nbsp;sIn&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
Dim&nbsp;iYr&nbsp;As&nbsp;Integer,&nbsp;iMth&nbsp;As&nbsp;Integer,&nbsp;iDD&nbsp;As&nbsp;Integer,&nbsp;cDys&nbsp;As&nbsp;Integer<br>
Dim&nbsp;DM(12)&nbsp;As&nbsp;Integer,&nbsp;Leap&nbsp;As&nbsp;Boolean,&nbsp;x&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;cDys&nbsp;=&nbsp;CInt(Right(sIn,&nbsp;3))<br>
&nbsp;&nbsp;&nbsp;&nbsp;iYr&nbsp;=&nbsp;CInt(Left(sIn,&nbsp;Len(sIn)&nbsp;-&nbsp;3))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(0)&nbsp;=&nbsp;31:&nbsp;&nbsp;&nbsp;&nbsp;DM(2)&nbsp;=&nbsp;31<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(3)&nbsp;=&nbsp;30:&nbsp;&nbsp;&nbsp;&nbsp;DM(4)&nbsp;=&nbsp;31:&nbsp;&nbsp;&nbsp;&nbsp;DM(5)&nbsp;=&nbsp;30<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(6)&nbsp;=&nbsp;31:&nbsp;&nbsp;&nbsp;&nbsp;DM(7)&nbsp;=&nbsp;31:&nbsp;&nbsp;&nbsp;&nbsp;DM(8)&nbsp;=&nbsp;30<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(9)&nbsp;=&nbsp;31:&nbsp;&nbsp;&nbsp;&nbsp;DM(10)&nbsp;=&nbsp;30:&nbsp;&nbsp;&nbsp;&nbsp;DM(11)&nbsp;=&nbsp;31<br>
&nbsp;&nbsp;&nbsp;&nbsp;Leap&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;(iYr&nbsp;Mod&nbsp;4&nbsp;=&nbsp;0&nbsp;And&nbsp;iYr&nbsp;Mod&nbsp;100&nbsp;>&nbsp;0)&nbsp;Or&nbsp;(iYr&nbsp;Mod&nbsp;100&nbsp;=&nbsp;0&nbsp;And&nbsp;iYr&nbsp;Mod&nbsp;400&nbsp;=&nbsp;0)&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Leap&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;DM(1)&nbsp;=&nbsp;IIf(Leap,&nbsp;29,&nbsp;28)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;iMth&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;While&nbsp;cDys&nbsp;>&nbsp;DM(iMth)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cDys&nbsp;=&nbsp;cDys&nbsp;-&nbsp;DM(iMth)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iMth&nbsp;=&nbsp;iMth&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;Wend<br>
&nbsp;&nbsp;&nbsp;&nbsp;iMth&nbsp;=&nbsp;iMth&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;iDD&nbsp;=&nbsp;cDys<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;ConvertFromJulian&nbsp;=&nbsp;CStr(iDD)&nbsp;&&nbsp;"/"&nbsp;&&nbsp;CStr(iMth)&nbsp;&&nbsp;"/"&nbsp;&&nbsp;CStr(iYr)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0071"><b>GET USERID</b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Declare&nbsp;Function&nbsp;GetUserName&nbsp;Lib&nbsp;"advapi32.dll"&nbsp;Alias&nbsp;"GetUserNameA"&nbsp;(ByVal&nbsp;lpBuffer&nbsp;As&nbsp;String,&nbsp;nSize&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;Userid&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Length&nbsp;As&nbsp;Long<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;Get&nbsp;windows&nbsp;username<br>
&nbsp;&nbsp;&nbsp;&nbsp;Userid&nbsp;=&nbsp;"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;Length&nbsp;=&nbsp;8<br>
&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;=&nbsp;GetUserName(Userid,&nbsp;Length)<br>
&nbsp;&nbsp;&nbsp;&nbsp;GetUserId&nbsp;=&nbsp;UCase$(Left$(Userid,&nbsp;Length&nbsp;-&nbsp;1))<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0072"><b>DECIMAL TO ANY BASE</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;Dec2Any(ByVal&nbsp;number&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;base&nbsp;As&nbsp;Integer)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;index&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;digits&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;digitValue&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;check&nbsp;base<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;base&nbsp;<&nbsp;2&nbsp;Or&nbsp;base&nbsp;>&nbsp;36&nbsp;Then&nbsp;Err.Raise&nbsp;5<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;get&nbsp;the&nbsp;list&nbsp;of&nbsp;valid&nbsp;digits<br>
&nbsp;&nbsp;&nbsp;&nbsp;digits&nbsp;=&nbsp;Left("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",&nbsp;base)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;convert&nbsp;to&nbsp;the&nbsp;other&nbsp;base<br>
&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;While&nbsp;number<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;digitValue&nbsp;=&nbsp;number&nbsp;Mod&nbsp;base<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;=&nbsp;number&nbsp;\&nbsp;base<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dec2Any&nbsp;=&nbsp;Mid$(digits,&nbsp;digitValue&nbsp;+&nbsp;1,&nbsp;1)&nbsp;&&nbsp;Dec2Any<br>
&nbsp;&nbsp;&nbsp;&nbsp;Loop<br>
<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0073"><b>ANY BASE TO DECIMAL</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;Any2Dec(ByVal&nbsp;otherBaseNumber&nbsp;As&nbsp;String,&nbsp;ByVal&nbsp;base&nbsp;As&nbsp;Integer)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;index&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;digits&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;digitValue&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;check&nbsp;base<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;base&nbsp;<&nbsp;2&nbsp;Or&nbsp;base&nbsp;>&nbsp;36&nbsp;Then&nbsp;Err.Raise&nbsp;5<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;get&nbsp;the&nbsp;list&nbsp;of&nbsp;valid&nbsp;digits<br>
&nbsp;&nbsp;&nbsp;&nbsp;digits&nbsp;=&nbsp;Left("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",&nbsp;base)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;convert&nbsp;to&nbsp;decimal<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;index&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(otherBaseNumber)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;get&nbsp;the&nbsp;digit's&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;digitValue&nbsp;=&nbsp;InStr(1,&nbsp;digits,&nbsp;Mid$(otherBaseNumber,&nbsp;index,&nbsp;1),&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vbTextCompare)&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;error&nbsp;if&nbsp;invalid&nbsp;digit<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;digitValue&nbsp;<&nbsp;0&nbsp;Then&nbsp;Err.Raise&nbsp;5<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;add&nbsp;to&nbsp;running&nbsp;result<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Any2Dec&nbsp;=&nbsp;Any2Dec&nbsp;*&nbsp;base&nbsp;+&nbsp;digitValue<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0074"><b>HOW DO I CREATE CONTROLS DYNAMICALLY (AT RUN-TIME)?</b></a></b></font><br>
<font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;<br>
Private&nbsp;Sub&nbsp;Command1_Click()<br>
Dim&nbsp;x&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;NumControls("Label1")<br>
&nbsp;&nbsp;&nbsp;&nbsp;Load&nbsp;Label1(x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Label1(x).Left&nbsp;=&nbsp;Label1(x&nbsp;-&nbsp;1).Left<br>
&nbsp;&nbsp;&nbsp;&nbsp;Label1(x).Top&nbsp;=&nbsp;Label1(x&nbsp;-&nbsp;1).Height&nbsp;+&nbsp;Label1(x&nbsp;-&nbsp;1).Top&nbsp;+&nbsp;60<br>
&nbsp;&nbsp;&nbsp;&nbsp;Label1(x).Visible&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Sub<br>
<br>
Function&nbsp;NumControls(sName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Integer<br>
Dim&nbsp;x&nbsp;As&nbsp;Control<br>
&nbsp;&nbsp;&nbsp;&nbsp;NumControls&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;Each&nbsp;x&nbsp;In&nbsp;Me.Controls<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;x.Name&nbsp;=&nbsp;sName&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NumControls&nbsp;=&nbsp;NumControls&nbsp;+&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0075"><b>PREVENT MULTIPLE INSTANCES</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;App.PrevInstance&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SaveTitle$&nbsp;=&nbsp;App.Title<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App.Title&nbsp;=&nbsp;"...&nbsp;duplicate&nbsp;instance."<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form1.Caption&nbsp;=&nbsp;"...&nbsp;duplicate&nbsp;instance."<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AppActivate&nbsp;SaveTitle$<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SendKeys&nbsp;"%&nbsp;R",&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0076"><b>SHIFT KEY PRESSED?</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;GetAsyncKeyState&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;vKey&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Integer<br>
<br>
'&nbsp;The&nbsp;state&nbsp;of&nbsp;the&nbsp;Ctrl&nbsp;key<br>
Function&nbsp;CtrlKey()&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;CtrlKey&nbsp;=&nbsp;(GetAsyncKeyState(vbKeyControl)&nbsp;And&nbsp;&H8000)<br>
End&nbsp;Function<br>
<br>
'&nbsp;The&nbsp;state&nbsp;of&nbsp;either&nbsp;Shift&nbsp;keys<br>
Function&nbsp;ShiftKey()&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;ShiftKey&nbsp;=&nbsp;(GetAsyncKeyState(vbKeyShift)&nbsp;And&nbsp;&H8000)<br>
End&nbsp;Function<br>
<br>
'&nbsp;The&nbsp;state&nbsp;of&nbsp;the&nbsp;Alt&nbsp;key<br>
Function&nbsp;AltKey()&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;AltKey&nbsp;=&nbsp;(GetAsyncKeyState(vbKeyMenu)&nbsp;And&nbsp;&H8000)<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0077"><b>CHECK IS A PRINTER IS INSTALLED</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;PrinterIsInstalled()&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;dummy&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;Resume&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;dummy&nbsp;=&nbsp;Printer.DeviceName<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Err.Number&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"No&nbsp;default&nbsp;printer&nbsp;installed."&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"To&nbsp;install&nbsp;and&nbsp;select&nbsp;a&nbsp;default&nbsp;printer,&nbsp;select&nbsp;the&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Setting&nbsp;/&nbsp;Printers&nbsp;command&nbsp;in&nbsp;the&nbsp;Start&nbsp;menu,&nbsp;and&nbsp;then&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"double-click&nbsp;on&nbsp;the&nbsp;Add&nbsp;Printer&nbsp;icon.",&nbsp;vbExclamation,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Printer&nbsp;Error"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PrinterIsInstalled&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PrinterIsInstalled&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0078"><b>DRAG A CAPTIONLESS FORM</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;SendMessage&nbsp;Lib&nbsp;"User32"&nbsp;Alias&nbsp;"SendMessageA"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;hWnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wMsg&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lParam&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Sub&nbsp;ReleaseCapture&nbsp;Lib&nbsp;"User32"&nbsp;()<br>
<br>
Private&nbsp;Sub&nbsp;Form_MouseMove(Button&nbsp;As&nbsp;Integer,&nbsp;Shift&nbsp;As&nbsp;Integer,&nbsp;X&nbsp;As&nbsp;Single,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;As&nbsp;Single)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;WM_NCLBUTTONDOWN&nbsp;=&nbsp;&HA1<br>
&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;HTCAPTION&nbsp;=&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Button&nbsp;=&nbsp;1&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReleaseCapture<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SendMessage&nbsp;Me.hWnd,&nbsp;WM_NCLBUTTONDOWN,&nbsp;HTCAPTION,&nbsp;0&<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0079"><b>RETURN TRUE IF A FILE EXISTS</b></a></b></font><br>
<font face="Courier New" size="2">
<br>
Function&nbsp;FileExists(FileName&nbsp;As&nbsp;String)&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;ErrorHandler<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;get&nbsp;the&nbsp;attributes&nbsp;and&nbsp;ensure&nbsp;that&nbsp;it&nbsp;isn't&nbsp;a&nbsp;directory<br>
&nbsp;&nbsp;&nbsp;&nbsp;FileExists&nbsp;=&nbsp;(GetAttr(FileName)&nbsp;And&nbsp;vbDirectory)&nbsp;=&nbsp;0<br>
ErrorHandler:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;if&nbsp;an&nbsp;error&nbsp;occurs,&nbsp;this&nbsp;function&nbsp;returns&nbsp;False<br>
End&nbsp;Function<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0080"><b>CONVERT HEX TO DECIMAL</b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;HexToDec(HexValue&nbsp;As&nbsp;String)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;HexToDec&nbsp;=&nbsp;Val("&H"&nbsp;&&nbsp;HexValue)<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0081"><b>POP UP MENU FROM A TEXTBOX</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Text1_MouseDown(Button&nbsp;As&nbsp;Integer,&nbsp;Shift&nbsp;As&nbsp;Integer,&nbsp;X&nbsp;As&nbsp;Single,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;As&nbsp;Single)<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Button&nbsp;=&nbsp;vbRightButton&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;disable&nbsp;the&nbsp;textbox<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text1.Enabled&nbsp;=&nbsp;False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;(this&nbsp;DoEvents&nbsp;seems&nbsp;to&nbsp;be&nbsp;optional)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoEvents<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;re-enable&nbsp;the&nbsp;control,&nbsp;so&nbsp;that&nbsp;it&nbsp;doesn't&nbsp;appear&nbsp;as&nbsp;grayed<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text1.Enabled&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;show&nbsp;your&nbsp;custom&nbsp;menu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PopupMenu&nbsp;mnuFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
<br>
<br>
<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0082"><b>READ TEXT FILES IN ONE OPERATION</b></a></b></font><br>
<font face="Courier New" size="2">
'Text1.Text&nbsp;=&nbsp;FileText("c:\autoexec.bat")<br>
<br>
Function&nbsp;FileText(ByVal&nbsp;filename&nbsp;As&nbsp;String)&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;handle&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Len(Dir$(filename))&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Err.Raise&nbsp;53&nbsp;&nbsp;&nbsp;'&nbsp;File&nbsp;not&nbsp;found<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;handle&nbsp;=&nbsp;FreeFile<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;filename$&nbsp;For&nbsp;Binary&nbsp;As&nbsp;#handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;FileText&nbsp;=&nbsp;Space$(LOF(handle))<br>
&nbsp;&nbsp;&nbsp;&nbsp;Get&nbsp;#handle,&nbsp;,&nbsp;FileText<br>
&nbsp;&nbsp;&nbsp;&nbsp;Close&nbsp;#handle<br>
End&nbsp;Function<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0083"><b>FILE SYSTEM OBJECT</b></a></b></font><br>
<font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;FSO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;As&nbsp;New&nbsp;FileSystemObject<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;ts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;As&nbsp;TextStream<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;ts&nbsp;=&nbsp;FSO.OpenTextFile(msINIFileName,&nbsp;ForWriting)<br>
&nbsp;&nbsp;&nbsp;&nbsp;ts.WriteLine&nbsp;sString<br>
&nbsp;&nbsp;&nbsp;&nbsp;ts.Close<br>
<br>
	'requires&nbsp;scripting&nbsp;object&nbsp;reference<br>
<br>
	'get&nbsp;files&nbsp;in&nbsp;a&nbsp;directory<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;sLogDirectory&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;FSO&nbsp;As&nbsp;New&nbsp;FileSystemObject<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;Fol&nbsp;As&nbsp;Folder<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;fil&nbsp;As&nbsp;File<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;sLogDirectory&nbsp;=&nbsp;"c:\"<br>
&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;Fol&nbsp;=&nbsp;FSO.GetFolder(sLogDirectory)<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;Each&nbsp;fil&nbsp;In&nbsp;Fol.Files<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'do&nbsp;something&nbsp;with&nbsp;fil.Name<br>
&nbsp;&nbsp;&nbsp;&nbsp;Next<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0084"><b>HOWTO: USE CDO (1.X) TO READ MAPI ADDRESS BOOK PROPERTIES</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Command1_Click()<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;strServer&nbsp;=&nbsp;"MyServer"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Const&nbsp;strMailbox&nbsp;=&nbsp;"MyMailbox"<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;objSession&nbsp;As&nbsp;MAPI.Session<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;objAddrEntries&nbsp;As&nbsp;AddressEntries<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;objAddressEntry&nbsp;As&nbsp;AddressEntry<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;objFilter&nbsp;As&nbsp;AddressEntryFilter<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;strProfileInfo&nbsp;As&nbsp;String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strProfileInfo&nbsp;=&nbsp;strServer&nbsp;&&nbsp;vbLf&nbsp;&&nbsp;strMailbox<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objSession&nbsp;=&nbsp;CreateObject("MAPI.Session")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objSession.Logon&nbsp;,&nbsp;,&nbsp;False,&nbsp;False,&nbsp;,&nbsp;True,&nbsp;strProfileInfo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objAddrEntries&nbsp;=&nbsp;objSession.AddressLists&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("Global&nbsp;Address&nbsp;List").AddressEntries<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objFilter&nbsp;=&nbsp;objAddrEntries.Filter<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objFilter.Fields.Add&nbsp;CdoPR_SURNAME,&nbsp;"LastName"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objFilter.Fields.Add&nbsp;CdoPR_GIVEN_NAME,&nbsp;"FirstName"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Error&nbsp;Resume&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;Each&nbsp;objAddressEntry&nbsp;In&nbsp;objAddrEntries<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;objAddressEntry.Name<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"E-address:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Address<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Given&nbsp;Name:&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAddressEntry.Fields(CdoPR_GIVEN_NAME).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Initials:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_INITIALS).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Surname:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_SURNAME).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Display&nbsp;Name:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_DISPLAY_NAME).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Alias:&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAddressEntry.Fields(CdoPR_ACCOUNT).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Title:&nbsp;"&nbsp;&&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objAddressEntry.Fields(CdoPR_TITLE).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Company&nbsp;Name:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_COMPANY_NAME).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Office&nbsp;Location:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_OFFICE_LOCATION).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Office&nbsp;Phone&nbsp;1:&nbsp;"&nbsp;&&nbsp;&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_OFFICE_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Office&nbsp;Phone&nbsp;2:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_OFFICE2_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Business&nbsp;Fax:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_BUSINESS_FAX_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Mobile&nbsp;Phone:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_MOBILE_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Pager:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_PAGER_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Assistant:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_ASSISTANT).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Assistant&nbsp;Phone:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_ASSISTANT_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Phone&nbsp;1:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Phone&nbsp;2:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME2_TELEPHONE_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Fax:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_FAX_NUMBER).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Street:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_ADDRESS_STREET).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;City:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_ADDRESS_CITY).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;State:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_ADDRESS_STATE_OR_PROVINCE).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Postal&nbsp;Code:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_ADDRESS_POSTAL_CODE).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Home&nbsp;Country:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_HOME_ADDRESS_COUNTRY).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Manager&nbsp;Name:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Fields&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(CdoPR_MANAGER_NAME).Value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print&nbsp;"Manager&nbsp;Name:&nbsp;"&nbsp;&&nbsp;objAddressEntry.Manager<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objSession.Logoff<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objFilter&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objAddrEntries&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set&nbsp;objSession&nbsp;=&nbsp;Nothing<br>
&nbsp;&nbsp;&nbsp;End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0085"><b>HOWTO: GET WINDOWS NT DOMAIN\USERNAME OF EXCHANGE MAILBOX USING CDO/VB</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;LookupAccountSid&nbsp;Lib&nbsp;"advapi32.dll"&nbsp;Alias&nbsp;"LookupAccountSidA"&nbsp;(&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;lpSystemName&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;Sid&nbsp;As&nbsp;Any,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;name&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;cbName&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;ReferencedDomainName&nbsp;As&nbsp;String,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;cbReferencedDomainName&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;peUse&nbsp;As&nbsp;Integer&nbsp;_<br>
)&nbsp;As&nbsp;Long<br>
<br>
'This&nbsp;constant&nbsp;is&nbsp;not&nbsp;defined&nbsp;by&nbsp;CDO&nbsp;(1.2,&nbsp;1.21)<br>
Const&nbsp;CdoPR_EMS_AB_ASSOC_NT_ACCOUNT&nbsp;=&nbsp;&H80270102<br>
<br>
Private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;Dim&nbsp;objSession&nbsp;As&nbsp;New&nbsp;MAPI.Session<br>
&nbsp;&nbsp;Dim&nbsp;objMessage&nbsp;As&nbsp;MAPI.Message<br>
&nbsp;&nbsp;Dim&nbsp;objRecip&nbsp;As&nbsp;MAPI.Recipient<br>
&nbsp;&nbsp;Dim&nbsp;bByte()&nbsp;As&nbsp;Byte<br>
&nbsp;&nbsp;Dim&nbsp;tmp&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;Dim&nbsp;i&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;Dim&nbsp;ret&nbsp;As&nbsp;Boolean<br>
&nbsp;&nbsp;Dim&nbsp;strSID&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;Dim&nbsp;strName&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;Dim&nbsp;strDomain&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Logon&nbsp;to&nbsp;Session&nbsp;object<br>
&nbsp;&nbsp;objSession.Logon<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Get&nbsp;a&nbsp;recipient&nbsp;object<br>
&nbsp;&nbsp;Set&nbsp;objMessage&nbsp;=&nbsp;objSession.Outbox.Messages.Add<br>
&nbsp;&nbsp;Set&nbsp;objMessage.Recipients&nbsp;=&nbsp;objSession.AddressBook(OneAddress:=True)<br>
&nbsp;&nbsp;If&nbsp;objMessage.Recipients&nbsp;Is&nbsp;Nothing&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"No&nbsp;recipient&nbsp;has&nbsp;been&nbsp;chosen!"<br>
&nbsp;&nbsp;&nbsp;&nbsp;objSession.Logoff<br>
&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;Set&nbsp;objRecip&nbsp;=&nbsp;objMessage.Recipients(1)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Make&nbsp;sure&nbsp;it's&nbsp;a&nbsp;mailbox<br>
&nbsp;&nbsp;If&nbsp;Not&nbsp;objRecip.DisplayType&nbsp;=&nbsp;CdoUser&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Selection&nbsp;is&nbsp;not&nbsp;a&nbsp;mailbox&nbsp;owner"<br>
&nbsp;&nbsp;&nbsp;&nbsp;GoTo&nbsp;Finish<br>
&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Get&nbsp;the&nbsp;PR_EMS_AB_ASSOC_NT_ACCOUNT&nbsp;(&H80270102)&nbsp;field<br>
&nbsp;&nbsp;strSID&nbsp;=&nbsp;objRecip.AddressEntry.Fields(CdoPR_EMS_AB_ASSOC_NT_ACCOUNT).Value<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'The&nbsp;SID&nbsp;is&nbsp;stored&nbsp;in&nbsp;a&nbsp;hexadecimal&nbsp;representation&nbsp;of&nbsp;the&nbsp;binary&nbsp;SID<br>
&nbsp;&nbsp;'so&nbsp;we&nbsp;convert&nbsp;it&nbsp;and&nbsp;store&nbsp;it&nbsp;in&nbsp;a&nbsp;byte&nbsp;array<br>
&nbsp;&nbsp;tmp&nbsp;=&nbsp;Len(strSID)&nbsp;/&nbsp;2&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;ReDim&nbsp;bByte(tmp)&nbsp;As&nbsp;Byte<br>
&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;0&nbsp;To&nbsp;tmp&nbsp;-&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;bByte(i)&nbsp;=&nbsp;CInt("&h"&nbsp;&&nbsp;Mid(strSID,&nbsp;(i&nbsp;*&nbsp;2)&nbsp;+&nbsp;1,&nbsp;2))<br>
&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Allocate&nbsp;space&nbsp;for&nbsp;the&nbsp;strings&nbsp;so&nbsp;the&nbsp;API&nbsp;won't&nbsp;GPF<br>
&nbsp;&nbsp;strName&nbsp;=&nbsp;Space(64)<br>
&nbsp;&nbsp;strDomain&nbsp;=&nbsp;Space(64)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'Get&nbsp;the&nbsp;NT&nbsp;Domain&nbsp;and&nbsp;UserName<br>
&nbsp;&nbsp;'Note:&nbsp;This&nbsp;can't&nbsp;be&nbsp;done&nbsp;from&nbsp;VBScript&nbsp;directly<br>
&nbsp;&nbsp;'because&nbsp;VBScript&nbsp;doesn't&nbsp;support&nbsp;making&nbsp;the<br>
&nbsp;&nbsp;'LookupAccountSid&nbsp;API&nbsp;call<br>
&nbsp;&nbsp;ret&nbsp;=&nbsp;LookupAccountSid(vbNullString,&nbsp;bByte(0),&nbsp;strName,&nbsp;Len(strName),&nbsp;strDomain,&nbsp;Len(strDomain),&nbsp;iType)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;If&nbsp;ret&nbsp;Then&nbsp;'Strip&nbsp;the&nbsp;Null&nbsp;characters&nbsp;from&nbsp;the&nbsp;returned&nbsp;strings<br>
&nbsp;&nbsp;&nbsp;&nbsp;strDomain&nbsp;=&nbsp;Left(strDomain,&nbsp;InStr(strDomain,&nbsp;Chr(0))&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;strName&nbsp;=&nbsp;Left(strName,&nbsp;InStr(strName,&nbsp;Chr(0))&nbsp;-&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"NT&nbsp;Account:&nbsp;"&nbsp;&&nbsp;strDomain&nbsp;&&nbsp;"\"&nbsp;&&nbsp;strName<br>
&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Error&nbsp;calling&nbsp;LookupAccountSID:&nbsp;"&nbsp;&&nbsp;ret<br>
&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;<br>
Finish:<br>
&nbsp;&nbsp;objSession.Logoff<br>
&nbsp;&nbsp;Set&nbsp;objSession&nbsp;=&nbsp;Nothing<br>
End&nbsp;Sub&nbsp;<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0086"><b>GET WINDOWS DIRECTORY</b></a></b></font><br>
<font face="Courier New" size="2">
windowsDirectory&nbsp;=&nbsp;Environ$("windir")<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0087"><b>HIDE TASK FROM TASK LIST</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;RegisterServiceProcess&nbsp;Lib&nbsp;"kernel32.dll"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;dwProcessId&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;dwType&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetCurrentProcessId&nbsp;Lib&nbsp;"kernel32.dll"&nbsp;()&nbsp;As&nbsp;Long<br>
<br>
Sub&nbsp;ShowInTaskList(ByVal&nbsp;bShowInTaskList&nbsp;As&nbsp;Boolean)<br>
&nbsp;&nbsp;&nbsp;&nbsp;RegisterServiceProcess&nbsp;GetCurrentProcessId,&nbsp;IIf(bShowInTaskList,&nbsp;0,&nbsp;1))<br>
End&nbsp;Sub<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0088"><b>QUICKER THAN RS.FIELDS(X)</b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;rs&nbsp;As&nbsp;New&nbsp;ADODB.Recordset<br>
rs.Open&nbsp;"authors",&nbsp;"DSN=pubs"<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
'&nbsp;reference&nbsp;by&nbsp;field's&nbsp;name<br>
firstName&nbsp;=&nbsp;rs.Collect("au_fname")<br>
'&nbsp;reference&nbsp;by&nbsp;field's&nbsp;index<br>
rs.Collect(2)&nbsp;=&nbsp;"John&nbsp;Doe"<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0089"><b>FLASH A WINDOW</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;FlashWindow&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hWnd&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;ByVal&nbsp;bInvert&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
<br>
Private&nbsp;Sub&nbsp;cmdStartFlashing_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;start&nbsp;the&nbsp;flashing&nbsp;by&nbsp;enabling&nbsp;the&nbsp;timer<br>
&nbsp;&nbsp;&nbsp;&nbsp;Timer1.Interval&nbsp;=&nbsp;1000<br>
End&nbsp;Sub<br>
<br>
Private&nbsp;Sub&nbsp;cmdStopFlashing_Click()<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;disable&nbsp;the&nbsp;timer&nbsp;to&nbsp;stop&nbsp;the&nbsp;flashing,&nbsp;and&nbsp;restore&nbsp;regular&nbsp;caption<br>
&nbsp;&nbsp;&nbsp;&nbsp;Timer1.Interval&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;FlashWindow&nbsp;Me.hWnd,&nbsp;0<br>
End&nbsp;Sub<br>
<br>
Private&nbsp;Sub&nbsp;Timer1_Timer()<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&nbsp;toggle&nbsp;the&nbsp;caption&nbsp;status<br>
&nbsp;&nbsp;&nbsp;&nbsp;FlashWindow&nbsp;Me.hWnd,&nbsp;1<br>
End&nbsp;Sub<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0090"><b>WINGDINGS ARROWS</b></a></b></font><br>
<font face="Courier New" size="2">
Solid&nbsp;arrows<br>
Chr$(231)&nbsp;Left&nbsp;Arrow<br>
Chr$(232)&nbsp;Right&nbsp;Arrow<br>
Chr$(233)&nbsp;Up&nbsp;Arrow<br>
Chr$(234)&nbsp;Down&nbsp;Arrow<br>
Chr$(235)&nbsp;Up-Left&nbsp;Arrow<br>
Chr$(236)&nbsp;Up-Right&nbsp;Arrow<br>
Chr$(237)&nbsp;Down-Left&nbsp;Arrow<br>
Chr$(238)&nbsp;Down-Right&nbsp;Arrow<br>
<br>
Outlined&nbsp;arrows<br>
Chr$(239)&nbsp;Left&nbsp;Arrow<br>
Chr$(240)&nbsp;Right&nbsp;Arrow<br>
Chr$(241)&nbsp;Up&nbsp;Arrow<br>
Chr$(242)&nbsp;Down&nbsp;Arrow<br>
Chr$(245)&nbsp;Up-Left&nbsp;Arrow&nbsp;[note&nbsp;the&nbsp;gap&nbsp;here]<br>
Chr$(246)&nbsp;Up-Right&nbsp;Arrow<br>
Chr$(247)&nbsp;Down-Left&nbsp;Arrow<br>
Chr$(248)&nbsp;Down-Right&nbsp;Arrow<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0091"><b>LINES IN A MULTILINE TEXTBOX</b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Declare&nbsp;Function&nbsp;SendMessage&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;"SendMessageA"&nbsp;(ByVal&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wMsg&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;Long,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;lParam&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
Const&nbsp;EM_GETLINECOUNT&nbsp;=&nbsp;&HBA<br>
<br>
lineCount&nbsp;=&nbsp;SendMessage(Text1.hWnd,&nbsp;EM_GETLINECOUNT,&nbsp;0,&nbsp;ByVal&nbsp;0&)<br>
<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0092"><b>HOW TO IMPLEMENT HOTKEYS FOR TEXT BOXES? </b></a></b></font><br>
<font face="Courier New" size="2">
Create&nbsp;a&nbsp;label&nbsp;with&nbsp;your&nbsp;hotkey.&nbsp;Set&nbsp;the&nbsp;tabindex&nbsp;of&nbsp;the&nbsp;label&nbsp;<br>
to&nbsp;one&nbsp;less&nbsp;then&nbsp;the&nbsp;TabIndex&nbsp;of&nbsp;the&nbsp;textbox<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0093"><b>HOW TO CREATE A TEXTBOX THAT LETS YOU INSERT TABS? </b></a></b></font><br>
<font face="Courier New" size="2">
Simply&nbsp;set&nbsp;tabstop&nbsp;on&nbsp;all&nbsp;the&nbsp;controls&nbsp;in&nbsp;a&nbsp;particular&nbsp;form&nbsp;to&nbsp;false.<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0094"><b>HOW TO MAKE TEXT BOX THAT DISPLAYS "*" WHEN YOU TPYE IN (FOR PASSWORD PURPOSE)? </b></a></b></font><br>
<font face="Courier New" size="2">
Just&nbsp;set&nbsp;the&nbsp;PasswordChar&nbsp;property&nbsp;of&nbsp;the&nbsp;text&nbsp;box&nbsp;or&nbsp;rich&nbsp;text&nbsp;box&nbsp;to&nbsp;<br>
"*"&nbsp;or&nbsp;your&nbsp;favorite&nbsp;character.&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0095"><b>HOW TO CREATE MESSAGE BOXES WITH THOSE COOL RED X'S? </b></a></b></font><br>
<font face="Courier New" size="2">
MsgBox&nbsp;"My&nbsp;Message",&nbsp;vbCritical,&nbsp;"My&nbsp;Title"<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0096"><b>HOW TO FORMAT DATES SO THAT THEY LOOK CORRECT IN ALL DATE AND LANGAUGE FORMATS? </b></a></b></font><br>
<font face="Courier New" size="2">
Command1.Caption&nbsp;=&nbsp;Format$(Date,&nbsp;"Short&nbsp;Date")<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0097"><b>HOW TO COMPARE TWO STRINGS USING WILDCARDS? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;Mystr&nbsp;As&nbsp;String<br>
Mystr&nbsp;=&nbsp;"Street"<br>
If&nbsp;Mystr&nbsp;Like&nbsp;"S*"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Found"<br>
Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;MsgBox&nbsp;"Not&nbsp;found"<br>
End&nbsp;If<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0098"><b>HOW TO CREATE A LABEL THAT IS VERTICALLY ORIENTED? </b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Form_Activate()<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;s&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;&nbsp;Label1.Caption&nbsp;=&nbsp;"RAY'S&nbsp;VB&nbsp;LAND"<br>
&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(Label1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;s&nbsp;&&nbsp;Mid$(Label1,&nbsp;i,&nbsp;1)&nbsp;&&nbsp;vbCrLf&nbsp;<br>
&nbsp;&nbsp;&nbsp;Next<br>
&nbsp;&nbsp;&nbsp;Label1&nbsp;=&nbsp;s<br>
End&nbsp;Sub<br>
Note:&nbsp;You&nbsp;need&nbsp;to&nbsp;drag&nbsp;the&nbsp;Label1&nbsp;vertically<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0099"><b>HOW TO CREATE MULTI-COLUMN COMBO BOX? </b></a></b></font><br>
<font face="Courier New" size="2">
Add&nbsp;Microsoft&nbsp;Forms&nbsp;2.0&nbsp;control,&nbsp;there's&nbsp;a&nbsp;combo&nbsp;that&nbsp;<br>
supports&nbsp;multicolumns.<br>
Combo1.Clear<br>
Combo1.ColumnCount&nbsp;=&nbsp;2<br>
Combo1.ListWidth&nbsp;=&nbsp;"6&nbsp;cm"&nbsp;'Total&nbsp;width<br>
Combo1.ColumnWidths&nbsp;=&nbsp;"2&nbsp;cm;4&nbsp;cm"&nbsp;'Column&nbsp;widths<br>
Combo1.AddItem&nbsp;"Text&nbsp;in&nbsp;column&nbsp;0"<br>
Combo1.List(0,&nbsp;1)&nbsp;=&nbsp;"Text&nbsp;in&nbsp;column&nbsp;1"<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0100"><b>HOW TO SET THE SOURCE OF ONE COMBO TO BE THE CONTENTS OF ANOTHER COMBO? </b></a></b></font><br>
<font face="Courier New" size="2">
sub&nbsp;comboA_click()<br>
&nbsp;&nbsp;&nbsp;comboB.text&nbsp;=&nbsp;comboA.text<br>
end&nbsp;sub<br>
If&nbsp;you&nbsp;want&nbsp;the&nbsp;value&nbsp;selected&nbsp;in&nbsp;comboA&nbsp;to&nbsp;be&nbsp;added&nbsp;to&nbsp;the&nbsp;<br>
list&nbsp;of&nbsp;choices&nbsp;in&nbsp;comboB,&nbsp;the&nbsp;following&nbsp;code&nbsp;will&nbsp;do&nbsp;it:<br>
sub&nbsp;comboA_click()<br>
&nbsp;&nbsp;&nbsp;comboB.AddItem&nbsp;comboA.text<br>
end&nbsp;sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0101"><b>HOW TO GET RIDE OF THE QUOTATION MARKS WHEN SAVING STRINGS IN A TEXT FILE? </b></a></b></font><br>
<font face="Courier New" size="2">
Use&nbsp;the&nbsp;Print&nbsp;#&nbsp;statement&nbsp;instead&nbsp;of&nbsp;the&nbsp;Write&nbsp;#&nbsp;statement.&nbsp;<br>
The&nbsp;Print&nbsp;#&nbsp;statement&nbsp;doesn't&nbsp;put&nbsp;quotation&nbsp;marks&nbsp;around&nbsp;your&nbsp;strings.<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0102"><b>HOW TO INCLUDE A .WAV FILE IN A .EXE FILE? </b></a></b></font><br>
<font face="Courier New" size="2">
Use&nbsp;a&nbsp;resource&nbsp;file.&nbsp;Include&nbsp;the&nbsp;.wav&nbsp;file&nbsp;as&nbsp;a&nbsp;custom&nbsp;resource.&nbsp;<br>
Check&nbsp;the&nbsp;resource&nbsp;files&nbsp;in&nbsp;the&nbsp;help&nbsp;and&nbsp;look&nbsp;at&nbsp;the&nbsp;loadresdata&nbsp;<br>
function.<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0103"><b>HOW TO ENABLE THE FORM CLOSE BUTTON? </b></a></b></font><br>
<font face="Courier New" size="2">
dim&nbsp;bCanClose&nbsp;as&nbsp;Boolean<br>
Then&nbsp;put&nbsp;this&nbsp;into&nbsp;the&nbsp;form's&nbsp;QueryUnload&nbsp;event:<br>
If&nbsp;bCanClose&nbsp;=&nbsp;false&nbsp;then&nbsp;cancel&nbsp;=&nbsp;true<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0104"><b>HOW TO ADD TEXT ITEMS WITH A DIFFERENT COLOR IN A LISTBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
Use&nbsp;the&nbsp;MSFlexGrid&nbsp;control<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0105"><b>HOW TO LOAD TEXT FILE INTO A LISTBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
Statusbar1.Panels(1).Text&nbsp;=&nbsp;"Start"<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0106"><b>HOW TO CHANGE THE CONTENT OF A STATUSBAR AT RUN TIME? </b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Command1_Click()&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;StringHold&nbsp;As&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Open&nbsp;"C:\test.txt"&nbsp;For&nbsp;Input&nbsp;As&nbsp;#1&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;List1.Clear&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;While&nbsp;Not&nbsp;EOF(1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Input&nbsp;#1,&nbsp;StringHold&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List1.AddItem&nbsp;StringHold&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Wend&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Close&nbsp;#1<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0107"><b>HOW TO DETECT THE CHANGE IN THE TEXTBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;bChanged&nbsp;As&nbsp;Boolean<br>
Private&nbsp;Sub&nbsp;Text1_Change()&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;bChanged&nbsp;=&nbsp;True<br>
End&nbsp;SubPrivate&nbsp;<br>
Sub&nbsp;Form_Unload(Cancel&nbsp;As&nbsp;Boolean)&nbsp;<br>
&nbsp;&nbsp;&nbsp;If&nbsp;bChanged&nbsp;Then&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Msgbox("Save&nbsp;Changes?",&nbsp;vbYesNo,&nbsp;"Save")&nbsp;=&nbsp;vbYes&nbsp;Then&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Save&nbsp;Changes&nbsp;Here.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0108"><b>HOW TO MAKE A MENU POPUP FROM A COMMANDBUTTON? </b></a></b></font><br>
<font face="Courier New" size="2">
First,&nbsp;create&nbsp;a&nbsp;menu&nbsp;with&nbsp;the&nbsp;menu&nbsp;editor.&nbsp;<br>
It&nbsp;should&nbsp;look&nbsp;like&nbsp;this:<br>
Button&nbsp;Menu&nbsp;(Menu&nbsp;name:&nbsp;mnuBtn,&nbsp;Visible:&nbsp;False&nbsp;-&nbsp;Unchecked)<br>
....SubMenu&nbsp;Item&nbsp;1&nbsp;(Menu&nbsp;name:&nbsp;mnuSub,&nbsp;Index:&nbsp;0)<br>
....SubMenu&nbsp;Item&nbsp;2&nbsp;(Menu&nbsp;name:&nbsp;mnuSub,&nbsp;Index:&nbsp;1)<br>
....SubMenu&nbsp;Item&nbsp;3&nbsp;(Menu&nbsp;name:&nbsp;mnuSub,&nbsp;Index:&nbsp;2)<br>
....SubMenu&nbsp;Item&nbsp;4&nbsp;(Menu&nbsp;name:&nbsp;mnuSub,&nbsp;Index:&nbsp;3)<br>
I&nbsp;hope&nbsp;you&nbsp;understand&nbsp;the&nbsp;above.&nbsp;Also&nbsp;create&nbsp;a&nbsp;CommandButton.<br>
Then&nbsp;add&nbsp;this&nbsp;code:<br>
Private&nbsp;Sub&nbsp;mnuSub_Click(Index&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;Call&nbsp;MsgBox("Menu&nbsp;sub-item&nbsp;"&nbsp;&&nbsp;Index&nbsp;+&nbsp;1&nbsp;&&nbsp;"&nbsp;clicked!",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vbExclamation)<br>
End&nbsp;Sub<br>
Private&nbsp;Sub&nbsp;Command1_Click()<br>
&nbsp;&nbsp;&nbsp;Call&nbsp;PopupMenu(mnuBtn)&nbsp;<br>
End&nbsp;Sub<br>
P.S.&nbsp;For&nbsp;added&nbsp;effect,&nbsp;replace&nbsp;the&nbsp;line:<br>
Call&nbsp;PopupMenu(mnuBtn)&nbsp;<br>
With&nbsp;this&nbsp;one:<br>
Call&nbsp;PopupMenu(Menu:=mnuBtn,&nbsp;X:=Command1.Left,&nbsp;Y:=Command1.Top&nbsp;+&nbsp;_<br>
Command1.Height)&nbsp;'&nbsp;Even&nbsp;more&nbsp;viola!<br>
Or&nbsp;this&nbsp;one:<br>
Call&nbsp;PopupMenu(mnuBtn,&nbsp;vbPopupMenuCenterAlign,&nbsp;Command1.Left&nbsp;+&nbsp;_<br>
(Command1.Width&nbsp;/&nbsp;2),&nbsp;Command1.Top&nbsp;+&nbsp;Command1.Height)&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0109"><b>HOW TO COPY THE CONTENT OF TEXT1 INTO TEXT2? </b></a></b></font><br>
<font face="Courier New" size="2">
If&nbsp;you&nbsp;have&nbsp;VB6.0&nbsp;you&nbsp;can&nbsp;use&nbsp;the&nbsp;Replace&nbsp;Function&nbsp;to&nbsp;<br>
easily&nbsp;replace&nbsp;any&nbsp;Character(s)&nbsp;with&nbsp;something&nbsp;else,&nbsp;eg.<br>
Text2&nbsp;=&nbsp;Replace(Text1,&nbsp;vbCrLf,&nbsp;"<br>
"&nbsp;&&nbsp;vbCrLf)<br>
Otherwise,&nbsp;you'll&nbsp;need&nbsp;to&nbsp;step&nbsp;though&nbsp;the&nbsp;Text&nbsp;yourself&nbsp;<br>
checking&nbsp;for&nbsp;instances&nbsp;of&nbsp;vbCrLf,&nbsp;e.g.<br>
code:<br>
Dim&nbsp;sString&nbsp;As&nbsp;String<br>
Dim&nbsp;sNewString&nbsp;As&nbsp;Strings<br>
String&nbsp;=&nbsp;Text1<br>
While&nbsp;Instr(sString,&nbsp;vbCrLf)&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;sNewString&nbsp;=&nbsp;sNewString&nbsp;&&nbsp;Left(sString,&nbsp;_<br>
&nbsp;&nbsp;&nbsp;Instr(sString,&nbsp;vbCrLf)&nbsp;-&nbsp;1)&nbsp;&&nbsp;"<br>
"&nbsp;&&nbsp;vbCrLf&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;sString&nbsp;=&nbsp;Mid(sString,&nbsp;Instr(sString,&nbsp;vbCrLf)&nbsp;+&nbsp;2)<br>
Wend<br>
Text2&nbsp;=&nbsp;sNewString<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0110"><b>HOW TO ENCRYPT TEXT? </b></a></b></font><br>
<font face="Courier New" size="2">
encryption&nbsp;function&nbsp;:<br>
Public&nbsp;Function&nbsp;Encrypt(ByVal&nbsp;Plain&nbsp;As&nbsp;String)<br>
For&nbsp;I=1&nbsp;To&nbsp;Len(Plain)&nbsp;<br>
Letter=Mid(Plain,I,1)<br>
Mid(Plain,I,1)=Chr(Asc(Letter)+1)<br>
Next<br>
Encrypt&nbsp;=&nbsp;Plain<br>
End&nbsp;Sub<br>
Public&nbsp;Function&nbsp;Decrypt(ByVal&nbsp;Encrypted&nbsp;As&nbsp;String)<br>
For&nbsp;I=1&nbsp;to&nbsp;Len(Encrypted)&nbsp;<br>
Letter=Mid(Encrypted,I,1)<br>
Mid(Encrypted,I,1)=Chr(Asc(Letter)-1)<br>
Next<br>
Decrypt&nbsp;=&nbsp;Encrypted<br>
End&nbsp;Sub<br>
Print&nbsp;Encrypt("This&nbsp;is&nbsp;just&nbsp;an&nbsp;example")<br>
Print&nbsp;Decrypt("Uijt!jt!kvtu!bo!fybnqmf")<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0111"><b>HOW TO CREATE MENUS AT RUN TIME? </b></a></b></font><br>
<font face="Courier New" size="2">
&nbsp;&nbsp;Dim&nbsp;index&nbsp;As&nbsp;Integer&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;index&nbsp;=&nbsp;mnuHook.Count&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;Load&nbsp;mnuHook(index)<br>
&nbsp;&nbsp;mnuHook(index).Caption&nbsp;=&nbsp;"New&nbsp;Menu&nbsp;Entry"&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;mnuHook(index).Visible&nbsp;=&nbsp;True<br>
'mnuHook&nbsp;is&nbsp;the&nbsp;menu&nbsp;that&nbsp;the&nbsp;new&nbsp;entry&nbsp;appears&nbsp;after<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0112"><b>HOW TO PUT 13 X 13 BITMAPS INTO A MENU? </b></a></b></font><br>
<font face="Courier New" size="2">
'Add&nbsp;a&nbsp;picturebox&nbsp;control.&nbsp;<br>
'Set&nbsp;'Autosize'&nbsp;to&nbsp;'True'&nbsp;with&nbsp;a&nbsp;bitmap&nbsp;(not&nbsp;an&nbsp;Icon)&nbsp;<br>
'at&nbsp;a&nbsp;maximum&nbsp;of&nbsp;13X13.&nbsp;<br>
'Place&nbsp;these&nbsp;Declarations&nbsp;in&nbsp;BAS&nbsp;module<br>
Private&nbsp;Declare&nbsp;Function&nbsp;VarPtr&nbsp;Lib&nbsp;"VB40032.DLL"&nbsp;(variable&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetMenu&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;GetSubMenu&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hMenu&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nPos&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Private&nbsp;Declare&nbsp;Function&nbsp;SetMenuItemBitmaps&nbsp;Lib&nbsp;"user32"&nbsp;(ByVal&nbsp;hMenu&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;nPosition&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wFlags&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hBitmapUnchecked&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;hBitmapChecked&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Const&nbsp;MF_BYPOSITION&nbsp;=&nbsp;&H400&<br>
'Place&nbsp;this&nbsp;code&nbsp;into&nbsp;the&nbsp;form&nbsp;load&nbsp;event:<br>
Dim&nbsp;mHandle&nbsp;As&nbsp;Long,&nbsp;lRet&nbsp;As&nbsp;Long,&nbsp;sHandle&nbsp;As&nbsp;Long,&nbsp;sHandle2&nbsp;As&nbsp;Long<br>
mHandle&nbsp;=&nbsp;GetMenu(hwnd)<br>
sHandle&nbsp;=&nbsp;GetSubMenu(mHandle,&nbsp;0)<br>
lRet&nbsp;=&nbsp;SetMenuItemBitmaps(sHandle,&nbsp;0,&nbsp;MF_BYPOSITION,&nbsp;imOpen.Picture,&nbsp;imOpen.Picture)<br>
lRet&nbsp;=&nbsp;SetMenuItemBitmaps(sHandle,&nbsp;1,&nbsp;MF_BYPOSITION,&nbsp;imSave.Picture,&nbsp;imSave.Picture)<br>
lRet&nbsp;=&nbsp;SetMenuItemBitmaps(sHandle,&nbsp;3,&nbsp;MF_BYPOSITION,&nbsp;imPrint.Picture,&nbsp;imPrint.Picture)<br>
lRet&nbsp;=&nbsp;SetMenuItemBitmaps(sHandle,&nbsp;4,&nbsp;MF_BYPOSITION,&nbsp;imPrintSetup.Picture,&nbsp;imPrintSetup.Picture)<br>
sHandle&nbsp;=&nbsp;GetSubMenu(mHandle,&nbsp;1)<br>
sHandle2&nbsp;=&nbsp;GetSubMenu(sHandle,&nbsp;0)<br>
lRet&nbsp;=&nbsp;SetMenuItemBitmaps(sHandle2,&nbsp;0,&nbsp;MF_BYPOSITION,&nbsp;imCopy.Picture,&nbsp;imCopy.Picture)<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0113"><b>HOW TO ROUND A NUMBER TO NEAREST 10, 100, 1000, ETC.? </b></a></b></font><br>
<font face="Courier New" size="2">
'Example&nbsp;-&nbsp;round&nbsp;to&nbsp;nearest&nbsp;100<br>
&nbsp;&nbsp;Round(RatioBolus&nbsp;*&nbsp;Val(txtDW),&nbsp;100)<br>
'Put&nbsp;this&nbsp;in&nbsp;BAS&nbsp;module<br>
Public&nbsp;Function&nbsp;Round(Dose,&nbsp;Factor)<br>
'Purpose:&nbsp;Round&nbsp;a&nbsp;dose<br>
'Input:&nbsp;Dose,&nbsp;Factor&nbsp;(10,&nbsp;100,&nbsp;1000,&nbsp;etc)<br>
'Output:&nbsp;Rounded&nbsp;dose<br>
&nbsp;&nbsp;Dim&nbsp;Temp&nbsp;As&nbsp;Single<br>
&nbsp;&nbsp;Temp&nbsp;=&nbsp;Int(Dose&nbsp;/&nbsp;Factor)<br>
&nbsp;&nbsp;Round&nbsp;=&nbsp;Temp&nbsp;*&nbsp;Factor<br>
&nbsp;&nbsp;<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0114"><b>HOW TO SHELL TO WEB ADDRESS? </b></a></b></font><br>
<font face="Courier New" size="2">
'Put&nbsp;this&nbsp;in&nbsp;the&nbsp;click&nbsp;event&nbsp;of&nbsp;a&nbsp;control<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;iRet&nbsp;As&nbsp;Long&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;Response&nbsp;As&nbsp;Integer<br>
&nbsp;&nbsp;&nbsp;Response&nbsp;=&nbsp;MsgBox("You&nbsp;have&nbsp;chosen&nbsp;'www.rxkinetics.com',&nbsp;"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"which<br>
&nbsp;&nbsp;&nbsp;will&nbsp;launch&nbsp;your&nbsp;web&nbsp;browser&nbsp;and"&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"point&nbsp;you&nbsp;to&nbsp;the&nbsp;Kinetics&nbsp;web&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;site."&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;vbCrLf&nbsp;&&nbsp;"Do&nbsp;you&nbsp;wish&nbsp;to&nbsp;continue?",&nbsp;vbInformation&nbsp;+&nbsp;_<br>
&nbsp;&nbsp;&nbsp;vbYesNo,&nbsp;"www.rxkinetics.com")<br>
&nbsp;&nbsp;&nbsp;Select&nbsp;Case&nbsp;Response<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;vbYes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iRet&nbsp;=&nbsp;Shell("start.exe&nbsp;http://www.rxkinetics.com",&nbsp;vbNormal)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;vbNo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit&nbsp;Sub<br>
&nbsp;&nbsp;&nbsp;End&nbsp;Select<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0115"><b>HOW TO PERFORM GENERIC ERROR HANDLING ROUTINE? </b></a></b></font><br>
<font face="Courier New" size="2">
'Begin&nbsp;error&nbsp;handle&nbsp;code<br>
On&nbsp;Error&nbsp;GoTo&nbsp;ErrHandler<br>
'Insert&nbsp;code&nbsp;to&nbsp;be&nbsp;checked<br>
'Stop&nbsp;error&nbsp;trapping&nbsp;&&nbsp;exit&nbsp;function<br>
&nbsp;&nbsp;On&nbsp;Error&nbsp;GoTo&nbsp;0<br>
&nbsp;&nbsp;Exit&nbsp;Function<br>
ErrHandler:<br>
&nbsp;&nbsp;Dim&nbsp;strErr&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;strErr&nbsp;=&nbsp;"Error&nbsp;"&nbsp;&&nbsp;Err.Number&nbsp;&&nbsp;"&nbsp;"&nbsp;&&nbsp;Err.Description&nbsp;<br>
&nbsp;&nbsp;MsgBox&nbsp;strErr,&nbsp;vbCritical&nbsp;+&nbsp;vbOK,&nbsp;"Error&nbsp;message"<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0116"><b>HOW TO CHECK FOR 4-DIGIT YEAR DATE? </b></a></b></font><br>
<font face="Courier New" size="2">
Public&nbsp;Function&nbsp;ValidDate(MDate)<br>
'Purpose:&nbsp;Check&nbsp;for&nbsp;4&nbsp;digit&nbsp;yyyy&nbsp;DATE<br>
'Input:&nbsp;&nbsp;&nbsp;String&nbsp;from&nbsp;text&nbsp;box<br>
'Output:&nbsp;&nbsp;True&nbsp;or&nbsp;False<br>
'Default&nbsp;is&nbsp;false<br>
&nbsp;&nbsp;ValidDate&nbsp;=&nbsp;False<br>
'Exit&nbsp;if&nbsp;length&nbsp;less&nbsp;than&nbsp;"m/d/yyyy"<br>
&nbsp;&nbsp;If&nbsp;Len(MDate)&nbsp;<&nbsp;8&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;<br>
'Exit&nbsp;if&nbsp;not&nbsp;a&nbsp;valid&nbsp;date&nbsp;wrong<br>
&nbsp;&nbsp;If&nbsp;IsDate(MDate)&nbsp;=&nbsp;False&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;<br>
'Exit&nbsp;if&nbsp;not&nbsp;ending&nbsp;or&nbsp;starting&nbsp;with&nbsp;"yyyy"<br>
&nbsp;&nbsp;Dim&nbsp;StartDate&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;Dim&nbsp;EndDate&nbsp;As&nbsp;String<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;EndDate&nbsp;=&nbsp;Right(MDate,&nbsp;4)<br>
&nbsp;&nbsp;StartDate&nbsp;=&nbsp;Left(MDate,&nbsp;4)<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;If&nbsp;ValidChar(EndDate,&nbsp;"0123456789")&nbsp;=&nbsp;False&nbsp;And&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValidChar(StartDate,&nbsp;"0123456789")&nbsp;=&nbsp;False&nbsp;Then&nbsp;Exit&nbsp;Function<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
'Set&nbsp;to&nbsp;true&nbsp;if&nbsp;it&nbsp;passes&nbsp;all&nbsp;these&nbsp;tests!<br>
&nbsp;&nbsp;ValidDate&nbsp;=&nbsp;True<br>
End&nbsp;Function<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0117"><b>HOW TO CALCULATE THE AGE BASED ON DATE OF BIRTH? </b></a></b></font><br>
<font face="Courier New" size="2">
'Convert&nbsp;text&nbsp;to&nbsp;Date<br>
&nbsp;&nbsp;Dim&nbsp;Birth&nbsp;as&nbsp;Date<br>
&nbsp;&nbsp;Birth&nbsp;=&nbsp;DateValue(txtDOB)<br>
'Calculate&nbsp;age<br>
&nbsp;&nbsp;Dim&nbsp;Age&nbsp;as&nbsp;Integer<br>
&nbsp;&nbsp;Age&nbsp;=&nbsp;Int(DateDiff("D",&nbsp;Birth,&nbsp;Now)&nbsp;/&nbsp;365.25)<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0118"><b>HOW TO TELL THE DIFFERENCE BETWEEN CDBL AND VAL FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
print&nbsp;Val("12345")<br>
12345<br>
print&nbsp;Val("12,345")<br>
12<br>
print&nbsp;CDbl("12,345")<br>
12345<br>
print&nbsp;CDbl("12345")<br>
12345<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0119"><b>HOW TO CODE TOOLBAR CLICK EVENTS? </b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;Sub&nbsp;Toolbar1_ButtonClick(ByVal&nbsp;Button&nbsp;As&nbsp;Button)<br>
'Handle&nbsp;button&nbsp;clicks<br>
&nbsp;&nbsp;Select&nbsp;Case&nbsp;Button.Key<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Exit"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'If&nbsp;user&nbsp;clicks&nbsp;the&nbsp;No&nbsp;button,&nbsp;stop&nbsp;Exit<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0120"><b>MSGBOX TIPS</b></a></b></font><br>
<font face="Courier New" size="2">
If&nbsp;MsgBox("Do&nbsp;you&nbsp;want&nbsp;to&nbsp;exit?",&nbsp;vbQuestion&nbsp;+&nbsp;vbYesNo&nbsp;&nbsp;+&nbsp;_<br>
&nbsp;&nbsp;&nbsp;vbDefaultButton2,&nbsp;"Exiting&nbsp;Code&nbsp;Bank")&nbsp;=&nbsp;vbNo&nbsp;Then&nbsp;Exit&nbsp;Sub<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;ExitProgram<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Repair"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;Repairdb<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Delete"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;DeleteRoutine<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Edit"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;EditRoutine<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"New"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;NewRoutine<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Copy"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;CopyToClipboard<br>
&nbsp;&nbsp;&nbsp;&nbsp;Case&nbsp;Is&nbsp;=&nbsp;"Help"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Call&nbsp;ShowHelpContents<br>
&nbsp;&nbsp;End&nbsp;Select<br>
&nbsp;<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0121"><b>HOW TO COPY TEXT TO THE CLIPBOARD? </b></a></b></font><br>
<font face="Courier New" size="2">
'First&nbsp;clear&nbsp;the&nbsp;clipboard<br>
&nbsp;&nbsp;Clipboard.Clear<br>
'Select&nbsp;Text&nbsp;in&nbsp;txtBox&nbsp;&&nbsp;copy&nbsp;to&nbsp;clipboard<br>
&nbsp;&nbsp;Clipboard.SetText&nbsp;txtBox.Text,&nbsp;vbCFText<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0122"><b>HOW TO COPY TEXT FROM THE CLIPBOARD? </b></a></b></font><br>
<font face="Courier New" size="2">
'Select&nbsp;Text&nbsp;in&nbsp;txtBox&nbsp;&&nbsp;copy&nbsp;from&nbsp;clipboard<br>
&nbsp;&nbsp;&nbsp;txtBox.SelText&nbsp;=&nbsp;Clipboard.GetText&nbsp;<br>
'Or&nbsp;replace&nbsp;entire&nbsp;text<br>
&nbsp;&nbsp;&nbsp;txtBox.Text&nbsp;=&nbsp;Clipboard.GetText<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0123"><b>HOW TO USE UNDO FUNCTION FOR TEXTBOX OR COMBOBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
'Windows&nbsp;API&nbsp;provides&nbsp;an&nbsp;undo&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
'Do&nbsp;the&nbsp;following&nbsp;declares:<br>
&nbsp;&nbsp;Declare&nbsp;Function&nbsp;SendMessage&nbsp;Lib&nbsp;"User"&nbsp;(ByVal&nbsp;hWnd&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer,&nbsp;ByVal&nbsp;wMsg&nbsp;As&nbsp;Integer,&nbsp;ByVal&nbsp;wParam&nbsp;As&nbsp;_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer,&nbsp;lParam&nbsp;As&nbsp;Any)&nbsp;As&nbsp;Long<br>
&nbsp;&nbsp;Global&nbsp;Const&nbsp;WM_USER&nbsp;=&nbsp;&h400<br>
&nbsp;&nbsp;Global&nbsp;Const&nbsp;EM_UNDO&nbsp;=&nbsp;WM_USER&nbsp;+&nbsp;23<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
'And&nbsp;in&nbsp;your&nbsp;Undo&nbsp;Sub&nbsp;do&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;UndoResult&nbsp;=&nbsp;SendMessage(myControl.hWnd,&nbsp;EM_UNDO,&nbsp;0,&nbsp;0)<br>
&nbsp;'UndoResult&nbsp;=&nbsp;-1&nbsp;indicates&nbsp;an&nbsp;error.<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0124"><b>HOW TO TOGGLE BETWEEN INSERT & OVERWRITE IN A TEXT BOX? </b></a></b></font><br>
<font face="Courier New" size="2">
1.&nbsp;&nbsp;Put&nbsp;a&nbsp;label&nbsp;on&nbsp;the&nbsp;form&nbsp;called&nbsp;'lblOVR'<br>
2.&nbsp;&nbsp;Put&nbsp;this&nbsp;code&nbsp;in&nbsp;KeyUp&nbsp;event&nbsp;of&nbsp;Form<br>
&nbsp;&nbsp;Private&nbsp;Sub&nbsp;Form_KeyUp(KeyCode&nbsp;As&nbsp;Integer,&nbsp;Shift&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;KeyCode&nbsp;=&nbsp;vbKeyInsert&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lblOVR&nbsp;=&nbsp;"Over"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lblOVR&nbsp;=&nbsp;"Insert"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lblOVR&nbsp;=&nbsp;"Over"<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;End&nbsp;Sub<br>
3.&nbsp;&nbsp;Put&nbsp;this&nbsp;code&nbsp;in&nbsp;KeyPress&nbsp;event&nbsp;of&nbsp;Text&nbsp;Box<br>
&nbsp;&nbsp;Private&nbsp;Sub&nbsp;txtText_KeyPress(KeyAscii&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;&nbsp;'Exit&nbsp;if&nbsp;already&nbsp;selected<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;txtText.SelLength&nbsp;>&nbsp;0&nbsp;Then&nbsp;Exit&nbsp;Sub<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;lblOVR&nbsp;=&nbsp;"Over"&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;KeyAscii&nbsp;<>&nbsp;8&nbsp;And&nbsp;txtText.SelLength&nbsp;=&nbsp;0&nbsp;Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtText.SelLength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;'8=backspace<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txtText.SelLength&nbsp;=&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
&nbsp;&nbsp;End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0125"><b>HOW TO USE THE ADVANCED FEATURE OF MSGBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
'This&nbsp;method&nbsp;works&nbsp;well,&nbsp;unless&nbsp;you&nbsp;need&nbsp;to&nbsp;save&nbsp;the&nbsp;<br>
'answer&nbsp;from&nbsp;your&nbsp;Select&nbsp;Case&nbsp;for&nbsp;later&nbsp;use.&nbsp;If&nbsp;you&nbsp;do,&nbsp;<br>
'you'll&nbsp;need&nbsp;to&nbsp;use&nbsp;the&nbsp;more&nbsp;standard&nbsp;form&nbsp;of&nbsp;<br>
'prompting&nbsp;for&nbsp;the&nbsp;answer&nbsp;in&nbsp;a&nbsp;variable.&nbsp;<br>
&nbsp;&nbsp;Select&nbsp;Case&nbsp;MsgBox("Would&nbsp;you&nbsp;like&nbsp;to&nbsp;save&nbsp;the&nbsp;file&nbsp;somefile.txt?",&nbsp;_<br>
&nbsp;&nbsp;vbApplicationModal&nbsp;+&nbsp;vbQuestion&nbsp;+&nbsp;YesNoCancel,&nbsp;App.Title)<br>
&nbsp;&nbsp;Case&nbsp;vbYes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Save&nbsp;then&nbsp;file<br>
&nbsp;&nbsp;Case&nbsp;vbNo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Do&nbsp;something&nbsp;for&nbsp;No<br>
&nbsp;&nbsp;Case&nbsp;vbCancel<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Do&nbsp;something&nbsp;else&nbsp;for&nbsp;Cancel<br>
End&nbsp;Select<br>
'If&nbsp;only&nbsp;need&nbsp;yes/no&nbsp;answer&nbsp;then&nbsp;this&nbsp;code&nbsp;may<br>
'work&nbsp;better<br>
&nbsp;&nbsp;&nbsp;If&nbsp;MsgBox("Do&nbsp;you&nbsp;really&nbsp;want&nbsp;to&nbsp;exit&nbsp;Code&nbsp;Bank?",&nbsp;_<br>
&nbsp;&nbsp;&nbsp;vbQuestion&nbsp;+&nbsp;vbYesNo&nbsp;+&nbsp;vbDefaultButton2,&nbsp;"Exiting&nbsp;Code&nbsp;Bank")&nbsp;=&nbsp;vbNo&nbsp;Then&nbsp;Exit&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0126"><b>HOW TO CAPTURE KEYS PRESSED TO USE AS KEYBOARD SHORTCUTS? </b></a></b></font><br>
<font face="Courier New" size="2">
'Set&nbsp;the&nbsp;KeyPreview&nbsp;Property&nbsp;of&nbsp;the&nbsp;form&nbsp;to&nbsp;True<br>
'Put&nbsp;this&nbsp;code&nbsp;in&nbsp;the&nbsp;KeyDown&nbsp;even&nbsp;of&nbsp;the&nbsp;form<br>
'Look&nbsp;up&nbsp;Key&nbsp;code&nbsp;constants&nbsp;in&nbsp;VB&nbsp;help&nbsp;for&nbsp;other&nbsp;key&nbsp;codes<br>
Private&nbsp;Sub&nbsp;Form_KeyDown(KeyCode&nbsp;As&nbsp;Integer,&nbsp;Shift&nbsp;As&nbsp;Integer)<br>
&nbsp;&nbsp;'Capture&nbsp;Alt&nbsp;key<br>
&nbsp;&nbsp;&nbsp;Dim&nbsp;AltDown<br>
&nbsp;&nbsp;&nbsp;AltDown&nbsp;=&nbsp;(Shift&nbsp;And&nbsp;vbAltMask)&nbsp;>&nbsp;0<br>
&nbsp;&nbsp;'Alt&nbsp;+&nbsp;A&nbsp;=&nbsp;Shortcut&nbsp;for&nbsp;AddNew&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;If&nbsp;AltDown&nbsp;And&nbsp;KeyCode&nbsp;=&nbsp;vbKeyA&nbsp;Then&nbsp;&nbsp;&nbsp;'&nbsp;A&nbsp;=&nbsp;Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data1.Recordset.AddNew<br>
&nbsp;&nbsp;&nbsp;End&nbsp;If<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0127"><b>HOW TO CALL A COMMAND BUTTON WITHOUT CLICKING IT? </b></a></b></font><br>
<font face="Courier New" size="2">
cmdCommand&nbsp;=&nbsp;True<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0128"><b>HOW TO MAKE CRYSTAL REPORTS RUN FASTER? </b></a></b></font><br>
<font face="Courier New" size="2">
If&nbsp;Crystal&nbsp;Reports'&nbsp;speed&nbsp;is&nbsp;lacking&nbsp;although&nbsp;your&nbsp;report&nbsp;contains&nbsp;no&nbsp;large&nbsp;<br>
graphics&nbsp;or&nbsp;large&nbsp;numbers&nbsp;of&nbsp;groups,&nbsp;change&nbsp;these&nbsp;two&nbsp;lines&nbsp;in&nbsp;your&nbsp;CRW.INI&nbsp;<br>
file&nbsp;to&nbsp;solve&nbsp;disk&nbsp;swapping&nbsp;problems:&nbsp;<br>
MaxRecordMemory=0<br>
MetapageSpillLimit=100<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0129"><b>HOW TO FIX THE PROBLEM OF PLAYING THE .WAV FILE ONLY ONCE? </b></a></b></font><br>
<font face="Courier New" size="2">
Always&nbsp;include&nbsp;the&nbsp;"Close"&nbsp;statement&nbsp;before&nbsp;"Open"<br>
MMControl1.Command&nbsp;=&nbsp;"Close"<br>
MMControl1.Filename&nbsp;=&nbsp;"C:\1.mid"<br>
MMControl1.Command&nbsp;=&nbsp;"Open"<br>
MMControl1.Command&nbsp;=&nbsp;"Play"<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0130"><b>HOW TO SHOW A MODELESS FORM? </b></a></b></font><br>
<font face="Courier New" size="2">
frmPass.Show&nbsp;vbModeless<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0131"><b>HOW TO SHOW A MODAL FORM? </b></a></b></font><br>
<font face="Courier New" size="2">
frmPass.Show&nbsp;vbModal<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0132"><b>HOW TO CHANGE THE BUTTON'S FOREGROUND COLOR? </b></a></b></font><br>
<font face="Courier New" size="2">
To&nbsp;use&nbsp;the&nbsp;Microsoft&nbsp;Control:&nbsp;Microsoft&nbsp;Forms&nbsp;2.0&nbsp;Object&nbsp;Library<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0133"><b>HOW TO CHANGE THE MOUSE POINTER? </b></a></b></font><br>
<font face="Courier New" size="2">
Screen.MousePointer&nbsp;=&nbsp;0&nbsp;'Default<br>
Screen.MousePointer&nbsp;=&nbsp;11&nbsp;'Hourglass<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0134"><b>HOW TO USE SETATTR FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
SetAttr&nbsp;"C:\data.txt",&nbsp;vbNormal<br>
SetAttr&nbsp;"C:\data.txt",&nbsp;vbReadOnly<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0135"><b>HOW TO ADD SOMETHING TO AN EXISTING FILE BY OVERWRITING IT? </b></a></b></font><br>
<font face="Courier New" size="2">
Open&nbsp;"C:\data.txt"&nbsp;For&nbsp;output&nbsp;As&nbsp;#1<br>
Do&nbsp;While&nbsp;Not&nbsp;EOF(1)<br>
Print&nbsp;#1,&nbsp;"Overwrite&nbsp;the&nbsp;file!"<br>
Close&nbsp;#1<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0136"><b>HOW TO ADD SOMETHING TO AN EXISTING FILE (WITH DATA)? </b></a></b></font><br>
<font face="Courier New" size="2">
Open&nbsp;"C:\data.txt"&nbsp;For&nbsp;append&nbsp;As&nbsp;#1<br>
Do&nbsp;While&nbsp;Not&nbsp;EOF(1)<br>
Print&nbsp;#1,&nbsp;"Append&nbsp;Something!"<br>
Close&nbsp;#1<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0137"><b>HOW TO READ A FILE CHARACTER BY CHARACTER? </b></a></b></font><br>
<font face="Courier New" size="2">
Do&nbsp;While&nbsp;Not&nbsp;EOF(1)<br>
&nbsp;&nbsp;&nbsp;myChar&nbsp;=&nbsp;Input(1,&nbsp;#1)&nbsp;'one&nbsp;char&nbsp;a&nbsp;line<br>
&nbsp;&nbsp;&nbsp;WholeWord&nbsp;=&nbsp;WholeWord&nbsp;&&nbsp;myChar<br>
Loop<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0138"><b>HOW TO SEARCH LISTBOXES AS YOU TYPE? </b></a></b></font><br>
<font face="Courier New" size="2">
By&nbsp;changing&nbsp;the&nbsp;SendMessage&nbsp;Function's&nbsp;"ByVal&nbsp;wParam&nbsp;as&nbsp;Long"&nbsp;to&nbsp;<br>
"ByVal&nbsp;wParam&nbsp;as&nbsp;String",&nbsp;we&nbsp;change&nbsp;the&nbsp;search&nbsp;ability&nbsp;from&nbsp;first&nbsp;<br>
letter&nbsp;only,&nbsp;to&nbsp;"change-as-we-type"&nbsp;searching.&nbsp;<br>
Here's&nbsp;some&nbsp;example&nbsp;code.&nbsp;Start&nbsp;a&nbsp;new&nbsp;Standard&nbsp;EXE&nbsp;project&nbsp;and&nbsp;add&nbsp;<br>
a&nbsp;ListBox&nbsp;(List1)&nbsp;and&nbsp;a&nbsp;TextBox&nbsp;(Text1),&nbsp;then&nbsp;paste&nbsp;in&nbsp;the&nbsp;<br>
following&nbsp;code&nbsp;:&nbsp;<br>
option&nbsp;Explicit<br>
'Start&nbsp;a&nbsp;new&nbsp;Standard-EXE&nbsp;project.<br>
'Add&nbsp;a&nbsp;textbox&nbsp;and&nbsp;a&nbsp;listbox&nbsp;control&nbsp;to&nbsp;form&nbsp;1<br>
'Add&nbsp;the&nbsp;following&nbsp;code&nbsp;to&nbsp;form1:<br>
private&nbsp;Declare&nbsp;Function&nbsp;SendMessage&nbsp;Lib&nbsp;"User32"&nbsp;Alias&nbsp;"SendMessageA"&nbsp;<br>
(byval&nbsp;hWnd&nbsp;as&nbsp;Long,&nbsp;byval&nbsp;wMsg&nbsp;as&nbsp;Integer,&nbsp;byval&nbsp;wParam&nbsp;as&nbsp;string,&nbsp;<br>
lParam&nbsp;as&nbsp;Any)&nbsp;as&nbsp;Long<br>
Const&nbsp;LB_FINDSTRING&nbsp;=&nbsp;&H18F<br>
private&nbsp;Sub&nbsp;Form_Load()<br>
With&nbsp;List1<br>
&nbsp;&nbsp;&nbsp;&nbsp;.Clear<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"RAM"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"rams"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"RAMBO"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"ROM"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"Roma"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"Rome"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"Rommel"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"Cache"<br>
&nbsp;&nbsp;&nbsp;&nbsp;.AddItem&nbsp;"Cash"<br>
End&nbsp;With<br>
End&nbsp;Sub<br>
private&nbsp;Sub&nbsp;Text1_Change()<br>
&nbsp;&nbsp;&nbsp;&nbsp;List1.ListIndex&nbsp;=&nbsp;SendMessage(List1.hWnd,&nbsp;LB_FINDSTRING,&nbsp;Text1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
byval&nbsp;Text1.Text)<br>
End&nbsp;Sub<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0139"><b>HOW TO GET THE NUMBER OF LINES IN A TEXTBOX? </b></a></b></font><br>
<font face="Courier New" size="2">
This&nbsp;method&nbsp;is&nbsp;straightforward:&nbsp;it&nbsp;uses&nbsp;SendMessage&nbsp;to&nbsp;retrieve&nbsp;the&nbsp;<br>
number&nbsp;of&nbsp;lines&nbsp;in&nbsp;a&nbsp;textbox.&nbsp;A&nbsp;line&nbsp;to&nbsp;this&nbsp;method&nbsp;is&nbsp;defined&nbsp;as&nbsp;a&nbsp;<br>
new&nbsp;line&nbsp;after&nbsp;a&nbsp;word-wrap;&nbsp;it&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;number&nbsp;of&nbsp;hard&nbsp;<br>
returns&nbsp;in&nbsp;the&nbsp;text.<br>
Declarations&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
Public&nbsp;Declare&nbsp;Function&nbsp;SendMessageLong&nbsp;Lib&nbsp;"user32"&nbsp;Alias&nbsp;<br>
"SendMessageA"&nbsp;(ByVal&nbsp;hwnd&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;wMsg&nbsp;As&nbsp;Long,ByVal&nbsp;<br>
wParam&nbsp;As&nbsp;Long,&nbsp;ByVal&nbsp;lParam&nbsp;As&nbsp;Long)&nbsp;As&nbsp;Long<br>
Public&nbsp;Const&nbsp;EM_GETLINECOUNT&nbsp;=&nbsp;&HBA&nbsp;<br>
The&nbsp;Code&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
Sub&nbsp;Text1_Change()<br>
&nbsp;&nbsp;&nbsp;&nbsp;Dim&nbsp;lineCount&nbsp;as&nbsp;Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Local&nbsp;Error&nbsp;Resume&nbsp;Next<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;'get/show&nbsp;the&nbsp;number&nbsp;of&nbsp;lines&nbsp;in&nbsp;the&nbsp;edit&nbsp;control<br>
&nbsp;&nbsp;&nbsp;&nbsp;lineCount&nbsp;=&nbsp;SendMessageLong(Text1.hwnd,&nbsp;EM_GETLINECOUNT,&nbsp;0&,&nbsp;0&)<br>
&nbsp;&nbsp;&nbsp;&nbsp;Label1&nbsp;=&nbsp;Format$(lineCount,&nbsp;"##,###")<br>
End&nbsp;Sub&nbsp;<br>
Special&nbsp;Note&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
The&nbsp;textbox&nbsp;passed&nbsp;to&nbsp;the&nbsp;SendMessage&nbsp;API&nbsp;must&nbsp;have&nbsp;its&nbsp;multiline&nbsp;<br>
property&nbsp;set&nbsp;to&nbsp;true&nbsp;at&nbsp;design&nbsp;time.&nbsp;The&nbsp;EM_GETLINECOUNT&nbsp;message&nbsp;<br>
does&nbsp;not&nbsp;pass&nbsp;additional&nbsp;parameters&nbsp;to&nbsp;the&nbsp;API&nbsp;in&nbsp;the&nbsp;wParam&nbsp;or&nbsp;lParam&nbsp;<br>
variables.&nbsp;These&nbsp;must&nbsp;be&nbsp;0.&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0140"><b>HOW TO GET RID OF LEADING ZEROS IN STRINGS? </b></a></b></font><br>
<font face="Courier New" size="2">
Function&nbsp;KillZeros(incoming&nbsp;as&nbsp;string)&nbsp;as&nbsp;string&nbsp;<br>
&nbsp;&nbsp;&nbsp;KillZeros&nbsp;=&nbsp;CStr(CInt(incoming))&nbsp;<br>
End&nbsp;Function&nbsp;<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0141"><b>HOW TO USE MID FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;MyString,&nbsp;FirstWord,&nbsp;LastWord,&nbsp;MidWords<br>
MyString&nbsp;=&nbsp;"Mid&nbsp;Function&nbsp;Demo"	'&nbsp;Create&nbsp;text&nbsp;string.<br>
FirstWord&nbsp;=&nbsp;Mid(MyString,&nbsp;1,&nbsp;3)	'&nbsp;Returns&nbsp;"Mid".<br>
LastWord&nbsp;=&nbsp;Mid(MyString,&nbsp;14,&nbsp;4)	'&nbsp;Returns&nbsp;"Demo".<br>
MidWords&nbsp;=&nbsp;Mid(MyString,&nbsp;5)	'&nbsp;Returns&nbsp;"Function&nbsp;Demo".<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0142"><b>HOW TO USE LEFT FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;AnyString,&nbsp;MyStr<br>
AnyString&nbsp;=&nbsp;"Hello&nbsp;World"	'&nbsp;Define&nbsp;string.<br>
MyStr&nbsp;=&nbsp;Left(AnyString,&nbsp;1)	'&nbsp;Returns&nbsp;"H".<br>
MyStr&nbsp;=&nbsp;Left(AnyString,&nbsp;5)	'&nbsp;Returns&nbsp;"&nbsp;Hello".<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0143"><b>HOW TO USE RIGHT FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;AnyString,&nbsp;MyStr<br>
AnyString&nbsp;=&nbsp;"Hello&nbsp;World"	'&nbsp;Define&nbsp;string.<br>
MyStr&nbsp;=&nbsp;Right(AnyString,&nbsp;1)	'&nbsp;Returns&nbsp;"d".<br>
MyStr&nbsp;=&nbsp;Right(AnyString,&nbsp;6)	'&nbsp;Returns&nbsp;"&nbsp;World".<br>
MyStr&nbsp;=&nbsp;Right(AnyString,&nbsp;20)	'&nbsp;Returns&nbsp;"Hello&nbsp;World".<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0144"><b>HOW TO USE LTRIM, RTRIM, AND TRIM FUNCTIONS? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;MyString,&nbsp;TrimString<br>
MyString&nbsp;=&nbsp;"&nbsp;&nbsp;<-Trim->&nbsp;&nbsp;"	'&nbsp;Initialize&nbsp;string.<br>
TrimString&nbsp;=&nbsp;LTrim(MyString)	'&nbsp;TrimString&nbsp;=&nbsp;"<-Trim->&nbsp;&nbsp;".<br>
TrimString&nbsp;=&nbsp;RTrim(MyString)	'&nbsp;TrimString&nbsp;=&nbsp;"&nbsp;&nbsp;<-Trim->".<br>
TrimString&nbsp;=&nbsp;LTrim(RTrim(MyString))	'&nbsp;TrimString&nbsp;=&nbsp;"<-Trim->".<br>
'&nbsp;Using&nbsp;the&nbsp;Trim&nbsp;function&nbsp;alone&nbsp;achieves&nbsp;the&nbsp;same&nbsp;result.<br>
TrimString&nbsp;=&nbsp;Trim(MyString)	'&nbsp;TrimString&nbsp;=&nbsp;"<-Trim->".<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0145"><b>HOW TO USE LEN FUNCTION? </b></a></b></font><br>
<font face="Courier New" size="2">
Dim&nbsp;MyString<br>
MyString&nbsp;=&nbsp;"Hello&nbsp;World"	'&nbsp;Initialize&nbsp;variable.<br>
MyLen&nbsp;=&nbsp;Len(MyString)	'&nbsp;Returns&nbsp;11.<br>
<br>
</font><br>
<font face="Arial" size="2"><b><a href="#Top">Top</a> &nbsp;<a name="Tip0146"><b>HOW TO ADD RECORDS IN THE DATABASE? </b></a></b></font><br>
<font face="Courier New" size="2">
Private&nbsp;dbCurrent&nbsp;As&nbsp;Database<br>
Private&nbsp;recCategories&nbsp;As&nbsp;Recordset<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</font>
</body>
</html>
